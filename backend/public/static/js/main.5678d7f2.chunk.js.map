{"version":3,"sources":["redux/flow.reducer.js","modules/auth/auth.reducer.js","modules/report/report.reducer.js","modules/news/news.model.js","modules/news/news.reducer.js","modules/users/users.reducer.js","modules/questions/questions.model.js","modules/questions/questions.reducer.js","modules/answers/answers.model.js","modules/answers/answers.reducer.js","modules/hints/hints.model.js","modules/hints/hints.reducer.js","modules/user_hints/user_hints.model.js","modules/user_hints/user_hints.reducer.js","modules/achievements/achievements.reducer.js","modules/user_achievements/user_achievements.model.js","modules/user_achievements/user_achievements.reducer.js","redux/reducer.js","redux/store_config.js","components/ErrorHandler.jsx","components/Common.jsx","components/FormFields.jsx","modules/auth/index.jsx","components/Layout.jsx","components/Table.jsx","modules/users/users.model.js","modules/report/index.jsx","components/SelectLayout.jsx","modules/news/news.select.jsx","components/EditLayout.jsx","modules/news/news.edit.jsx","modules/news/index.jsx","modules/users/users.select.jsx","modules/users/users.edit.jsx","modules/users/index.jsx","modules/questions/questions.select.jsx","modules/questions/questions.choices.jsx","modules/questions/questions.edit.jsx","modules/questions/index.jsx","modules/answers/answers.select.jsx","modules/answers/answers.edit.jsx","modules/answers/index.jsx","modules/hints/hints.select.jsx","modules/hints/hints.fields.jsx","modules/hints/hints.edit.jsx","modules/hints/index.jsx","modules/user_hints/user_hints.select.jsx","modules/user_hints/user_hints.edit.jsx","modules/user_hints/index.jsx","modules/achievements/achievements.model.js","modules/achievements/achievements.select.jsx","modules/achievements/achievements.edit.jsx","modules/achievements/index.jsx","modules/user_achievements/user_achievements.select.jsx","modules/user_achievements/user_achievements.edit.jsx","modules/user_achievements/index.jsx","modules/settings/PasswordChange.jsx","modules/settings/DeveloperContact.jsx","modules/settings/index.jsx","modules/NotFound.jsx","Routes.jsx","index.js","App.jsx"],"names":["FLOW_ACTIONS","SELECTION_STATES","initialState","selectionState","selectionCode","undefined","selectionCarry","selectedEntity","selectionReceived","type","AUTH_ACTIONS","token","me","login","username","password","dispatch","_","API","post","then","resp","payload","data","fetchMe","logout","get","getMe","state","auth","isAuthenticated","access_token","REPORT_ACTIONS","News","id","label","image","is_active","print","a","Image","src","config","server_url","style","maxHeight","display","NEWS_ACTIONS","entityList","entity","fetchAllNews","searchParams","console","log","params","filter","Object","entries","length","keys","map","k","join","page","page_size","sortCol","sort","sortDir","fetchNews","USERS_ACTIONS","fetchUsers","fetchUser","Question","locale","options","key","text","value","title","time_type","answer_type","start_time","end_time","score","tries","images","choices","letters","letters_num","solutions","q","find","x","Date","toGMTString","QUESTIONS_ACTIONS","fetchQuestions","fetchQuestion","Answer","question_id","user_id","correct","to","ANSWERS_ACTIONS","fetchAnswers","fetchAnswer","Hint","price","HINTS_ACTIONS","fetchHints","fetchHint","UserHint","hint_id","USER_HINTS_ACTIONS","fetchUserHints","fetchUserHint","ACHIEVEMENTS_ACTIONS","fetchAchievements","fetchAchievement","UserAchievement","achievement_id","USER_ACHIEVEMENTS_ACTIONS","fetchUserAchievements","fetchUserAchievement","combineReducers","form","formReducer","flow","action","code","carry","report","news","users","questions","answers","hints","user_hints","achievements","user_achievements","persistConfig","persist_key","storage","whitelist","persistedReducer","persistReducer","reducer","Axios","create","baseURL","timeout","request_timeout","headers","Accept","store","createStore","applyMiddleware","thunk","withExtraArgument","persistor","persistStore","interceptors","request","use","Authorization","getState","getAccessToken","response","AlertTemplate","message","close","Message","onDismiss","content","paddingLeft","ErrorHandler","error","this","requestInterceptor","req","setState","responseInterceptor","res","props","alert","JSON","stringify","eject","errorInfo","children","React","Component","withAlert","Center","minHeight","alignItems","justifyContent","BackButton","history","useDispatch","textAlign","Button","icon","labelPosition","onClick","goBack","Icon","name","CHECKS","REQUIRED","v","MAX_LEN","maxLen","MIN_LEN","minLen","MAX_VAL","maxVal","MIN_VAL","minVal","InputField","input","meta","Form","Input","onChange","e","touched","invalid","MultiInputField","asNumber","values","parse","N","result","i","push","Number","color","preventDefault","splice","fluid","marginTop","Segment","raised","attached","inverted","circular","size","cursor","float","SelectField","Dropdown","selection","booleanOptions","EntityField","entityName","formName","useSelector","getFormValues","actionButton","as","Link","transit","initialize","Timestamp","date","moment","toDate","Label","selected","d","format","showTimeSelect","dateFormat","timeFormat","timeIntervals","height","FilePicker","inputEl","useRef","useState","setText","setImage","current","click","ref","accept","hidden","files","target","reader","FileReader","onload","ev","readAsDataURL","marginBottom","MultiFilePicker","path","file","setFile","open","setOpen","submitting","setSubmitting","maxWidth","marginRight","url","delete","Modal","trigger","onClose","Header","Content","disabled","loading","formData","FormData","append","saveFile","relative_path","finally","checkMinLen6","LoginForm","reduxForm","handleSubmit","pristine","onSubmit","Field","component","autoFocus","required","validate","primary","Auth","backgroundColor","width","connect","Navbar","withRouter","location","route","pathname","split","Menu","Item","active","link","item","indexOf","position","Layout","Container","margin","Row","schema","index","c","col","render","trueIcon","falseIcon","Column","cells","handleSort","sorted","sortable","header","Pagination","colSpan","pagination","current_page","last_page","per_page","setPage","setPageSize","pages","Table","HeaderCell","direction","marginLeft","minWidth","Statistic","floated","Value","MyTable","onSort","celled","headerRow","renderBodyRow","footerRow","tableData","User","phone","email","role","passwordConfirm","coin_1","coin_2","score_daily","score_weekly","level","ad_watch","Report","fetchReport","padded","server","Grid","columns","timestamp","toUTCString","count","ad_watch_count","top_daily","top_weekly","SearchResult","tableSchema","deleteAction","selectButton","setSelected","editButton","actions","negative","success","deleteButton","SelectLayout","SF","qs","search","fetchMethod","Fields","SearchFields","reset","secondary","initForms","submit","deleteNews","formProps","Group","widths","EditForm","isNew","enableReinitialize","EditLayout","NF","EF","fetchEntity","updateEntity","newEntity","match","resetEntity","NewFields","EditFields","initialValues","put","updateNews","newNews","exact","NewsSelect","NewsEdit","deleteUser","updateUser","newUser","Users","UserSelect","UserEdit","deleteQuestion","ChoicesField","obj","setObj","ChoiceRow","updateQuestion","newQuestion","Questions","QuestionSelect","QuestionEdit","deleteAnswer","updateAnswer","newAnswer","Answers","AnswerSelect","AnswerEdit","deleteHint","HintField","formValueSelector","ImageHint","updateHint","newHint","Hints","HintSelect","HintEdit","deleteUserHint","updateUserHint","newUserHint","UserHints","UserHintSelect","UserHintEdit","Achievement","deleteAchievement","updateAchievement","newAchievement","Achievements","AchievementSelect","AchievementEdit","deleteUserAchievement","updateUserAchievement","newUserAchievement","UserAchievements","UserAchievementSelect","UserAchievementEdit","PasswordChangeForm","PasswordChange","old_password","new_password","new_password_confirm","status","changePassword","DeveloperContact","Settings","panes","menuItem","Tab","Pane","menu","vertical","tabular","NotFound","mapStateToProps","AuthRoute","otherProps","UnAuthRoute","routerParams","pjson","homepage","basename","ReactDOM","template","positions","TOP_CENTER","transition","transitions","SCALE","document","getElementById"],"mappings":"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","file":"static/js/main.5678d7f2.chunk.js","sourcesContent":["\nexport const FLOW_ACTIONS = {\n  TRANSITION: \"flow/TRANSITION\",\n  SET_SELECTED: \"flow/SET_SELECTED\",\n  SELECTION_RECEIVED: \"flow/SELECTION_RECEIVED\",\n  RESET: \"flow/RESET\",\n};\n\nexport const SELECTION_STATES = {\n  IDLE: \"IDLE\",\n  SELECTING: \"SELECTING\",\n  SELECTED: \"SELECTED\",\n};\n\nconst initialState = {\n  selectionState: SELECTION_STATES.IDLE,\n  selectionCode: undefined,\n  selectionCarry: undefined,\n  selectedEntity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FLOW_ACTIONS.TRANSITION:\n      return {\n        ...state,\n        selectionState: SELECTION_STATES.SELECTING,\n        selectionCode: action.payload.code,\n        selectionCarry: action.payload.carry,\n        selectedEntity: undefined,\n      };\n    case FLOW_ACTIONS.SET_SELECTED:\n      return {\n        ...state,\n        selectionState: SELECTION_STATES.SELECTED,\n        selectedEntity: action.payload.entity,\n      };\n    case FLOW_ACTIONS.SELECTION_RECEIVED:\n      return {\n        ...state,\n        selectionState: SELECTION_STATES.IDLE,\n      };\n    case FLOW_ACTIONS.RESET:\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const transit = (code, carry) => ({\n  type: FLOW_ACTIONS.TRANSITION,\n  payload: { code, carry },\n});\n\nexport const setSelected = entity => ({\n  type: FLOW_ACTIONS.SET_SELECTED,\n  payload: { entity },\n});\n\nexport const selectionReceived = () => ({\n  type: FLOW_ACTIONS.SELECTION_RECEIVED,\n});\n\nexport const reset = () => ({\n  type: FLOW_ACTIONS.RESET,\n});\n","export const AUTH_ACTIONS = {\n  LOGIN: 'auth/LOGIN',\n  ME: 'auth/ME',\n  RESET: 'auth/RESET',\n};\n\nconst initialState = {\n  token: {},\n  me: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    case AUTH_ACTIONS.ME:\n      return {\n        ...state,\n        me: action.payload,\n      };\n    case AUTH_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const login = (username, password) => (dispatch, _, API) => {\n  return API.post('/login', { username, password })\n    .then(resp => {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN,\n        payload: !!resp ? resp.data : undefined,\n      });\n      dispatch(fetchMe());\n    });\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: AUTH_ACTIONS.RESET,\n  });\n};\n\nexport const fetchMe = () => (dispatch, _, API) => {\n  return API.get('/v1/me')\n    .then(resp => dispatch({\n      type: AUTH_ACTIONS.ME,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const changePassword = ({ old_password, new_password, new_password_confirm }) =>\n  (dispatch, getState, API) => {\n    if (new_password !== new_password_confirm) {\n      alert(\"تکرار رمز عبور اشتباه است\");\n      return;\n    }\n    return API.post('/password', { old_password, new_password }).then((res) => {\n      if (!!res && res.status === 200) {\n        dispatch(login(getMe(getState()).phone, new_password));\n        alert(\"رمز عبور با موفقیت تغییر کرد\");\n      }\n    });\n  }\n\n// --------- STATES ---------\n\nexport const getAccessToken = state => !!state.auth.token && state.auth.token.access_token;\nexport const getMe = state => state.auth.me;\nexport const isAuthenticated = state => !!state.auth.token && !!state.auth.token.access_token;\n","export const REPORT_ACTIONS = {\n  SET: \"report/SET\",\n  RESET: \"report/RESET\"\n};\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case REPORT_ACTIONS.SET:\n      return {\n        ...initialState,\n        ...action.payload\n      };\n    case REPORT_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const reset = () => ({\n  type: REPORT_ACTIONS.RESET\n});\n\nexport const fetchReport = () => (dispatch, _, API) => {\n  console.log(\"Fetching report\");\n  return API.get(`/admin/v1/report`).then(resp =>\n    dispatch({\n      type: REPORT_ACTIONS.SET,\n      payload: !!resp ? resp.data : undefined\n    })\n  );\n};\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nimport config from 'src/app.config.json';\n\nconst News = {\n  id: { label: \"شناسه\" },\n  image: { label: \"تصویر\" },\n  is_active: { label: \"فعال\" },\n};\n\nexport default News;\n\nexport const print = a => {\n  if (!!a.image) a.image = <Image src={`${config.server_url}storage/${a.image}`}\n    style={{ maxHeight: \"200px\", display: \"inline-block\" }} />;\n  return a;\n}\n","import { print } from \"./news.model\";\n\nexport const NEWS_ACTIONS = {\n  SET_ENTITY_LIST: 'news/SET_ENTITY_LIST',\n  SET_ENTITY: 'news/SET_ENTITY',\n  RESET: 'news/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case NEWS_ACTIONS.SET_ENTITY_LIST:\n      if (!action.payload) return state;\n      action.payload.data = action.payload.data.map(print);\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case NEWS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case NEWS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: NEWS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: NEWS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: NEWS_ACTIONS.RESET,\n});\n\nexport const fetchAllNews = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all news\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/news', { params })\n    .then(resp => dispatch({\n      type: NEWS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchNews = id => (dispatch, _, API) => {\n  console.log(\"Fetching news:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/news/${id}`)\n    .then(resp => dispatch({\n      type: NEWS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newNews = entity => (dispatch, _, API) => {\n  console.log(\"Creating news\");\n  if (!entity) return;\n  let formData = new FormData();\n  formData.append(\"file\", entity.image);\n  formData.append(\"path\", \"news_img\");\n  return API.post(\"files\", formData).then(resp => {\n    if (!resp) return;\n    entity.image = resp.data.relative_path;\n    return API.post(`/admin/v1/news`, entity);\n  });\n};\n\nexport const updateNews = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating news:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/news/${id}`, entity)\n    .then(resp => dispatch(fetchNews(id)));\n};\n\nexport const deleteNews = id => (dispatch, _, API) => {\n  console.log(\"Deleting news:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/news/${id}`)\n    .then(resp => dispatch(fetchAllNews()));\n};\n","export const USERS_ACTIONS = {\n  SET_ENTITY_LIST: 'users/SET_ENTITY_LIST',\n  SET_ENTITY: 'users/SET_ENTITY',\n  RESET: 'users/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USERS_ACTIONS.SET_ENTITY_LIST:\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case USERS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case USERS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: USERS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: USERS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: USERS_ACTIONS.RESET,\n});\n\nexport const fetchUsers = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all users\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/users', { params })\n    .then(resp => dispatch({\n      type: USERS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchUser = id => (dispatch, _, API) => {\n  console.log(\"Fetching user:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/users/${id}`)\n    .then(resp => dispatch({\n      type: USERS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newUser = entity => (dispatch, _, API) => {\n  console.log(\"Creating user\");\n  if (!entity) return;\n  return API.post(`/register`, entity);\n};\n\nexport const updateUser = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating user:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/users/${id}`, entity)\n    .then(resp => dispatch(fetchUser(id)));\n};\n\nexport const deleteUser = id => (dispatch, _, API) => {\n  console.log(\"Deleting user:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/users/${id}`)\n    .then(resp => dispatch(fetchUsers()));\n};\n","// import moment from 'moment-jalaali';\n\nconst Question = {\n  id: { label: \"شناسه\" },\n  locale: {\n    label: \"زبان\", options: [\n      { key: \"null\", text: \"\", value: undefined },\n      { key: \"en\", text: \"انگلیسی\", value: \"en\" },\n      { key: \"fa\", text: \"فارسی\", value: \"fa\" },\n    ]\n  },\n  title: { label: \"عنوان\" },\n  time_type: {\n    label: \"نوع زمان\", options: [\n      { key: \"null\", text: \"\", value: undefined },\n      { key: \"daily\", text: \"روزانه\", value: \"daily\" },\n      { key: \"weekly\", text: \"هفتگی\", value: \"weekly\" },\n    ]\n  },\n  answer_type: {\n    label: \"نوع پاسخ\", options: [\n      { key: \"null\", text: \"\", value: undefined },\n      { key: \"text\", text: \"متنی\", value: \"text\" },\n      { key: \"choice\", text: \"گزینه‌ای\", value: \"choice\" },\n      { key: \"letter\", text: \"حروفی\", value: \"letter\" },\n    ]\n  },\n  start_time: { label: \"تاریخ شروع\" },\n  end_time: { label: \"تاریخ پایان\" },\n  score: { label: \"امتیاز\" },\n  tries: { label: \"تعداد تلاش\" },\n  images: { label: \"تصاویر\" },\n  choices: { label: \"گزینه‌ها\" },\n  letters: { label: \"حروف\" },\n  letters_num: { label: \"تعداد حروف\" },\n  solutions: { label: \"جواب‌ها\" },\n};\n\nexport default Question;\n\nexport const print = q => {\n  q.time_type = Question.time_type.options.find(x => x.value === q.time_type);\n  if (!!q.time_type) q.time_type = q.time_type.text;\n  q.answer_type = Question.answer_type.options.find(x => x.value === q.answer_type);\n  if (!!q.answer_type) q.answer_type = q.answer_type.text;\n  // if (q.start_time) q.start_time = moment(q.start_time, 'YYYY-MM-DD HH:mm:ss').format('jYYYY/jMM/jDD');\n  // if (q.end_time) q.end_time = moment(q.end_time, 'YYYY-MM-DD HH:mm:ss').format('jYYYY/jMM/jDD');\n  if (q.start_time) q.start_time = (new Date(q.start_time)).toGMTString();\n  if (q.end_time) q.end_time = (new Date(q.end_time)).toGMTString();\n  return q;\n}\n","import { print } from \"./questions.model\";\n\nexport const QUESTIONS_ACTIONS = {\n  SET_ENTITY_LIST: 'questions/SET_ENTITY_LIST',\n  SET_ENTITY: 'questions/SET_ENTITY',\n  RESET: 'questions/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case QUESTIONS_ACTIONS.SET_ENTITY_LIST:\n      if (!action.payload) return state;\n      action.payload.data = action.payload.data.map(print);\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case QUESTIONS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case QUESTIONS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: QUESTIONS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: QUESTIONS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: QUESTIONS_ACTIONS.RESET,\n});\n\nexport const fetchQuestions = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all questions\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/questions', { params })\n    .then(resp => dispatch({\n      type: QUESTIONS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchQuestion = id => (dispatch, _, API) => {\n  console.log(\"Fetching question:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/questions/${id}`)\n    .then(resp => dispatch({\n      type: QUESTIONS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newQuestion = entity => (dispatch, _, API) => {\n  console.log(\"Creating question\");\n  if (!entity) return;\n  return API.post(`/admin/v1/questions`, entity);\n};\n\nexport const updateQuestion = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating question:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/questions/${id}`, entity)\n    .then(resp => dispatch(fetchQuestion(id)));\n};\n\nexport const deleteQuestion = id => (dispatch, _, API) => {\n  console.log(\"Deleting question:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/questions/${id}`)\n    .then(resp => dispatch(fetchQuestions()));\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Answer = {\n  id: { label: \"شناسه\" },\n  question_id: { label: \"شناسه سؤال\" },\n  user_id: { label: \"شناسه کاربر\" },\n  text: { label: \"متن\" },\n  correct: { label: \"درستی\" },\n};\n\nexport default Answer;\n\nexport const print = a => {\n  a.question_id = <Link to={`/questions/${a.question_id}`}>{a.question_id}</Link>\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>\n  return a;\n}\n","import { print } from \"./answers.model\";\n\nexport const ANSWERS_ACTIONS = {\n  SET_ENTITY_LIST: 'answers/SET_ENTITY_LIST',\n  SET_ENTITY: 'answers/SET_ENTITY',\n  RESET: 'answers/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ANSWERS_ACTIONS.SET_ENTITY_LIST:\n      if (!action.payload) return state;\n        action.payload.data = action.payload.data.map(print);\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case ANSWERS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case ANSWERS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: ANSWERS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: ANSWERS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: ANSWERS_ACTIONS.RESET,\n});\n\nexport const fetchAnswers = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all answers\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/answers', { params })\n    .then(resp => dispatch({\n      type: ANSWERS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchAnswer = id => (dispatch, _, API) => {\n  console.log(\"Fetching answer:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/answers/${id}`)\n    .then(resp => dispatch({\n      type: ANSWERS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newAnswer = entity => (dispatch, _, API) => {\n  console.log(\"Creating answer\");\n  if (!entity) return;\n  return API.post(`/admin/v1/answers`, entity);\n};\n\nexport const updateAnswer = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating answer:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/answers/${id}`, entity)\n    .then(resp => dispatch(fetchAnswer(id)));\n};\n\nexport const deleteAnswer = id => (dispatch, _, API) => {\n  console.log(\"Deleting answer:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/answers/${id}`)\n    .then(resp => dispatch(fetchAnswers()));\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'semantic-ui-react';\n\nimport config from 'src/app.config.json';\n\n\nconst Hint = {\n  id: { label: \"شناسه\" },\n  question_id: { label: \"شناسه سؤال\" },\n  type: {\n    label: \"نوع\", options: [\n      { key: \"null\", text: \"\", value: undefined },\n      { key: \"image\", text: \"تصویر\", value: \"image\" },\n      { key: \"choice\", text: \"گزینه\", value: \"choice\" },\n      { key: \"letter\", text: \"حروف\", value: \"letter\" },\n      { key: \"try\", text: \"تلاش\", value: \"try\" },\n      // { key: \"time\", text: \"زمان\", value: \"time\" },\n    ]\n  },\n  value: { label: \"مقدار\" },\n  price: { label: \"قیمت\" },\n};\n\nexport default Hint;\n\nexport const print = a => {\n  a.question_id = <Link to={`/questions/${a.question_id}`}>{a.question_id}</Link>;\n  if (a.type === \"image\" && !!a.value) a.value = <Image src={`${config.server_url}storage/${a.value}`}\n    style={{ maxHeight: \"200px\", display: \"inline-block\" }} />;\n  return a;\n}\n","import { print } from \"./hints.model\";\n\nexport const HINTS_ACTIONS = {\n  SET_ENTITY_LIST: 'hints/SET_ENTITY_LIST',\n  SET_ENTITY: 'hints/SET_ENTITY',\n  RESET: 'hints/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case HINTS_ACTIONS.SET_ENTITY_LIST:\n      if (!action.payload) return state;\n        action.payload.data = action.payload.data.map(print);\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case HINTS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case HINTS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: HINTS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: HINTS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: HINTS_ACTIONS.RESET,\n});\n\nexport const fetchHints = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all hints\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/hints', { params })\n    .then(resp => dispatch({\n      type: HINTS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchHint = id => (dispatch, _, API) => {\n  console.log(\"Fetching hint:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/hints/${id}`)\n    .then(resp => dispatch({\n      type: HINTS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newHint = entity => (dispatch, _, API) => {\n  console.log(\"Creating hint\");\n  if (!entity) return;\n  return API.post(`/admin/v1/hints`, entity);\n};\n\nexport const updateHint = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating hint:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/hints/${id}`, entity)\n    .then(resp => dispatch(fetchHint(id)));\n};\n\nexport const deleteHint = id => (dispatch, _, API) => {\n  console.log(\"Deleting hint:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/hints/${id}`)\n    .then(resp => dispatch(fetchHints()));\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserHint = {\n  id: { label: \"شناسه\" },\n  hint_id: { label: \"شناسه راهنمایی\" },\n  user_id: { label: \"شناسه کاربر\" },\n};\n\nexport default UserHint;\n\nexport const print = a => {\n  a.hint_id = <Link to={`/hints/${a.hint_id}`}>{a.hint_id}</Link>;\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>;\n  return a;\n}\n","import { print } from \"./user_hints.model\";\n\nexport const USER_HINTS_ACTIONS = {\n  SET_ENTITY_LIST: 'user_hints/SET_ENTITY_LIST',\n  SET_ENTITY: 'user_hints/SET_ENTITY',\n  RESET: 'user_hints/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USER_HINTS_ACTIONS.SET_ENTITY_LIST:\n      if (!action.payload) return state;\n        action.payload.data = action.payload.data.map(print);\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case USER_HINTS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case USER_HINTS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: USER_HINTS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: USER_HINTS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: USER_HINTS_ACTIONS.RESET,\n});\n\nexport const fetchUserHints = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all user_hints\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/user_hints', { params })\n    .then(resp => dispatch({\n      type: USER_HINTS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchUserHint = id => (dispatch, _, API) => {\n  console.log(\"Fetching user_hint:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/user_hints/${id}`)\n    .then(resp => dispatch({\n      type: USER_HINTS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newUserHint = entity => (dispatch, _, API) => {\n  console.log(\"Creating user_hint\");\n  if (!entity) return;\n  return API.post(`/admin/v1/user_hints`, entity);\n};\n\nexport const updateUserHint = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating user_hint:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/user_hints/${id}`, entity)\n    .then(resp => dispatch(fetchUserHint(id)));\n};\n\nexport const deleteUserHint = id => (dispatch, _, API) => {\n  console.log(\"Deleting user_hint:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/user_hints/${id}`)\n    .then(resp => dispatch(fetchUserHints()));\n};\n","\nexport const ACHIEVEMENTS_ACTIONS = {\n  SET_ENTITY_LIST: 'achievements/SET_ENTITY_LIST',\n  SET_ENTITY: 'achievements/SET_ENTITY',\n  RESET: 'achievements/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST:\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case ACHIEVEMENTS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case ACHIEVEMENTS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: ACHIEVEMENTS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: ACHIEVEMENTS_ACTIONS.RESET,\n});\n\nexport const fetchAchievements = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all achievements\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/achievements', { params })\n    .then(resp => dispatch({\n      type: ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchAchievement = id => (dispatch, _, API) => {\n  console.log(\"Fetching achievement:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/achievements/${id}`)\n    .then(resp => dispatch({\n      type: ACHIEVEMENTS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newAchievement = entity => (dispatch, _, API) => {\n  console.log(\"Creating achievement\");\n  if (!entity) return;\n  return API.post(`/admin/v1/achievements`, entity);\n};\n\nexport const updateAchievement = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating achievement:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/achievements/${id}`, entity)\n    .then(resp => dispatch(fetchAchievement(id)));\n};\n\nexport const deleteAchievement = id => (dispatch, _, API) => {\n  console.log(\"Deleting achievement:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/achievements/${id}`)\n    .then(resp => dispatch(fetchAchievements()));\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserAchievement = {\n  id: { label: \"شناسه\" },\n  achievement_id: { label: \"شناسه مدال\" },\n  user_id: { label: \"شناسه کاربر\" },\n};\n\nexport default UserAchievement;\n\nexport const print = a => {\n  a.achievement_id = <Link to={`/achievements/${a.achievement_id}`}>{a.achievement_id}</Link>;\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>;\n  return a;\n}\n","import { print } from \"./user_achievements.model\";\n\nexport const USER_ACHIEVEMENTS_ACTIONS = {\n  SET_ENTITY_LIST: 'user_achievements/SET_ENTITY_LIST',\n  SET_ENTITY: 'user_achievements/SET_ENTITY',\n  RESET: 'user_achievements/RESET',\n};\n\nconst initialState = {\n  entityList: [],\n  entity: undefined,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST:\n      if (!action.payload) return state;\n        action.payload.data = action.payload.data.map(print);\n      return {\n        ...state,\n        entityList: action.payload,\n      };\n    case USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY:\n      return {\n        ...state,\n        entity: action.payload,\n      };\n    case USER_ACHIEVEMENTS_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const resetEntityList = () => ({\n  type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\n  payload: [],\n});\n\nexport const resetEntity = params => ({\n  type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY,\n  payload: params,\n});\n\nexport const reset = () => ({\n  type: USER_ACHIEVEMENTS_ACTIONS.RESET,\n});\n\nexport const fetchUserAchievements = (searchParams) => (dispatch, _, API) => {\n  console.log(\"Fetching all user_achievements\");\n  let params = {};\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\n  if (searchParams && searchParams.page)\n    params.page = searchParams.page;\n  if (searchParams && searchParams.page_size)\n    params.page_size = searchParams.page_size;\n  if (searchParams && searchParams.sortCol)\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\n  return API.get('/admin/v1/user_achievements', { params })\n    .then(resp => dispatch({\n      type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const fetchUserAchievement = id => (dispatch, _, API) => {\n  console.log(\"Fetching user_achievement:\", id);\n  if (!id) return;\n  return API.get(`/admin/v1/user_achievements/${id}`)\n    .then(resp => dispatch({\n      type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const newUserAchievement = entity => (dispatch, _, API) => {\n  console.log(\"Creating user_achievement\");\n  if (!entity) return;\n  return API.post(`/admin/v1/user_achievements`, entity);\n};\n\nexport const updateUserAchievement = (id, entity) => (dispatch, _, API) => {\n  console.log(\"Updating user_achievement:\", id);\n  if (!id || !entity) return;\n  return API.put(`/admin/v1/user_achievements/${id}`, entity)\n    .then(resp => dispatch(fetchUserAchievement(id)));\n};\n\nexport const deleteUserAchievement = id => (dispatch, _, API) => {\n  console.log(\"Deleting user_achievement:\", id);\n  if (!id) return;\n  return API.delete(`/admin/v1/user_achievements/${id}`)\n    .then(resp => dispatch(fetchUserAchievements()));\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport flowReducer from './flow.reducer';\nimport auth from 'src/modules/auth/auth.reducer';\nimport report from 'src/modules/report/report.reducer';\nimport news from 'src/modules/news/news.reducer';\nimport users from 'src/modules/users/users.reducer';\nimport questions from 'src/modules/questions/questions.reducer';\nimport answers from 'src/modules/answers/answers.reducer';\nimport hints from 'src/modules/hints/hints.reducer';\nimport user_hints from 'src/modules/user_hints/user_hints.reducer';\nimport achievements from 'src/modules/achievements/achievements.reducer';\nimport user_achievements from 'src/modules/user_achievements/user_achievements.reducer';\n\nexport default combineReducers({\n  form: formReducer,\n  flow: flowReducer,\n  auth,\n  report,\n  news,\n  users,\n  questions,\n  answers,\n  hints,\n  user_hints,\n  achievements,\n  user_achievements,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport Axios from \"axios\";\n\nimport reducer from \"src/redux/reducer\";\nimport { isAuthenticated, getAccessToken } from \"src/modules/auth/auth.reducer\";\n\nimport config from \"src/app.config.json\";\n\nconst persistConfig = {\n  key: config.persist_key,\n  storage,\n  whitelist: [\"auth\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const API = Axios.create({\n  baseURL: config.server_url + \"api\",\n  timeout: config.request_timeout,\n  headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" }\n});\n\nconst store = createStore(\n  persistedReducer,\n  applyMiddleware(thunk.withExtraArgument(API))\n);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\nAPI.interceptors.request.use(config => {\n  if (!config.headers.Authorization) {\n    const state = store.getState();\n    if (isAuthenticated(state))\n      config.headers.Authorization = `Bearer ${getAccessToken(state)}`;\n  }\n\n  return config;\n});\n\nAPI.interceptors.request.use(request => {\n  console.log(request);\n  return request;\n});\n\nAPI.interceptors.response.use(response => {\n  console.log(response);\n  return response;\n});\n","import React from 'react';\nimport { withAlert } from 'react-alert';\nimport { API } from 'src/redux/store_config';\nimport { Message } from 'semantic-ui-react';\n\n\nexport const AlertTemplate = ({ style, options, message, close }) => {\n  const type = { [options.type]: true };\n  return <div style={style}>\n    <Message\n      onDismiss={close}\n      content={<p style={{ paddingLeft: 16 }}>{message}</p>}\n      {...type}\n    />\n  </div>\n};\n\n\nclass ErrorHandler extends React.Component {\n  state = {\n    error: null\n  };\n\n  componentDidMount() {\n    // Set axios interceptors\n    this.requestInterceptor = API.interceptors.request.use(req => {\n      this.setState({ error: null });\n      return req;\n    });\n\n    this.responseInterceptor = API.interceptors.response.use(\n      res => res,\n      error => {\n        console.log(error);\n        if (!!error.response && !!error.response.data && !!error.response.data.message) {\n          this.props.alert.error(JSON.stringify(error.response.data.message));\n        }\n        this.setState({ error });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    // Remove handlers, so Garbage Collector will get rid of if WrappedComponent will be removed\n    API.interceptors.request.eject(this.requestInterceptor);\n    API.interceptors.response.eject(this.responseInterceptor);\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n    if (!!error && !!error.message)\n      this.props.alert.error(JSON.stringify(error.message));\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withAlert()(ErrorHandler);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Icon } from 'semantic-ui-react';\n\nimport { selectionReceived } from 'src/redux/flow.reducer';\n\n\nexport function Center({ children }) {\n  return <div style={{ minHeight: '100vh', display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n    {children}\n  </div>;\n}\n\nexport const BackButton = ({ history }) => {\n  const dispatch = useDispatch();\n  return <div style={{ textAlign: \"left\" }}>\n    <Button icon labelPosition='right' onClick={() => {\n      dispatch(selectionReceived());\n      history.goBack();\n    }}>\n      بازگشت\n      <Icon name=\"chevron left\" />\n    </Button>\n  </div>;\n};\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Button, Icon, Image, Segment, Input, Modal, Label } from 'semantic-ui-react';\n// import { DateTimePicker as JalaliDateTimePicker } from \"react-advance-jalaali-datepicker\";\nimport moment from 'moment-jalaali';\nimport DatePicker from \"react-datepicker\";\nimport { getFormValues, initialize } from 'redux-form';\n\nimport { transit, selectionReceived, SELECTION_STATES } from 'src/redux/flow.reducer';\nimport { API } from 'src/redux/store_config';\nimport config from 'src/app.config.json';\n\n\nexport const CHECKS = {\n  REQUIRED: v => (!v || v === '') ? 'این فیلد را پر کنید' : undefined,\n  MAX_LEN: maxLen => v => (!!v && v.length > maxLen) ? `باید کمتر از ${maxLen} کاراکتر باشد` : undefined,\n  MIN_LEN: minLen => v => (!!v && v.length < minLen) ? `باید بیشتر از ${minLen} کاراکتر باشد` : undefined,\n  MAX_VAL: maxVal => v => (!!v && v > maxVal) ? `باید کمتر از ${maxVal} باشد` : undefined,\n  MIN_VAL: minVal => v => (!!v && v < minVal) ? `باید بیشتر از ${minVal} باشد` : undefined,\n};\n\nexport const InputField = ({ input, meta, children, ...props }) =>\n  <Form.Input {...props}\n    {...input} children={children}\n    onChange={(e, { value }) => input.onChange(value)}\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\n  />;\n\nexport const MultiInputField = ({ input, meta, children, asNumber, ...props }) => {\n  const values = JSON.parse(!!input.value ? input.value : \"[]\");\n  const N = !!values ? values.length : 0;\n  let result = [];\n  for (let i = 0; i < N; i++) {\n    result.push(<Input key={i}\n      name={props.name + \" \" + i}\n      value={values[i]}\n      onChange={(e, { value }) => {\n        if (!!asNumber)\n          values[i] = Number(value);\n        else\n          values[i] = value;\n        input.onChange(JSON.stringify(values));\n      }}\n      action={{\n        icon: \"minus\", color: \"red\", onClick: (e) => {\n          e.preventDefault();\n          values.splice(i, 1);\n          input.onChange(JSON.stringify(values));\n        }\n      }}\n      fluid\n      style={{ marginTop: i > 0 ? 16 : 0 }}\n    />);\n  }\n  return <>\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\n      <Icon name=\"add\" circular inverted color=\"green\" size=\"small\"\n        style={{ cursor: \"pointer\", float: \"left\" }}\n        onClick={() => {\n          values.push(\"\");\n          input.onChange(JSON.stringify(values));\n        }} />\n    </Segment>\n    <Segment raised attached=\"bottom\">\n      {result}\n    </Segment>\n  </>;\n}\n\nexport const SelectField = ({ input, meta, children, ...props }) =>\n  <Form.Dropdown {...props} selection\n    {...input} children={children}\n    onChange={(e, { value }) => input.onChange(value)}\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\n  />;\n\nexport const booleanOptions = [\n  { key: 'null', text: '', value: undefined },\n  { key: 'true', text: 'True', value: 1 },\n  { key: 'false', text: 'False', value: 0 },\n];\n\nexport function EntityField({ input, meta, children, entityName, formName, ...props }) {\n  const flow = useSelector(state => state.flow);\n  const dispatch = useDispatch();\n  const values = useSelector(state => getFormValues(formName)(state));\n  const code = formName + \"/\" + entityName;\n  const actionButton = <Button icon=\"search\"\n    as={Link} to={`/${entityName}`}\n    onClick={() => dispatch(transit(code, values))} />;\n  if (flow.selectionState === SELECTION_STATES.SELECTED && flow.selectionCode === code) {\n    dispatch(initialize(formName, flow.selectionCarry));\n    input.onChange(flow.selectedEntity.id);\n    dispatch(selectionReceived());\n  }\n  return <Form.Input {...props}\n    {...input} children={children}\n    action={actionButton}\n    onChange={(e, { value }) => input.onChange(value)}\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\n  />;\n};\n\n// export const DateTimePicker = ({ input, meta, children, ...props }) =>\n//   <>\n//     <label><b>{props.label}</b></label>\n//     <JalaliDateTimePicker {...props}\n//       {...input} children={children}\n//       format=\"تاریخ: jYYYY/jMM/jDD ساعت: HH:mm\"\n//       onChange={(unix, formatted) => input.onChange(unix)}\n//     />\n//   </>;\n\n// export function DatePicker({ input, meta, children, ...props }) {\n//   const miladiFormat = 'YYYY-MM-DD HH:mm:ss';\n//   const jalaaliFormat = 'jYYYY/jMM/jDD';\n//   const regex = /\\d{4}\\/\\d{2}\\/\\d{2}/g;\n\n//   const toJalaali = x => !!x ? moment(input.value).format(jalaaliFormat) : \"\";\n//   const toMilaadi = x => !!x ? moment(text, jalaaliFormat).format(miladiFormat) : \"\";\n//   const isCorrect = x => regex.test(x);\n\n//   const [text, setText] = React.useState(toJalaali(input.value));\n//   const [correct, setCorrect] = React.useState(false);\n\n//   React.useEffect(() => {\n//     // console.log(\"input.value changed:\", input.value);\n//     setText(toJalaali(input.value));\n//   }, [input.value]);\n//   React.useEffect(() => {\n//     // console.log(\"text changed:\", text);\n//     setCorrect(isCorrect(text));\n//     if (isCorrect(text))\n//       input.onChange(toMilaadi(text));\n//   }, [text]);\n\n//   const correctIcon = <Icon name={correct ? \"check\" : \"times\"}\n//     color={correct ? \"green\" : \"red\"} />;\n\n//   return <Form.Input {...props} value={text} children={children}\n//     error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\n//     onChange={(e, { value }) => setText(value)}\n//     icon={correctIcon} />;\n// }\n\nexport function Timestamp({ input, meta, children, ...props }) {\n  const date = !!input.value ? moment(input.value, 'YYYY-MM-DD HH:mm:ss').toDate() : undefined;\n  return <>\n    <Label>{props.label}</Label>\n    <DatePicker\n      selected={date}\n      onChange={d => {\n        input.onChange(moment(d).format('YYYY-MM-DD HH:mm:ss'));\n      }}\n      showTimeSelect\n      dateFormat=\"yyyy MMMM d, HH:mm\"\n      timeFormat=\"HH:mm\"\n      timeIntervals={60}\n      children={children}\n      {...props}\n    />\n    <div style={{ height: 8 }} />\n  </>\n}\n\nexport function FilePicker({ input, meta, children, ...props }) {\n  const inputEl = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const onClick = e => {\n    e.preventDefault();\n    if (inputEl && inputEl.current)\n      inputEl.current.click();\n  };\n  const onChange = e => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files[0]) {\n      setText(files[0].name);\n      let reader = new FileReader();\n      reader.onload = ev => setImage(ev.target.result);\n      reader.readAsDataURL(files[0]);\n      input.onChange(files[0]);\n    } else {\n      setImage(null);\n    }\n  };\n  return <>\n    <Form.Input {...props} value={text} children={children}\n      error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\n      action={<Button icon=\"file\" onClick={onClick} />} />\n    <input ref={inputEl} type=\"file\" accept=\"image/*\" hidden onChange={onChange} />\n    <div style={{ height: 8 }} />\n    <Image hidden={!image} src={image} size=\"large\" style={{ marginBottom: 16 }} />\n  </>;\n}\n\nexport const MultiFilePicker = ({ input, meta, children, path, ...props }) => {\n  const [file, setFile] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const close = () => setOpen(false);\n  const values = JSON.parse(!!input.value ? input.value : \"[]\");\n  const N = !!values ? values.length : 0;\n  let result = [];\n  for (let i = 0; i < N; i++) {\n    result.push(<div key={i}>\n      <Image src={`${config.server_url}storage/${values[i]}`}\n        style={{ maxWidth: \"90%\", display: \"inline-block\" }} />\n      <Icon name=\"times\" color=\"red\" circular inverted style={{ marginRight: 8 }}\n        onClick={(e) => {\n          e.preventDefault();\n          deleteFile(values[i]);\n          values.splice(i, 1);\n          input.onChange(JSON.stringify(values));\n        }} />\n    </div>);\n  }\n  return <>\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\n      <Modal trigger={\n        <Icon name=\"add\" circular inverted color=\"green\" size=\"small\"\n          onClick={() => setOpen(true)}\n          style={{ cursor: \"pointer\", float: \"left\" }} />\n      }\n        open={open} onClose={close}>\n        <Modal.Header>انتخاب فایل</Modal.Header>\n        <Modal.Content>\n          <FilePicker input={{ onChange: setFile }} />\n          <Button type='submit' color='green' icon labelPosition=\"left\"\n            disabled={!file} loading={submitting} onClick={() => {\n              setSubmitting(true);\n              saveFile(file, path)\n                .then(res => {\n                  if (!res) return;\n                  values.push(res.data.relative_path);\n                  input.onChange(JSON.stringify(values));\n                  close();\n                })\n                .finally(() => {\n                  setSubmitting(false);\n                });\n            }}>\n            <Icon name='check' />\n            ذخیره\n          </Button>\n        </Modal.Content>\n      </Modal>\n    </Segment>\n    <Segment raised attached=\"bottom\">\n      {result}\n    </Segment>\n  </>;\n}\n\nfunction saveFile(file, path) {\n  let formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"path\", path);\n  return API.post(\"files\", formData);\n}\n\nfunction deleteFile(url) {\n  return API.delete(\"files\", { data: { path: url } });\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Segment } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\n\nimport { Center } from 'src/components/Common';\nimport { login } from './auth.reducer';\nimport { InputField, CHECKS } from 'src/components/FormFields';\n\n\nconst checkMinLen6 = CHECKS.MIN_LEN(6);\n\nconst LoginForm = reduxForm({ form: 'login' })(\n  ({ handleSubmit, pristine, invalid, submitting }) =>\n    <Form onSubmit={handleSubmit}>\n      <Field component={InputField} name=\"username\" label=\"نام کاربری\" autoFocus\n        required validate={CHECKS.REQUIRED} />\n      <Field component={InputField} name=\"password\" label=\"رمز عبور\" type=\"password\"\n        required validate={[CHECKS.REQUIRED, checkMinLen6]} />\n      <Button type='submit' primary\n        disabled={pristine || invalid} loading={submitting}>ورود</Button>\n    </Form>\n);\n\nclass Auth extends React.Component {\n  onSubmit = values => this.props.login(values.username, values.password);\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#abc\" }}>\n        <Center>\n          <Segment raised style={{ width: 400 }}>\n            <LoginForm onSubmit={this.onSubmit} />\n          </Segment>\n        </Center>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, dispatch => ({\n  login: (username, password) => dispatch(login(username, password)),\n}))(Auth);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Menu, Dropdown, Container } from 'semantic-ui-react';\n\nimport { logout } from 'src/modules/auth/auth.reducer';\n\n\nconst Navbar = connect(null, dispatch => ({\n  logout: () => dispatch(logout()),\n}))(withRouter(({ location, logout }) => {\n  const route = location.pathname.split('/')[1];\n  return (\n    <Menu attached inverted>\n      <Menu.Item\n        name='گزارش'\n        active={route === 'report'}\n        color=\"blue\"\n        icon=\"dashboard\"\n        link\n        as={Link}\n        to=\"/report\"\n      />\n      <Menu.Item as={Dropdown} item text='جداول'\n        active={['users', 'questions'].indexOf(route) >= 0} color=\"blue\">\n        <Dropdown.Menu>\n          <Dropdown.Item text='اخبار' icon=\"bullhorn\" as={Link} to='/news' />\n          <Dropdown.Item text='کاربران' icon=\"users\" as={Link} to='/users' />\n          <Dropdown.Item text='سؤالات' icon=\"question\" as={Link} to='/questions' />\n          <Dropdown.Item text='تلاش‌ها' icon=\"clipboard\" as={Link} to='/answers' />\n          <Dropdown.Item text='راهنمایی‌ها' icon=\"gift\" as={Link} to='/hints' />\n          <Dropdown.Item text='مدال‌ها' icon=\"trophy\" as={Link} to='/achievements' />\n        </Dropdown.Menu>\n      </Menu.Item>\n      <Menu.Item\n        name='تنظیمات'\n        active={route === 'setting'}\n        color=\"blue\"\n        icon=\"setting\"\n        link\n        as={Link}\n        to=\"/settings\"\n      />\n\n      <Menu.Menu position='right'>\n        <Menu.Item\n          active={true}\n          color=\"red\"\n          name='خروج'\n          icon='sign-out'\n          onClick={logout}\n        />\n      </Menu.Menu>\n    </Menu>\n  );\n}));\n\nfunction Layout({ children }) {\n  return <>\n    <Navbar />\n    <Container style={{ margin: '16px 0' }}>\n      {children}\n    </Container>\n  </>;\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Table, Icon, Menu, Statistic, Dropdown, Image } from 'semantic-ui-react';\n\n\nconst Column = (entity, index) => col => {\n  let c = { key: col.key + index };\n  const value = entity[col.key];\n  if (!!col.render) {\n    if (typeof col.render === 'string') {\n      switch (col.render) {\n        case 'boolean':\n          const trueIcon = <Icon name=\"check\" size=\"large\" color=\"green\" />;\n          const falseIcon = <Icon name=\"times\" size=\"large\" color=\"red\" />;\n          c.children = !!value ? trueIcon : falseIcon;\n          break;\n        case 'image':\n          c.children = <Image src={value} size=\"large\"/>;\n          break;\n        default:\n          c.children = null;\n      }\n    } else {\n      c.children = col.render(entity);\n    }\n  } else {\n    c.children = value;\n  }\n  return c;\n};\n\nconst Row = schema => (entity, index) => {\n  const c = Column(entity, index);\n  return {\n    key: index,\n    cells: schema.map(col => c(col)),\n  };\n};\n\nconst Header = (schema, sortCol, sortDir, handleSort) => {\n  return schema.map(col => ({\n    key: col.key,\n    sorted: sortCol === col.key ? (sortDir === 'asc' ? 'ascending' : 'descending') : null,\n    onClick: () => {\n      if (col.sortable)\n        handleSort(col.key, sortCol === col.key ? (sortDir === 'asc' ? 'desc' : 'asc') : 'asc');\n    },\n    children: col.header,\n  }));\n};\n\nconst Pagination = (colSpan, pagination) => {\n  const { current_page, last_page, per_page, setPage, setPageSize } = pagination;\n  let pages = [];\n  for (let i = current_page - 2; i < current_page + 3; i++) {\n    if (i >= 1 && i <= last_page)\n      pages.push(<Menu.Item key={`page_${i}`} as='a' active={i === current_page}\n        onClick={() => setPage(i)}>{i}</Menu.Item>);\n  }\n  return (\n    <Table.Row>\n      <Table.HeaderCell colSpan={colSpan}>\n        <Menu pagination style={{ direction: \"ltr\" }}>\n          <Menu.Item as='a' icon onClick={() => pagination.setPage(1)}>\n            <Icon name='angle double left' />\n          </Menu.Item>\n          {pages}\n          <Menu.Item as='a' icon onClick={() => pagination.setPage(last_page)}>\n            <Icon name='angle double right' />\n          </Menu.Item>\n        </Menu>\n        <span style={{ marginRight: 16 }}>\n          <span style={{ marginLeft: 4 }}>در هر صفحه:</span>\n          <Dropdown selection value={per_page} style={{ minWidth: 48 }}\n            options={[10, 20, 50, 100].map(v => ({ key: v, text: v, value: v }))}\n            onChange={(e, { value }) => setPageSize(value)} />\n        </span>\n        <Statistic size='mini' floated=\"right\">\n          <Statistic.Label>تعداد صفحات</Statistic.Label>\n          <Statistic.Value>{last_page}</Statistic.Value>\n        </Statistic>\n      </Table.HeaderCell>\n    </Table.Row>\n  );\n};\n\nexport default function MyTable({ schema, data, pagination, sortCol, sortDir, onSort }) {\n  if (!data) data = [];\n  return <Table celled sortable\n    headerRow={Header(schema, sortCol, sortDir, onSort)}\n    renderBodyRow={Row(schema)}\n    footerRow={!!pagination ? Pagination(schema.length, pagination) : undefined}\n    tableData={data} />;\n}\n","\nconst User = {\n  id: { label: \"شناسه\" },\n  name: { label: \"نام\" },\n  phone: { label: \"شماره همراه\" },\n  email: { label: \"ایمیل\" },\n  role: {\n    label: \"نقش\", options: [\n      { key: \"null\", text: \"\", value: undefined },\n      { key: \"admin\", text: \"admin\", value: \"admin\" },\n      { key: \"user\", text: \"user\", value: \"user\" },\n    ]\n  },\n  is_active: { label: \"فعال\" },\n  password: { label: \"رمز عبور\" },\n  passwordConfirm: { label: \"تکرار رمز عبور\" },\n  coin_1: { label: \"سکه ۱\" },\n  coin_2: { label: \"سکه ۲\" },\n  score_daily: { label: \"امتیاز روزانه\" },\n  score_weekly: { label: \"امتیاز هفتگی\" },\n  level: { label: \"مرحله\" },\n  ad_watch: { label: \"تبلیغات مشاهده شده\" },\n};\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Segment, Grid, Statistic } from 'semantic-ui-react';\n\nimport { fetchReport } from './report.reducer';\n\nimport Layout from 'src/components/Layout';\nimport Table from 'src/components/Table';\nimport User from 'src/modules/users/users.model';\n\n\nclass Report extends React.Component {\n  componentDidMount() {\n    this.props.fetchReport();\n  }\n  render() {\n    const { report } = this.props;\n    console.log(\"Report:\", report);\n    return <Layout>\n      <Segment attached=\"top\" raised textAlign=\"center\" color=\"blue\" inverted>\n        <h1>گزارش</h1>\n      </Segment>\n      <Segment attached=\"bottom\" textAlign=\"center\" padded>\n        {report.server && <>\n          <Grid columns={4}>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>سرور</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                زمان: {(new Date(report.server.timestamp)).toUTCString()}\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>کاربران</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد کاربران</Statistic.Label>\n                  <Statistic.Value>{report.users.count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>سؤالات</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد سؤالات</Statistic.Label>\n                  <Statistic.Value>{report.questions.count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>تبلیغات</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد مشاهدات</Statistic.Label>\n                  <Statistic.Value>{report.users.ad_watch_count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n          </Grid>\n          <Grid columns={2}>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>لیدربرد روزانه</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Table schema={[\n                  { key: \"id\", header: \"id\" },\n                  { key: \"name\", header: User.name.label },\n                  { key: \"score_daily\", header: User.score_daily.label }\n                ]} data={report.users.top_daily} />\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>لیدربرد هفتگی</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Table schema={[\n                  { key: \"id\", header: \"id\" },\n                  { key: \"name\", header: User.name.label },\n                  { key: \"score_weekly\", header: User.score_weekly.label }\n                ]} data={report.users.top_weekly} />\n              </Segment>\n            </Grid.Column>\n          </Grid>\n          <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n            <h2>لیدربرد تبلیغات</h2>\n          </Segment>\n          <Segment attached=\"bottom\" textAlign=\"center\" raised>\n            <Table schema={[\n              { key: \"id\", header: \"id\" },\n              { key: \"name\", header: User.name.label },\n              { key: \"ad_watch\", header: User.ad_watch.label }\n            ]} data={report.users.ad_watch} />\n          </Segment>\n        </>}\n      </Segment>\n    </Layout>;\n  }\n}\n\nexport default connect(\n  state => ({ report: state.report }),\n  dispatch => ({ fetchReport: () => dispatch(fetchReport()) }),\n)(Report);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { Segment, Form, Button, Icon, Modal } from 'semantic-ui-react';\nimport { reduxForm, submit } from 'redux-form';\nimport qs from 'query-string';\nimport { withAlert } from 'react-alert';\n\nimport Layout from 'src/components/Layout';\nimport Table from 'src/components/Table';\nimport { BackButton } from 'src/components/Common';\n\nimport { setSelected, SELECTION_STATES } from 'src/redux/flow.reducer';\n\n\nconst SearchForm = (entityName, Fields) =>\n  reduxForm({ form: `${entityName}/search` })(\n    props => {\n      const { handleSubmit, submitting, pristine, reset } = props;\n      return <Form onSubmit={handleSubmit}>\n\n        {Fields(props)}\n\n        <Button type='submit' icon labelPosition=\"left\" primary\n          loading={submitting}>\n          <Icon name='search' />\n          جستجو\n        </Button>\n        <Button type='button' icon labelPosition=\"left\" secondary\n          disabled={pristine || submitting} onClick={reset}>\n          <Icon name='refresh' />\n          پاک‌سازی فرم\n        </Button>\n      </Form>;\n    }\n  );\n\nconst SearchResult = withAlert()(({\n  history, entityName, tableSchema, data, pagination, deleteAction, alert, sortCol, sortDir, onSort\n}) => {\n  const flow = useSelector(state => state.flow);\n  const dispatch = useDispatch();\n  const selectButton = entity =>\n    <Icon name=\"check\" color=\"green\" style={{ cursor: \"pointer\" }} onClick={() => {\n      dispatch(setSelected(entity));\n      history.goBack();\n    }} />\n  const editButton = entity =>\n    <Link to={`/${entityName}/${!!entity ? entity.id : '?'}`}>\n      <Icon name=\"edit\" color=\"black\" style={{ cursor: \"pointer\" }} />\n    </Link>\n  const deleteButton = entity =>\n    <Modal\n      trigger={\n        <Icon name=\"times\" size=\"large\" color=\"red\" style={{ cursor: \"pointer\" }} />\n      }\n      header='هشدار!'\n      content={`آیا از حذف اطمینان دارید؟`}\n      actions={[\n        {\n          key: 'yes', content: 'بله', negative: true,\n          onClick: () => deleteAction(!!entity ? entity.id : undefined)\n            .then(() => alert.success(\"رکورد با موفقیت حذف شد\"))\n        },\n        { key: 'no', content: 'خیر' },\n      ]}\n    />;\n  const actionButtons = entity =>\n    <>\n      {flow.selectionState === SELECTION_STATES.SELECTING && selectButton(entity)}\n      {editButton(entity)}\n      {deleteButton(entity)}\n    </>;\n  const schema = [\n    { key: \"operations\", header: \"عملیات\", render: actionButtons },\n    ...tableSchema,\n  ];\n  return <Table schema={schema} data={data} pagination={pagination}\n    sortCol={sortCol} sortDir={sortDir} onSort={onSort} />;\n});\n\n\nclass SelectLayout extends React.Component {\n  state = {\n    page: 1,\n    page_size: 20,\n    sortCol: null,\n    sortDir: null,\n  };\n  SF = undefined;\n  componentDidMount() {\n    this.onSubmit({});\n  }\n  initForms() {\n    this.SF = SearchForm(this.props.entityName, this.props.SearchFields);\n  }\n  onSubmit = values => {\n    const params = qs.parse(this.props.location.search);\n    return this.props.fetchMethod({\n      filter: { ...params, ...values },\n      page: this.state.page,\n      page_size: this.state.page_size,\n      sortCol: this.state.sortCol,\n      sortDir: this.state.sortDir,\n    });\n  };\n  search = () => this.props.search(`${this.props.entityName}/search`);\n  setPage = page => {\n    this.setState({ page }, this.search);\n  };\n  setPageSize = page_size => {\n    this.setState({ page_size }, this.search);\n  };\n  render() {\n    if (this.props.entityList === undefined) return null;\n    if (this.props.SearchFields && !this.SF) this.initForms();\n    const { data, current_page, last_page } = this.props.entityList;\n    const { search } = this.props.location;\n    const { title, entityName, tableSchema, deleteAction } = this.props;\n    return <Layout>\n      <Segment raised textAlign=\"center\" color=\"blue\" inverted attached=\"top\">\n        <h1>{title}</h1>\n      </Segment>\n      <Segment attached>\n        <BackButton history={this.props.history} />\n        {this.props.SearchFields && <this.SF onSubmit={this.onSubmit} />}\n      </Segment>\n      <Segment attached=\"bottom\">\n        <Button color=\"green\" icon labelPosition=\"left\"\n          as={Link} to={`/${entityName}/new${search}`}>\n          <Icon name=\"plus\" />\n          جدید\n        </Button>\n        <SearchResult entityName={entityName}\n          tableSchema={tableSchema}\n          data={data}\n          sortCol={this.state.sortCol}\n          sortDir={this.state.sortDir}\n          onSort={(sortCol, sortDir) => this.setState({ sortCol, sortDir }, this.search)}\n          history={this.props.history}\n          pagination={{\n            current_page, last_page, per_page: this.state.page_size,\n            setPage: this.setPage, setPageSize: this.setPageSize,\n          }}\n          deleteAction={deleteAction} />\n      </Segment>\n    </Layout>;\n  }\n}\n\nexport default connect(null, dispatch => ({\n  search: formName => dispatch(submit(formName)),\n}))(SelectLayout);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchAllNews, deleteNews } from './news.reducer';\nimport News from './news.model';\n\nimport SelectLayout from 'src/components/SelectLayout';\nimport { SelectField, booleanOptions } from 'src/components/FormFields';\n\n\nfunction NewsSelect(props) {\n  return <SelectLayout {...props}\n    title=\"اخبار\"\n    entityName=\"news\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={SelectField} name=\"is_active\" label={News.is_active.label}\n          options={booleanOptions} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"image\", header: News.image.label },\n      { key: \"is_active\", header: News.is_active.label, render: \"boolean\" },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.news.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchAllNews(searchParams)),\n  deleteAction: id => dispatch(deleteNews(id)),\n}))(NewsSelect);\n","import React from 'react';\nimport { Segment, Form, Button, Icon } from 'semantic-ui-react';\nimport { reduxForm } from 'redux-form';\nimport { withAlert } from 'react-alert';\nimport qs from 'query-string';\n\nimport Layout from 'src/components/Layout';\nimport { BackButton } from 'src/components/Common';\n\n\nconst EditForm = (entityName, Fields, isNew) =>\n  reduxForm({ form: `${entityName}/${isNew ? 'new' : 'edit'}`, enableReinitialize: true })(\n    props => {\n      const { handleSubmit, submitting, pristine, reset } = props;\n      return <Form onSubmit={handleSubmit}>\n\n        {Fields(props)}\n\n        <Button type='submit' color='green' icon labelPosition=\"left\"\n          disabled={pristine} loading={submitting}>\n          <Icon name='check' />\n          ذخیره\n        </Button>\n        <Button type='button' secondary icon labelPosition=\"left\"\n          disabled={pristine || submitting} onClick={reset}>\n          <Icon name='refresh' />\n          لغو تغییرات\n        </Button>\n      </Form>;\n    }\n  );\n\nclass EditLayout extends React.Component {\n  NF = undefined;\n  EF = undefined;\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    if (id)\n      this.fetchEntity(id);\n    else\n      this.props.resetEntity(qs.parse(this.props.location.search));\n  }\n  initForms() {\n    this.NF = EditForm(this.props.entityName, this.props.NewFields, true);\n    this.EF = EditForm(this.props.entityName, this.props.EditFields, false);\n  }\n  fetchEntity = id => {\n    return this.props.fetchEntity(id);\n  };\n  updateEntity = id => values => {\n    return this.props.updateEntity(id, values)\n      .then(() => this.props.alert.success(\"رکورد با موفقیت اصلاح شد\"));\n  };\n  newEntity = values => {\n    return this.props.newEntity(values)\n      .then(() => {\n        this.props.alert.success(\"رکورد با موفقیت ایجاد شد\");\n        this.props.history.goBack();\n      });\n  };\n  render() {\n    if (this.props.NewFields && !this.NF) this.initForms();\n    if (this.props.EditFields && !this.EF) this.initForms();\n    const { id } = this.props.match.params;\n    const { title, entity } = this.props;\n    return <Layout>\n      <div style={{ maxWidth: 600, margin: '0 auto' }}>\n        <Segment raised attached=\"top\" textAlign=\"center\" color=\"blue\" inverted>\n          <h2>{title}</h2>\n        </Segment>\n        <Segment raised padded attached=\"bottom\">\n          <BackButton history={this.props.history} />\n          {id\n            ? (this.props.EditFields && <this.EF onSubmit={this.updateEntity(id)} initialValues={entity} />)\n            : (this.props.NewFields && <this.NF onSubmit={this.newEntity} initialValues={entity} />)}\n        </Segment>\n      </div>\n    </Layout>;\n  }\n}\n\nexport default withAlert()(EditLayout);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchNews, updateNews, newNews } from './news.reducer';\nimport News from './news.model';\n\nimport EditLayout from 'src/components/EditLayout';\nimport { SelectField, InputField, FilePicker, booleanOptions } from 'src/components/FormFields';\n\n\nfunction NewsEdit(props) {\n  return <EditLayout {...props}\n    title=\"خبر\"\n    entityName=\"news\"\n    NewFields={formProps => <>\n      <Field component={FilePicker} name=\"image\" label={News.image.label} />\n      <Field component={SelectField} name=\"is_active\" label={News.is_active.label}\n        options={booleanOptions} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={News.id.label} disabled />\n      <Field component={FilePicker} name=\"image\" label={News.image.label} disabled />\n      <Field component={SelectField} name=\"is_active\" label={News.is_active.label}\n        options={booleanOptions} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.news.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchNews(id)),\n    updateEntity: (id, entity) => dispatch(updateNews(id, entity)),\n    newEntity: entity => dispatch(newNews(entity)),\n  })\n)(NewsEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport NewsSelect from './news.select';\nimport NewsEdit from './news.edit';\n\n\nexport default function News({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={NewsSelect} />\n      <Route exact path={`${url}/new`} component={NewsEdit} />\n      <Route exact path={`${url}/:id`} component={NewsEdit} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchUsers, deleteUser } from './users.reducer';\nimport User from './users.model';\n\nimport { InputField, SelectField, booleanOptions } from 'src/components/FormFields';\nimport SelectLayout from 'src/components/SelectLayout';\n\n\nfunction UserSelect(props) {\n  return <SelectLayout {...props}\n    title=\"کاربران\"\n    entityName=\"users\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={InputField} name=\"id\" label={User.id.label} />\n        <Field component={InputField} name=\"name\" label={User.name.label} />\n        <Field component={InputField} name=\"phone\" label={User.phone.label} />\n        <Field component={InputField} name=\"email\" label={User.email.label} />\n      </Form.Group>\n      <Form.Group widths='equal'>\n        <Field component={SelectField} name=\"role\" label={User.role.label}\n          options={User.role.options} />\n        <Field component={SelectField} name=\"is_active\" label={User.is_active.label}\n          options={booleanOptions} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"id\", sortable: true, header: User.id.label },\n      { key: \"name\", sortable: true, header: User.name.label },\n      { key: \"phone\", sortable: true, header: User.phone.label },\n      { key: \"email\", sortable: true, header: User.email.label },\n      { key: \"role\", header: User.role.label },\n      { key: \"is_active\", header: User.is_active.label, render: \"boolean\" },\n      { key: \"ad_watch\", sortable: true, header: User.ad_watch.label },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.users.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchUsers(searchParams)),\n  deleteAction: id => dispatch(deleteUser(id)),\n}))(UserSelect);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchUser, updateUser, newUser } from './users.reducer';\nimport User from './users.model';\n\nimport { CHECKS, InputField, SelectField, booleanOptions } from 'src/components/FormFields';\nimport EditLayout from 'src/components/EditLayout';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\n\nfunction UserEdit(props) {\n  return <EditLayout {...props}\n    title=\"کاربر\"\n    entityName=\"users\"\n    NewFields={formProps => <>\n      <Field component={InputField} name=\"name\" label={User.name.label}\n        required validate={CHECKS.REQUIRED} />\n      <Field component={InputField} name=\"phone\" label={User.phone.label} />\n      <Field component={InputField} name=\"email\" label={User.email.label} />\n      <Field component={InputField} name=\"password\" label={User.password.label} type=\"password\"\n        required validate={CHECKS.REQUIRED} />\n      <Field component={InputField} name=\"passwordConfirm\" label={User.passwordConfirm.label} type=\"password\"\n        required validate={CHECKS.REQUIRED} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"name\" label={User.name.label}\n        required validate={CHECKS.REQUIRED} />\n      <Field component={InputField} name=\"phone\" label={User.phone.label} />\n      <Field component={InputField} name=\"email\" label={User.email.label} />\n      <Field component={SelectField} name=\"role\" label={User.role.label}\n        options={User.role.options} required validate={CHECKS.REQUIRED} />\n      <Field component={SelectField} name=\"is_active\" label={User.is_active.label}\n        options={booleanOptions} />\n      <Field component={InputField} name=\"coin_1\" label={User.coin_1.label} />\n      <Field component={InputField} name=\"coin_2\" label={User.coin_2.label} />\n      <Field component={InputField} name=\"score_daily\" label={User.score_daily.label} />\n      <Field component={InputField} name=\"score_weekly\" label={User.score_weekly.label} />\n      <Field component={InputField} name=\"level\" label={User.level.label} />\n      <Field component={InputField} name=\"ad_watch\" label={User.ad_watch.label} />\n      <div style={{ marginBottom: 16 }}>\n        <Button as={Link} to={`/user_hints?user_id=${!!formProps.initialValues ? formProps.initialValues.id : 'null'}`}>راهنمایی‌ها</Button>\n        <Button as={Link} to={`/user_achievements?user_id=${!!formProps.initialValues ? formProps.initialValues.id : 'null'}`}>مدال‌ها</Button>\n      </div>\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.users.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchUser(id)),\n    updateEntity: (id, entity) => dispatch(updateUser(id, entity)),\n    newEntity: entity => dispatch(newUser(entity)),\n  })\n)(UserEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport UserSelect from './users.select';\nimport UserEdit from './users.edit';\n\n\nexport default function Users({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={UserSelect} />\n      <Route exact path={`${url}/new`} component={UserEdit} />\n      <Route exact path={`${url}/:id`} component={UserEdit} />\n    </Switch>\n  );\n}\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchQuestions, deleteQuestion } from './questions.reducer';\nimport Question from './questions.model';\n\nimport { InputField, SelectField } from 'src/components/FormFields';\nimport SelectLayout from 'src/components/SelectLayout';\n\n\nfunction QuestionSelect(props) {\n  return <SelectLayout {...props}\n    title=\"سؤالات\"\n    entityName=\"questions\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={InputField} name=\"id\" label={Question.id.label} />\n        <Field component={InputField} name=\"title\" label={Question.title.label} />\n      </Form.Group>\n      <Form.Group widths='equal'>\n        <Field component={SelectField} options={Question.locale.options}\n          name=\"locale\" label={Question.locale.label} />\n        <Field component={SelectField} options={Question.time_type.options}\n          name=\"time_type\" label={Question.time_type.label} />\n        <Field component={SelectField} options={Question.answer_type.options}\n          name=\"answer_type\" label={Question.answer_type.label} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"id\", sortable: true, header: Question.id.label },\n      { key: \"locale\", header: Question.locale.label },\n      { key: \"title\", sortable: true, header: Question.title.label },\n      { key: \"time_type\", sortable: true, header: Question.time_type.label },\n      { key: \"answer_type\", sortable: true, header: Question.answer_type.label },\n      { key: \"start_time\", sortable: true, header: Question.start_time.label },\n      { key: \"end_time\", sortable: true, header: Question.end_time.label },\n      // { key: \"score\", header: Question.score.label },\n      // { key: \"tries\", header: Question.tries.label },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.questions.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchQuestions(searchParams)),\n  deleteAction: id => dispatch(deleteQuestion(id)),\n}))(QuestionSelect);\n","import React, { useState } from 'react';\nimport { Form, Input, Button, Icon, Image, Segment, Modal } from 'semantic-ui-react';\n\nimport { FilePicker } from 'src/components/FormFields';\n\nimport { API } from 'src/redux/store_config';\nimport config from 'src/app.config.json';\n\n\nexport const ChoicesField = ({ input, meta, children, path, ...props }) => {\n  const [open, setOpen] = useState(false);\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(false);\n  const values = !!input.value ? JSON.parse(input.value) : [];\n  const N = !!values ? values.length : 0;\n\n  // =============  CHOICE MODAL  =============\n  const ChoiceModal = () => {\n    const [obj, setObj] = useState({ type: \"text\", value: null });\n    const [submitting, setSubmitting] = useState(false);\n    const onSubmit = () => {\n      if (obj.type === \"text\") {\n        values.push({ type: \"text\", value: \"\" });\n        input.onChange(JSON.stringify(values));\n        onClose();\n      } else {\n        setSubmitting(true);\n        saveFile(obj.value, \"q_img\")\n          .then(res => {\n            if (!res) return;\n            values.push({ type: \"image\", value: res.data.relative_path });\n            input.onChange(JSON.stringify(values));\n            onClose();\n          })\n          .finally(() => {\n            setSubmitting(false);\n          });\n      }\n    };\n    return <>\n      <Form.Dropdown selection options={[\n        { key: \"text\", text: \"متنی\", value: \"text\" },\n        { key: \"image\", text: \"تصویری\", value: \"image\" },\n      ]}\n        value={obj.type}\n        onChange={(e, { value }) => setObj({ type: value, value: null })}\n      />\n      <div style={{ height: 8 }} />\n      {obj.type === \"image\"\n        ? <FilePicker input={{ onChange: file => setObj({ type: \"image\", value: file }) }} />\n        : null\n      }\n      <Button type='submit' color='green' icon labelPosition=\"left\"\n        disabled={obj.type === \"image\" && !obj.value}\n        onClick={onSubmit} loading={submitting}>\n        <Icon name='check' />\n        ذخیره\n      </Button>\n    </>\n  };\n\n  let result = [];\n  for (let i = 0; i < N; i++)\n    result.push(<ChoiceRow key={i} entity={values[i]} index={i} values={values} input={input} />);\n\n  return <>\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\n      <Modal trigger={\n        <Icon name=\"add\" circular inverted color=\"green\" size=\"small\" onClick={onOpen}\n          style={{ cursor: \"pointer\", float: \"left\" }} />\n      }\n        open={open} onClose={onClose}>\n        <Modal.Content>\n          <ChoiceModal />\n        </Modal.Content>\n      </Modal>\n    </Segment>\n    <Segment raised attached=\"bottom\">\n      {result}\n    </Segment>\n  </>;\n};\n\nconst ChoiceRow = ({ entity, index, values, input }) => <div style={{ margin: \"4px 0\" }}>\n  {entity.type === 'image'\n    ? <>\n      <Image src={`${config.server_url}storage/${entity.value}`}\n        style={{ maxWidth: \"90%\", display: \"inline-block\" }} />\n      <Icon name=\"times\" color=\"red\" circular inverted style={{ marginRight: 8 }}\n        onClick={(e) => {\n          e.preventDefault();\n          deleteFile(values[index]);\n          values.splice(index, 1);\n          input.onChange(JSON.stringify(values));\n        }} />\n    </>\n    : <Input fluid value={entity.value}\n      onChange={(e, { value }) => {\n        values[index].value = value;\n        input.onChange(JSON.stringify(values));\n      }}\n      action={{\n        icon: \"minus\", color: \"red\", onClick: (e) => {\n          e.preventDefault();\n          values.splice(index, 1);\n          input.onChange(JSON.stringify(values));\n        }\n      }}\n      style={{ marginTop: index > 0 ? 16 : 0 }} />\n  }\n</div>;\n\n\nfunction saveFile(file, path) {\n  let formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"path\", path);\n  return API.post(\"files\", formData);\n}\n\nfunction deleteFile(url) {\n  return API.delete(\"files\", { data: { path: url } });\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport {\n  resetEntity, fetchQuestion,\n  updateQuestion, newQuestion\n} from './questions.reducer';\nimport Question from './questions.model';\nimport { ChoicesField } from './questions.choices';\n\nimport {\n  InputField, SelectField, Timestamp,\n  MultiInputField, MultiFilePicker\n} from 'src/components/FormFields';\nimport EditLayout from 'src/components/EditLayout';\n\n\nfunction QuestionEdit(props) {\n  return <EditLayout {...props}\n    title=\"سؤال\"\n    entityName=\"questions\"\n    NewFields={formProps => <>\n      <Field component={SelectField} options={Question.locale.options}\n        name=\"locale\" label={Question.locale.label} />\n      <Field component={InputField} name=\"title\" label={Question.title.label} />\n      <Field component={SelectField} options={Question.time_type.options}\n        name=\"time_type\" label={Question.time_type.label} />\n      <Field component={SelectField} options={Question.answer_type.options}\n        name=\"answer_type\" label={Question.answer_type.label} />\n      <Field component={Timestamp} name=\"start_time\" label={Question.start_time.label} />\n      <Field component={Timestamp} name=\"end_time\" label={Question.end_time.label} />\n      <Field component={InputField} name=\"score\" label={Question.score.label} />\n      <Field component={InputField} name=\"tries\" label={Question.tries.label} />\n\n      <Field component={MultiFilePicker} name=\"images\" label={Question.images.label} path=\"q_img\" />\n      <Field component={ChoicesField} name=\"choices\" label={Question.choices.label} />\n      <Field component={MultiInputField} name=\"letters\" label={Question.letters.label} />\n      <Field component={MultiInputField} name=\"letters_num\" label={Question.letters_num.label} asNumber={true} />\n      <Field component={MultiInputField} name=\"solutions\" label={Question.solutions.label} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={Question.id.label} disabled />\n      <Field component={SelectField} options={Question.locale.options}\n        name=\"locale\" label={Question.locale.label} />\n      <Field component={InputField} name=\"title\" label={Question.title.label} />\n      <Field component={SelectField} options={Question.time_type.options}\n        name=\"time_type\" label={Question.time_type.label} />\n      <Field component={SelectField} options={Question.answer_type.options}\n        name=\"answer_type\" label={Question.answer_type.label} />\n      <Field component={Timestamp} name=\"start_time\" label={Question.start_time.label} />\n      <Field component={Timestamp} name=\"end_time\" label={Question.end_time.label} />\n      <Field component={InputField} name=\"score\" label={Question.score.label} />\n      <Field component={InputField} name=\"tries\" label={Question.tries.label} />\n\n      <Field component={MultiFilePicker} name=\"images\" label={Question.images.label} path=\"q_img\" />\n      <Field component={ChoicesField} name=\"choices\" label={Question.choices.label} />\n      <Field component={MultiInputField} name=\"letters\" label={Question.letters.label} />\n      <Field component={MultiInputField} name=\"letters_num\" label={Question.letters_num.label} asNumber={true} />\n      <Field component={MultiInputField} name=\"solutions\" label={Question.solutions.label} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.questions.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchQuestion(id)),\n    updateEntity: (id, entity) => dispatch(updateQuestion(id, entity)),\n    newEntity: entity => dispatch(newQuestion(entity)),\n  })\n)(QuestionEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport QuestionSelect from './questions.select';\nimport QuestionEdit from './questions.edit';\n\n\nexport default function Questions({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={QuestionSelect} />\n      <Route exact path={`${url}/new`} component={QuestionEdit} />\n      <Route exact path={`${url}/:id`} component={QuestionEdit} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchAnswers, deleteAnswer } from './answers.reducer';\nimport Answer from './answers.model';\n\nimport SelectLayout from 'src/components/SelectLayout';\nimport { InputField, SelectField, booleanOptions, EntityField } from 'src/components/FormFields';\n\n\nfunction AnswerSelect(props) {\n  return <SelectLayout {...props}\n    title=\"تلاش‌ها\"\n    entityName=\"answers\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={EntityField} entityName=\"questions\" formName=\"answers/search\"\n          name=\"question_id\" label={Answer.question_id.label} />\n        <Field component={EntityField} entityName=\"users\" formName=\"answers/search\"\n          name=\"user_id\" label={Answer.user_id.label} />\n      </Form.Group>\n      <Form.Group widths='equal'>\n        <Field component={InputField} name=\"text\" label={Answer.text.label} />\n        <Field component={SelectField} name=\"correct\" label={Answer.correct.label}\n          options={booleanOptions} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"question_id\", sortable: true, header: Answer.question_id.label },\n      { key: \"user_id\", sortable: true, header: Answer.user_id.label },\n      { key: \"text\", header: Answer.text.label },\n      { key: \"correct\", header: Answer.correct.label, render: \"boolean\" },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.answers.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchAnswers(searchParams)),\n  deleteAction: id => dispatch(deleteAnswer(id)),\n}))(AnswerSelect);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchAnswer, updateAnswer, newAnswer } from './answers.reducer';\nimport Answer from './answers.model';\n\nimport EditLayout from 'src/components/EditLayout';\nimport { CHECKS, InputField, EntityField, SelectField, booleanOptions } from 'src/components/FormFields';\n\n\nfunction AnswerEdit(props) {\n  return <EditLayout {...props}\n    title=\"تلاش\"\n    entityName=\"answers\"\n    NewFields={formProps => <>\n      <Field component={EntityField} entityName=\"questions\" formName=\"answers/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"question_id\" label={Answer.question_id.label} />\n      <Field component={EntityField} entityName=\"users\" formName=\"answers/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"user_id\" label={Answer.user_id.label} />\n      <Field component={InputField} name=\"text\" label={Answer.text.label} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={Answer.id.label} disabled />\n      <Field component={EntityField} entityName=\"questions\" formName=\"answers/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"question_id\" label={Answer.question_id.label} />\n      <Field component={EntityField} entityName=\"users\" formName=\"answers/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"user_id\" label={Answer.user_id.label} />\n      <Field component={InputField} name=\"text\" label={Answer.text.label}\n        required validate={CHECKS.REQUIRED} />\n      <Field component={SelectField} name=\"correct\" label={Answer.correct.label}\n        options={booleanOptions} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.answers.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchAnswer(id)),\n    updateEntity: (id, entity) => dispatch(updateAnswer(id, entity)),\n    newEntity: entity => dispatch(newAnswer(entity)),\n  })\n)(AnswerEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AnswerSelect from './answers.select';\nimport AnswerEdit from './answers.edit';\n\n\nexport default function Answers({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={AnswerSelect} />\n      <Route exact path={`${url}/new`} component={AnswerEdit} />\n      <Route exact path={`${url}/:id`} component={AnswerEdit} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchHints, deleteHint } from './hints.reducer';\nimport Hint from './hints.model';\n\nimport SelectLayout from 'src/components/SelectLayout';\nimport { EntityField } from 'src/components/FormFields';\n\n\nfunction HintSelect(props) {\n  return <SelectLayout {...props}\n    title=\"راهنمایی‌ها\"\n    entityName=\"hints\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={EntityField} entityName=\"questions\" formName=\"hints/search\"\n          name=\"question_id\" label={Hint.question_id.label} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"question_id\", sortable: true, header: Hint.question_id.label },\n      { key: \"type\", sortable: true, header: Hint.type.label },\n      { key: \"value\", header: Hint.value.label },\n      { key: \"price\", sortable: true, header: Hint.price.label },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.hints.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchHints(searchParams)),\n  deleteAction: id => dispatch(deleteHint(id)),\n}))(HintSelect);\n","import React, { useState } from 'react';\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport { formValueSelector } from 'redux-form';\n\nimport { FilePicker, MultiInputField } from 'src/components/FormFields';\n\nimport { API } from 'src/redux/store_config';\nimport config from 'src/app.config.json';\n\n\nexport const HintField = ({ input, meta, children, path, formProps, ...props }) => {\n  const type = useSelector(state => formValueSelector(formProps.form)(state, \"type\"));\n  switch (type) {\n    case \"image\":\n      return <ImageHint value={input.value} onChange={input.onChange} />;\n    case \"choice\":\n      return <MultiInputField name=\"choices\" label=\"اندیس گزینه‌های حذفی (از صفر)\" input={input} />;\n    case \"letter\":\n      return <MultiInputField name=\"letters\" label=\"اندیس حروف حذفی (از صفر)\" input={input} />;\n    default:\n      return null;\n  }\n}\n\nfunction ImageHint({ value, onChange }) {\n  const [open, setOpen] = useState(false);\n  const [file, setFile] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(false);\n  const onSubmit = () => {\n    setSubmitting(true);\n    saveFile(file, \"q_img\")\n      .then(res => {\n        if (!res) return;\n        onChange(res.data.relative_path);\n        onClose();\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n  return <div style={{ marginBottom: 16 }}>\n    <Modal trigger={<Button onClick={e => { e.preventDefault(); onOpen(); }}>انتخاب تصویر</Button>}\n      open={open} onClose={onClose}>\n      <Modal.Content>\n        <FilePicker input={{ onChange: setFile }} />\n        <Button type='submit' color='green' icon labelPosition=\"left\"\n          disabled={!file} onClick={onSubmit} loading={submitting}>\n          <Icon name='check' />\n          ذخیره\n      </Button>\n      </Modal.Content>\n    </Modal>\n    {!!value ? <Image src={`${config.server_url}storage/${value}`} /> : null}\n  </div>;\n}\n\nfunction saveFile(file, path) {\n  let formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"path\", path);\n  return API.post(\"files\", formData);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchHint, updateHint, newHint } from './hints.reducer';\nimport Hint from './hints.model';\nimport { HintField } from './hints.fields';\n\nimport EditLayout from 'src/components/EditLayout';\nimport { CHECKS, InputField, EntityField, SelectField } from 'src/components/FormFields';\n\n\nfunction HintEdit(props) {\n  return <EditLayout {...props}\n    title=\"راهنمایی\"\n    entityName=\"hints\"\n    NewFields={formProps => <>\n      <Field component={EntityField} entityName=\"questions\" formName=\"hints/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"question_id\" label={Hint.question_id.label} />\n      <Field component={InputField} name=\"price\" label={Hint.price.label} />\n      <Field component={SelectField} options={Hint.type.options}\n        id=\"type\" name=\"type\" label={Hint.type.label} />\n      <Field component={HintField} name=\"value\" label={Hint.value.label} formProps={formProps} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={Hint.id.label} disabled />\n      <Field component={EntityField} entityName=\"questions\" formName=\"hints/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"question_id\" label={Hint.question_id.label} />\n      <Field component={InputField} name=\"price\" label={Hint.price.label} />\n      <Field component={SelectField} options={Hint.type.options}\n        name=\"type\" label={Hint.type.label} />\n      <Field component={HintField} name=\"value\" label={Hint.value.label} formProps={formProps} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.hints.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchHint(id)),\n    updateEntity: (id, entity) => dispatch(updateHint(id, entity)),\n    newEntity: entity => dispatch(newHint(entity)),\n  })\n)(HintEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HintSelect from './hints.select';\nimport HintEdit from './hints.edit';\n\n\nexport default function Hints({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={HintSelect} />\n      <Route exact path={`${url}/new`} component={HintEdit} />\n      <Route exact path={`${url}/:id`} component={HintEdit} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchUserHints, deleteUserHint } from './user_hints.reducer';\nimport UserHint from './user_hints.model';\n\nimport SelectLayout from 'src/components/SelectLayout';\nimport { EntityField } from 'src/components/FormFields';\n\n\nfunction UserHintSelect(props) {\n  return <SelectLayout {...props}\n    title=\"راهنمایی‌های کاربران\"\n    entityName=\"user_hints\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/search\"\n          name=\"hint_id\" label={UserHint.hint_id.label} />\n        <Field component={EntityField} entityName=\"users\" formName=\"user_hints/search\"\n          name=\"user_id\" label={UserHint.user_id.label} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"hint_id\", sortable: true, header: UserHint.hint_id.label },\n      { key: \"user_id\", sortable: true, header: UserHint.user_id.label },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.user_hints.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchUserHints(searchParams)),\n  deleteAction: id => dispatch(deleteUserHint(id)),\n}))(UserHintSelect);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchUserHint, updateUserHint, newUserHint } from './user_hints.reducer';\nimport UserHint from './user_hints.model';\n\nimport EditLayout from 'src/components/EditLayout';\nimport { CHECKS, InputField, EntityField } from 'src/components/FormFields';\n\n\nfunction UserHintEdit(props) {\n  return <EditLayout {...props}\n    title=\"راهنمایی کاربر\"\n    entityName=\"user_hints\"\n    NewFields={formProps => <>\n      <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"hint_id\" label={UserHint.hint_id.label} />\n      <Field component={EntityField} entityName=\"users\" formName=\"user_hints/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"user_id\" label={UserHint.user_id.label} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={UserHint.id.label} disabled />\n      <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"hint_id\" label={UserHint.hint_id.label} />\n      <Field component={EntityField} entityName=\"users\" formName=\"user_hints/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"user_id\" label={UserHint.user_id.label} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.user_hints.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchUserHint(id)),\n    updateEntity: (id, entity) => dispatch(updateUserHint(id, entity)),\n    newEntity: entity => dispatch(newUserHint(entity)),\n  })\n)(UserHintEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport UserHintSelect from './user_hints.select';\nimport UserHintEdit from './user_hints.edit';\n\n\nexport default function UserHints({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={UserHintSelect} />\n      <Route exact path={`${url}/new`} component={UserHintEdit} />\n      <Route exact path={`${url}/:id`} component={UserHintEdit} />\n    </Switch>\n  );\n}\n","\nconst Achievement = {\n  id: { label: \"شناسه\" },\n  code: { label: \"کد\" },\n};\n\nexport default Achievement;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchAchievements, deleteAchievement } from './achievements.reducer';\nimport Achievement from './achievements.model';\n\nimport SelectLayout from 'src/components/SelectLayout';\nimport { InputField } from 'src/components/FormFields';\n\n\nfunction AchievementSelect(props) {\n  return <SelectLayout {...props}\n    title=\"مدال‌ها\"\n    entityName=\"achievements\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={InputField} name=\"code\" label={Achievement.code.label} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"code\", sortable: true, header: Achievement.code.label },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.achievements.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchAchievements(searchParams)),\n  deleteAction: id => dispatch(deleteAchievement(id)),\n}))(AchievementSelect);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchAchievement, updateAchievement, newAchievement } from './achievements.reducer';\nimport Achievement from './achievements.model';\n\nimport EditLayout from 'src/components/EditLayout';\nimport { CHECKS, InputField } from 'src/components/FormFields';\n\n\nfunction AchievementEdit(props) {\n  return <EditLayout {...props}\n    title=\"مدال\"\n    entityName=\"achievements\"\n    NewFields={formProps => <>\n      <Field component={InputField} name=\"code\" label={Achievement.code.label}\n        required validate={CHECKS.REQUIRED} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={Achievement.id.label} disabled />\n      <Field component={InputField} name=\"code\" label={Achievement.code.label}\n        required validate={CHECKS.REQUIRED} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.achievements.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchAchievement(id)),\n    updateEntity: (id, entity) => dispatch(updateAchievement(id, entity)),\n    newEntity: entity => dispatch(newAchievement(entity)),\n  })\n)(AchievementEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AchievementSelect from './achievements.select';\nimport AchievementEdit from './achievements.edit';\n\n\nexport default function Achievements({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={AchievementSelect} />\n      <Route exact path={`${url}/new`} component={AchievementEdit} />\n      <Route exact path={`${url}/:id`} component={AchievementEdit} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\n\nimport { fetchUserAchievements, deleteUserAchievement } from './user_achievements.reducer';\nimport UserAchievement from './user_achievements.model';\n\nimport SelectLayout from 'src/components/SelectLayout';\nimport { EntityField } from 'src/components/FormFields';\n\n\nfunction UserAchievementSelect(props) {\n  return <SelectLayout {...props}\n    title=\"مدال‌های کاربران\"\n    entityName=\"user_achievements\"\n    SearchFields={formProps => <>\n      <Form.Group widths='equal'>\n        <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/search\"\n          name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\n        <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/search\"\n          name=\"user_id\" label={UserAchievement.user_id.label} />\n      </Form.Group>\n    </>}\n    tableSchema={[\n      { key: \"achievement_id\", sortable: true, header: UserAchievement.achievement_id.label },\n      { key: \"user_id\", sortable: true, header: UserAchievement.user_id.label },\n    ]}\n  />;\n}\n\nexport default connect(state => ({\n  entityList: state.user_achievements.entityList,\n}), dispatch => ({\n  fetchMethod: searchParams => dispatch(fetchUserAchievements(searchParams)),\n  deleteAction: id => dispatch(deleteUserAchievement(id)),\n}))(UserAchievementSelect);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\n\nimport { resetEntity, fetchUserAchievement, updateUserAchievement, newUserAchievement } from './user_achievements.reducer';\nimport UserAchievement from './user_achievements.model';\n\nimport EditLayout from 'src/components/EditLayout';\nimport { CHECKS, InputField, EntityField } from 'src/components/FormFields';\n\n\nfunction UserAchievementEdit(props) {\n  return <EditLayout {...props}\n    title=\"مدال کاربر\"\n    entityName=\"user_achievements\"\n    NewFields={formProps => <>\n      <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\n      <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/new\"\n        required validate={CHECKS.REQUIRED}\n        name=\"user_id\" label={UserAchievement.user_id.label} />\n    </>}\n    EditFields={formProps => <>\n      <Field component={InputField} name=\"id\" label={UserAchievement.id.label} disabled />\n      <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\n      <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/edit\"\n        required validate={CHECKS.REQUIRED}\n        name=\"user_id\" label={UserAchievement.user_id.label} />\n    </>}\n  />;\n}\n\nexport default connect(\n  state => ({ entity: state.user_achievements.entity }),\n  dispatch => ({\n    resetEntity: params => dispatch(resetEntity(params)),\n    fetchEntity: id => dispatch(fetchUserAchievement(id)),\n    updateEntity: (id, entity) => dispatch(updateUserAchievement(id, entity)),\n    newEntity: entity => dispatch(newUserAchievement(entity)),\n  })\n)(UserAchievementEdit);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport UserAchievementSelect from './user_achievements.select';\nimport UserAchievementEdit from './user_achievements.edit';\n\n\nexport default function UserAchievements({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={UserAchievementSelect} />\n      <Route exact path={`${url}/new`} component={UserAchievementEdit} />\n      <Route exact path={`${url}/:id`} component={UserAchievementEdit} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { Form, Button, Icon } from 'semantic-ui-react';\nimport { reduxForm, Field } from 'redux-form';\nimport { useDispatch } from 'react-redux';\n\nimport { CHECKS, InputField } from 'src/components/FormFields';\nimport { changePassword } from 'src/modules/auth/auth.reducer';\n\n\nconst PasswordChangeForm = reduxForm({ form: 'settings/password_change' })(\n  (props) => {\n    const { handleSubmit, submitting, pristine, reset } = props;\n    return <Form onSubmit={handleSubmit}>\n\n      <Field component={InputField} type=\"password\" required validate={CHECKS.REQUIRED}\n        name=\"old_password\" label=\"رمز عبور قدیمی\" />\n      <Field component={InputField} type=\"password\" required validate={CHECKS.REQUIRED}\n        name=\"new_password\" label=\"رمز عبور جدید\" />\n      <Field component={InputField} type=\"password\" required validate={CHECKS.REQUIRED}\n        name=\"new_password_confirm\" label=\"تکرار رمز عبور جدید\" />\n\n      <Button type='submit' color='green' icon labelPosition=\"left\"\n        disabled={pristine} loading={submitting}>\n        <Icon name='check' />\n        ذخیره\n      </Button>\n      <Button type='button' secondary icon labelPosition=\"left\"\n        disabled={pristine || submitting} onClick={reset}>\n        <Icon name='refresh' />\n        لغو تغییرات\n      </Button>\n    </Form>;\n  });\n\nconst PasswordChange = () => {\n  const dispatch = useDispatch();\n  const onSubmit = values => {\n    return dispatch(changePassword(values));\n  };\n  return <PasswordChangeForm onSubmit={onSubmit} />;\n};\n\nexport default PasswordChange;\n","import React from 'react';\n\n\nexport default function DeveloperContact() {\n  return <>\n    <p>توسعه‌دهنده: مهران میرخان</p>\n    <p>تلفن همراه: ۰۹۱۲۸۴۷۰۴۲۳</p>\n    <p>ایمیل: mehranmirkhan@gmail.com</p>\n  </>;\n}\n","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\n\nimport Layout from 'src/components/Layout';\n\nimport PasswordChange from './PasswordChange';\nimport DeveloperContact from './DeveloperContact';\n\n\nexport default function Settings() {\n  const panes = [\n    { menuItem: 'تغییر رمز عبور', render: () => <Tab.Pane><PasswordChange /></Tab.Pane> },\n    { menuItem: 'ارتباط با توسعه‌دهنده', render: () => <Tab.Pane><DeveloperContact /></Tab.Pane> },\n  ]\n  return (\n    <Layout>\n      <Tab menu={{ fluid: true, vertical: true, tabular: true }} panes={panes} />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\n\nimport Layout from 'src/components/Layout';\n\n\nfunction NotFound() {\n  return <Layout>\n    <Segment raised textAlign=\"center\" color=\"blue\" inverted>\n      <h1>صفحه‌ی مورد نظر یافت نشد</h1>\n    </Segment>\n  </Layout>;\n}\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  BrowserRouter, Switch,\n  Route, Redirect\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchMe, logout, isAuthenticated, getMe } from 'src/modules/auth/auth.reducer';\n\nimport Auth from 'src/modules/auth';\nimport Report from 'src/modules/report';\nimport News from 'src/modules/news';\nimport Users from 'src/modules/users';\nimport Questions from 'src/modules/questions';\nimport Answers from 'src/modules/answers';\nimport Hints from 'src/modules/hints';\nimport UserHints from 'src/modules/user_hints';\nimport Achievements from 'src/modules/achievements';\nimport UserAchievements from 'src/modules/user_achievements';\nimport Settings from 'src/modules/settings';\nimport NotFound from 'src/modules/NotFound';\n\nimport pjson from '../package.json';\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: isAuthenticated(state),\n});\n\nconst AuthRoute = connect(mapStateToProps)(\n  ({ isAuthenticated, ...otherProps }) =>\n    isAuthenticated\n      ? <Route {...otherProps} />\n      : <Redirect to=\"/\" />\n);\n\nconst UnAuthRoute = connect(mapStateToProps)(\n  ({ isAuthenticated, ...otherProps }) => {\n    return isAuthenticated\n      ? <Redirect to=\"/report\" />\n      : <Route {...otherProps} />\n  }\n);\n\nfunction Routes({ fetchMe, logout, isAuthenticated, me }) {\n  if (isAuthenticated) {\n    if (!me || Object.keys(me).length === 0) {\n      fetchMe();\n      return <div />;\n    } else if (me.role !== 'admin') {\n      logout();\n      alert(\"فقط مدیر سامانه اجازه دسترسی دارد\");\n    }\n  }\n  const routerParams = {};\n  if (!!pjson.homepage)\n    routerParams.basename = pjson.homepage;\n  return (\n    <BrowserRouter {...routerParams}>\n      <Switch>\n        <UnAuthRoute exact path=\"/\" component={Auth} />\n        <AuthRoute exact path=\"/report\" component={Report} />\n        <AuthRoute path=\"/news\" component={News} />\n        <AuthRoute path=\"/users\" component={Users} />\n        <AuthRoute path=\"/questions\" component={Questions} />\n        <AuthRoute path=\"/answers\" component={Answers} />\n        <AuthRoute path=\"/hints\" component={Hints} />\n        <AuthRoute path=\"/user_hints\" component={UserHints} />\n        <AuthRoute path=\"/achievements\" component={Achievements} />\n        <AuthRoute path=\"/user_achievements\" component={UserAchievements} />\n        <AuthRoute exact path=\"/settings\" component={Settings} />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default connect(state => ({\n  isAuthenticated: isAuthenticated(state),\n  me: getMe(state),\n}), dispatch => ({\n  fetchMe: () => dispatch(fetchMe()),\n  logout: () => dispatch(logout()),\n}))(Routes);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\n\nimport { store, persistor } from 'src/redux/store_config';\nimport ErrorHandler, { AlertTemplate } from 'src/components/ErrorHandler';\nimport Routes from 'src/Routes';\n\nimport 'src/font/fonts.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './App.css';\n\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <AlertProvider template={AlertTemplate}\n          timeout={5000} position={positions.TOP_CENTER} transition={transitions.SCALE}>\n          <ErrorHandler>\n            <Routes />\n          </ErrorHandler>\n        </AlertProvider>\n      </PersistGate>\n    </Provider>\n  );\n}\n"],"sourceRoot":""}