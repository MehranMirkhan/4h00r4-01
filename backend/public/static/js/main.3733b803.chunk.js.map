{
    "version": 3,
    "sources": [
        "redux/flow.reducer.js",
        "modules/auth/auth.reducer.js",
        "modules/report/report.reducer.js",
        "modules/users/users.reducer.js",
        "modules/questions/questions.model.js",
        "modules/questions/questions.reducer.js",
        "modules/answers/answers.model.js",
        "modules/answers/answers.reducer.js",
        "modules/hints/hints.model.js",
        "modules/hints/hints.reducer.js",
        "modules/user_hints/user_hints.model.js",
        "modules/user_hints/user_hints.reducer.js",
        "modules/achievements/achievements.reducer.js",
        "modules/user_achievements/user_achievements.model.js",
        "modules/user_achievements/user_achievements.reducer.js",
        "redux/reducer.js",
        "redux/store_config.js",
        "components/ErrorHandler.jsx",
        "components/Common.jsx",
        "components/FormFields.jsx",
        "modules/auth/index.jsx",
        "components/Layout.jsx",
        "modules/report/index.jsx",
        "modules/users/users.model.js",
        "components/Table.jsx",
        "components/SelectLayout.jsx",
        "modules/users/users.select.jsx",
        "components/EditLayout.jsx",
        "modules/users/users.edit.jsx",
        "modules/users/index.jsx",
        "modules/questions/questions.select.jsx",
        "modules/questions/questions.choices.jsx",
        "modules/questions/questions.edit.jsx",
        "modules/questions/index.jsx",
        "modules/answers/answers.select.jsx",
        "modules/answers/answers.edit.jsx",
        "modules/answers/index.jsx",
        "modules/hints/hints.select.jsx",
        "modules/hints/hints.fields.jsx",
        "modules/hints/hints.edit.jsx",
        "modules/hints/index.jsx",
        "modules/user_hints/user_hints.select.jsx",
        "modules/user_hints/user_hints.edit.jsx",
        "modules/user_hints/index.jsx",
        "modules/achievements/achievements.model.js",
        "modules/achievements/achievements.select.jsx",
        "modules/achievements/achievements.edit.jsx",
        "modules/achievements/index.jsx",
        "modules/user_achievements/user_achievements.select.jsx",
        "modules/user_achievements/user_achievements.edit.jsx",
        "modules/user_achievements/index.jsx",
        "modules/settings/PasswordChange.jsx",
        "modules/settings/DeveloperContact.jsx",
        "modules/settings/index.jsx",
        "modules/NotFound.jsx",
        "Routes.jsx",
        "index.js",
        "App.jsx"
    ],
    "names": [
        "FLOW_ACTIONS",
        "SELECTION_STATES",
        "IDLE",
        "SELECTING",
        "SELECTED",
        "initialState",
        "selectionState",
        "selectionCode",
        "undefined",
        "selectionCarry",
        "selectedEntity",
        "transit",
        "code",
        "carry",
        "type",
        "payload",
        "selectionReceived",
        "AUTH_ACTIONS",
        "token",
        "me",
        "login",
        "username",
        "password",
        "dispatch",
        "_",
        "API",
        "post",
        "then",
        "resp",
        "data",
        "fetchMe",
        "logout",
        "get",
        "getMe",
        "state",
        "auth",
        "isAuthenticated",
        "access_token",
        "REPORT_ACTIONS",
        "USERS_ACTIONS",
        "entityList",
        "entity",
        "fetchUsers",
        "searchParams",
        "console",
        "log",
        "params",
        "filter",
        "Object",
        "entries",
        "length",
        "keys",
        "map",
        "k",
        "join",
        "page",
        "page_size",
        "sortCol",
        "sort",
        "sortDir",
        "fetchUser",
        "id",
        "Question",
        "label",
        "locale",
        "options",
        "key",
        "text",
        "value",
        "title",
        "time_type",
        "answer_type",
        "start_time",
        "end_time",
        "score",
        "tries",
        "images",
        "choices",
        "letters",
        "letters_num",
        "solutions",
        "print",
        "q",
        "find",
        "x",
        "moment",
        "format",
        "QUESTIONS_ACTIONS",
        "fetchQuestions",
        "fetchQuestion",
        "Answer",
        "question_id",
        "user_id",
        "correct",
        "a",
        "to",
        "ANSWERS_ACTIONS",
        "fetchAnswers",
        "fetchAnswer",
        "Hint",
        "price",
        "HINTS_ACTIONS",
        "fetchHints",
        "fetchHint",
        "UserHint",
        "hint_id",
        "USER_HINTS_ACTIONS",
        "fetchUserHints",
        "fetchUserHint",
        "ACHIEVEMENTS_ACTIONS",
        "fetchAchievements",
        "fetchAchievement",
        "UserAchievement",
        "achievement_id",
        "USER_ACHIEVEMENTS_ACTIONS",
        "fetchUserAchievements",
        "fetchUserAchievement",
        "combineReducers",
        "form",
        "formReducer",
        "flow",
        "action",
        "report",
        "users",
        "questions",
        "answers",
        "hints",
        "user_hints",
        "achievements",
        "user_achievements",
        "persistConfig",
        "config",
        "persist_key",
        "storage",
        "whitelist",
        "persistedReducer",
        "persistReducer",
        "reducer",
        "Axios",
        "create",
        "baseURL",
        "server_url",
        "timeout",
        "request_timeout",
        "headers",
        "store",
        "createStore",
        "applyMiddleware",
        "thunk",
        "withExtraArgument",
        "persistor",
        "persistStore",
        "interceptors",
        "request",
        "use",
        "Authorization",
        "getState",
        "getAccessToken",
        "AlertTemplate",
        "style",
        "message",
        "close",
        "Message",
        "onDismiss",
        "content",
        "paddingLeft",
        "ErrorHandler",
        "error",
        "this",
        "requestInterceptor",
        "req",
        "setState",
        "responseInterceptor",
        "response",
        "res",
        "props",
        "alert",
        "JSON",
        "stringify",
        "eject",
        "errorInfo",
        "children",
        "React",
        "Component",
        "withAlert",
        "Center",
        "minHeight",
        "display",
        "alignItems",
        "justifyContent",
        "BackButton",
        "history",
        "useDispatch",
        "textAlign",
        "Button",
        "icon",
        "labelPosition",
        "onClick",
        "goBack",
        "Icon",
        "name",
        "CHECKS",
        "REQUIRED",
        "v",
        "MAX_LEN",
        "maxLen",
        "MIN_LEN",
        "minLen",
        "MAX_VAL",
        "maxVal",
        "MIN_VAL",
        "minVal",
        "InputField",
        "input",
        "meta",
        "Form",
        "Input",
        "onChange",
        "e",
        "touched",
        "invalid",
        "MultiInputField",
        "values",
        "parse",
        "N",
        "result",
        "i",
        "push",
        "color",
        "preventDefault",
        "splice",
        "fluid",
        "marginTop",
        "Segment",
        "raised",
        "attached",
        "inverted",
        "circular",
        "size",
        "cursor",
        "float",
        "SelectField",
        "Dropdown",
        "selection",
        "booleanOptions",
        "EntityField",
        "entityName",
        "formName",
        "useSelector",
        "getFormValues",
        "actionButton",
        "as",
        "Link",
        "initialize",
        "Timestamp",
        "date",
        "toDate",
        "Label",
        "selected",
        "d",
        "showTimeSelect",
        "dateFormat",
        "timeFormat",
        "timeIntervals",
        "height",
        "FilePicker",
        "inputEl",
        "useRef",
        "useState",
        "setText",
        "image",
        "setImage",
        "current",
        "click",
        "ref",
        "accept",
        "hidden",
        "files",
        "target",
        "reader",
        "FileReader",
        "onload",
        "ev",
        "readAsDataURL",
        "Image",
        "src",
        "marginBottom",
        "MultiFilePicker",
        "path",
        "file",
        "setFile",
        "open",
        "setOpen",
        "submitting",
        "setSubmitting",
        "maxWidth",
        "marginRight",
        "url",
        "delete",
        "Modal",
        "trigger",
        "onClose",
        "Header",
        "Content",
        "disabled",
        "loading",
        "formData",
        "FormData",
        "append",
        "saveFile",
        "relative_path",
        "finally",
        "checkMinLen6",
        "LoginForm",
        "reduxForm",
        "handleSubmit",
        "pristine",
        "onSubmit",
        "Field",
        "component",
        "autoFocus",
        "required",
        "validate",
        "primary",
        "Auth",
        "backgroundColor",
        "width",
        "connect",
        "Navbar",
        "withRouter",
        "location",
        "route",
        "pathname",
        "split",
        "Menu",
        "Item",
        "active",
        "link",
        "item",
        "indexOf",
        "position",
        "Layout",
        "Container",
        "margin",
        "Report",
        "fetchReport",
        "padded",
        "server",
        "Grid",
        "columns",
        "Column",
        "Date",
        "timestamp",
        "toUTCString",
        "Statistic",
        "Value",
        "count",
        "User",
        "phone",
        "email",
        "role",
        "is_active",
        "passwordConfirm",
        "Row",
        "schema",
        "index",
        "c",
        "col",
        "render",
        "trueIcon",
        "falseIcon",
        "cells",
        "handleSort",
        "sorted",
        "sortable",
        "header",
        "Pagination",
        "colSpan",
        "pagination",
        "current_page",
        "last_page",
        "per_page",
        "setPage",
        "setPageSize",
        "pages",
        "Table",
        "HeaderCell",
        "direction",
        "marginLeft",
        "minWidth",
        "floated",
        "MyTable",
        "onSort",
        "celled",
        "headerRow",
        "renderBodyRow",
        "footerRow",
        "tableData",
        "SearchResult",
        "tableSchema",
        "deleteAction",
        "selectButton",
        "setSelected",
        "editButton",
        "actions",
        "negative",
        "success",
        "deleteButton",
        "SelectLayout",
        "SF",
        "qs",
        "search",
        "fetchMethod",
        "Fields",
        "SearchFields",
        "reset",
        "secondary",
        "initForms",
        "submit",
        "deleteUser",
        "formProps",
        "Group",
        "widths",
        "EditForm",
        "isNew",
        "enableReinitialize",
        "EditLayout",
        "NF",
        "EF",
        "fetchEntity",
        "updateEntity",
        "newEntity",
        "match",
        "resetEntity",
        "NewFields",
        "EditFields",
        "initialValues",
        "put",
        "updateUser",
        "newUser",
        "Users",
        "exact",
        "UserSelect",
        "UserEdit",
        "deleteQuestion",
        "ChoicesField",
        "obj",
        "setObj",
        "ChoiceRow",
        "updateQuestion",
        "newQuestion",
        "Questions",
        "QuestionSelect",
        "QuestionEdit",
        "deleteAnswer",
        "updateAnswer",
        "newAnswer",
        "Answers",
        "AnswerSelect",
        "AnswerEdit",
        "deleteHint",
        "HintField",
        "formValueSelector",
        "ImageHint",
        "updateHint",
        "newHint",
        "Hints",
        "HintSelect",
        "HintEdit",
        "deleteUserHint",
        "updateUserHint",
        "newUserHint",
        "UserHints",
        "UserHintSelect",
        "UserHintEdit",
        "Achievement",
        "deleteAchievement",
        "updateAchievement",
        "newAchievement",
        "Achievements",
        "AchievementSelect",
        "AchievementEdit",
        "deleteUserAchievement",
        "updateUserAchievement",
        "newUserAchievement",
        "UserAchievements",
        "UserAchievementSelect",
        "UserAchievementEdit",
        "PasswordChangeForm",
        "PasswordChange",
        "old_password",
        "new_password",
        "new_password_confirm",
        "status",
        "changePassword",
        "DeveloperContact",
        "href",
        "rel",
        "Settings",
        "panes",
        "menuItem",
        "Tab",
        "Pane",
        "menu",
        "vertical",
        "tabular",
        "NotFound",
        "mapStateToProps",
        "AuthRoute",
        "otherProps",
        "UnAuthRoute",
        "ReactDOM",
        "template",
        "positions",
        "TOP_CENTER",
        "transition",
        "transitions",
        "SCALE",
        "document",
        "getElementById"
    ],
    "mappings": "qiCACO,IAAMA,EACC,kBADDA,EAEG,oBAFHA,EAGS,0BAHTA,EAIJ,aAGIC,EAAmB,CAC9BC,KAAM,OACNC,UAAW,YACXC,SAAU,YAGNC,EAAe,CACnBC,eAAgBL,EAAiBC,KACjCK,mBAAeC,EACfC,oBAAgBD,EAChBE,oBAAgBF,GAmCLG,EAAU,SAACC,EAAMC,GAAP,MAAkB,CACvCC,KAAMd,EACNe,QAAS,CAAEH,OAAMC,WAQNG,EAAoB,iBAAO,CACtCF,KAAMd,I,yjBChED,IAAMiB,EACJ,aADIA,EAEP,UAFOA,EAGJ,aAGHZ,EAAe,CACnBa,MAAO,GACPC,GAAI,IA0BOC,EAAQ,SAACC,EAAUC,GAAX,OAAwB,SAACC,EAAUC,EAAGC,GACzD,OAAOA,EAAIC,KAAK,SAAU,CAAEL,WAAUC,aACnCK,MAAK,SAAAC,GACJL,EAAS,CACPT,KAAMG,EACNF,QAAWa,EAAOA,EAAKC,UAAOrB,IAEhCe,EAASO,UAIFC,EAAS,kBAAM,SAACR,GAC3BA,EAAS,CACPT,KAAMG,MAIGa,EAAU,kBAAM,SAACP,EAAUC,EAAGC,GACzC,OAAOA,EAAIO,IAAI,UACZL,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMG,EACNF,QAAWa,EAAOA,EAAKC,UAAOrB,SAqBvByB,EAAQ,SAAAC,GAAK,OAAIA,EAAMC,KAAKhB,IAC5BiB,EAAkB,SAAAF,GAAK,QAAMA,EAAMC,KAAKjB,SAAWgB,EAAMC,KAAKjB,MAAMmB,c,yjBC7E1E,IAAMC,EACN,aADMA,EAEJ,eAGHjC,EAAe,G,yjBCLd,IAAMkC,EACM,wBADNA,EAEC,mBAFDA,EAGJ,cAGHlC,EAAe,CACnBmC,WAAY,GACZC,YAAQjC,GAwCGkC,EAAa,SAACC,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GACxDmB,QAAQC,IAAI,sBACZ,IAAIC,EAAS,GASb,OARIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC9Bb,GAAgBA,EAAac,UAC/BX,EAAOY,MAAiC,QAAzBf,EAAagB,QAAoB,GAAK,KAAOhB,EAAac,SACpEhC,EAAIO,IAAI,kBAAmB,CAAEc,WACjCnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMyB,EACNxB,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvBoD,EAAY,SAAAC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE3C,GADAmB,QAAQC,IAAI,iBAAkBgB,GACzBA,EACL,OAAOpC,EAAIO,IAAJ,0BAA2B6B,IAC/BlC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMyB,EACNxB,QAAWa,EAAOA,EAAKC,UAAOrB,S,mBCtE9BsD,GAAW,CACfD,GAAI,CAAEE,MAAO,kCACbC,OAAQ,CACND,MAAO,2BAAQE,QAAS,CACtB,CAAEC,IAAK,OAAQC,KAAM,GAAIC,MAAO,MAChC,CAAEF,IAAK,KAAMC,KAAM,6CAAWC,MAAO,MACrC,CAAEF,IAAK,KAAMC,KAAM,iCAASC,MAAO,QAGvCC,MAAO,CAAEN,MAAO,kCAChBO,UAAW,CACTP,MAAO,8CAAYE,QAAS,CAC1B,CAAEC,IAAK,OAAQC,KAAM,GAAIC,MAAO,MAChC,CAAEF,IAAK,QAASC,KAAM,uCAAUC,MAAO,SACvC,CAAEF,IAAK,SAAUC,KAAM,iCAASC,MAAO,YAG3CG,YAAa,CACXR,MAAO,8CAAYE,QAAS,CAC1B,CAAEC,IAAK,OAAQC,KAAM,GAAIC,MAAO,MAChC,CAAEF,IAAK,OAAQC,KAAM,2BAAQC,MAAO,QACpC,CAAEF,IAAK,SAAUC,KAAM,mDAAYC,MAAO,UAC1C,CAAEF,IAAK,SAAUC,KAAM,iCAASC,MAAO,YAG3CI,WAAY,CAAET,MAAO,2DACrBU,SAAU,CAAEV,MAAO,iEACnBW,MAAO,CAAEX,MAAO,wCAChBY,MAAO,CAAEZ,MAAO,2DAChBa,OAAQ,CAAEb,MAAO,wCACjBc,QAAS,CAAEd,MAAO,oDAClBe,QAAS,CAAEf,MAAO,4BAClBgB,YAAa,CAAEhB,MAAO,2DACtBiB,UAAW,CAAEjB,MAAO,+CAGPD,MAEFmB,GAAQ,SAAAC,GAOnB,OANAA,EAAEZ,UAAYR,GAASQ,UAAUL,QAAQkB,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,QAAUc,EAAEZ,aAC3DY,EAAEZ,YAAWY,EAAEZ,UAAYY,EAAEZ,UAAUH,MAC7Ce,EAAEX,YAAcT,GAASS,YAAYN,QAAQkB,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,QAAUc,EAAEX,eAC/DW,EAAEX,cAAaW,EAAEX,YAAcW,EAAEX,YAAYJ,MAC/Ce,EAAEV,aAAYU,EAAEV,WAAaa,KAAOH,EAAEV,WAAY,uBAAuBc,OAAO,kBAChFJ,EAAET,WAAUS,EAAET,SAAWY,KAAOH,EAAET,SAAU,uBAAuBa,OAAO,kBACvEJ,G,6jBC7CF,IAAMK,GACM,4BADNA,GAEC,uBAFDA,GAGJ,kBAGHlF,GAAe,CACnBmC,WAAY,GACZC,YAAQjC,GA0CGgF,GAAiB,SAAC7C,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GAC5DmB,QAAQC,IAAI,0BACZ,IAAIC,EAAS,GAOb,OANIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC3B/B,EAAIO,IAAI,sBAAuB,CAAEc,WACrCnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMyE,GACNxE,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvBiF,GAAgB,SAAA5B,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE/C,GADAmB,QAAQC,IAAI,qBAAsBgB,GAC7BA,EACL,OAAOpC,EAAIO,IAAJ,8BAA+B6B,IACnClC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMyE,GACNxE,QAAWa,EAAOA,EAAKC,UAAOrB,S,SC/DrBkF,GARA,CACb7B,GAAI,CAAEE,MAAO,kCACb4B,YAAa,CAAE5B,MAAO,2DACtB6B,QAAS,CAAE7B,MAAO,iEAClBI,KAAM,CAAEJ,MAAO,sBACf8B,QAAS,CAAE9B,MAAO,mCAKPkB,GAAQ,SAAAa,GAGnB,OAFAA,EAAEH,YAAc,kBAAC,KAAD,CAAMI,GAAE,qBAAgBD,EAAEH,cAAgBG,EAAEH,aAC5DG,EAAEF,QAAU,kBAAC,KAAD,CAAMG,GAAE,iBAAYD,EAAEF,UAAYE,EAAEF,SACzCE,G,6jBCdF,IAAME,GACM,0BADNA,GAEC,qBAFDA,GAGJ,gBAGH3F,GAAe,CACnBmC,WAAY,GACZC,YAAQjC,GA0CGyF,GAAe,SAACtD,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GAC1DmB,QAAQC,IAAI,wBACZ,IAAIC,EAAS,GAOb,OANIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC3B/B,EAAIO,IAAI,oBAAqB,CAAEc,WACnCnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMkF,GACNjF,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvB0F,GAAc,SAAArC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE7C,GADAmB,QAAQC,IAAI,mBAAoBgB,GAC3BA,EACL,OAAOpC,EAAIO,IAAJ,4BAA6B6B,IACjClC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMkF,GACNjF,QAAWa,EAAOA,EAAKC,UAAOrB,SCtDrB2F,GAjBF,CACXtC,GAAI,CAAEE,MAAO,kCACb4B,YAAa,CAAE5B,MAAO,2DACtBjD,KAAM,CACJiD,MAAO,qBAAOE,QAAS,CACrB,CAAEC,IAAK,OAAQC,KAAM,GAAIC,MAAO,MAChC,CAAEF,IAAK,QAASC,KAAM,iCAASC,MAAO,SACtC,CAAEF,IAAK,SAAUC,KAAM,iCAASC,MAAO,UACvC,CAAEF,IAAK,SAAUC,KAAM,2BAAQC,MAAO,UACtC,CAAEF,IAAK,MAAOC,KAAM,2BAAQC,MAAO,SAIvCA,MAAO,CAAEL,MAAO,kCAChBqC,MAAO,CAAErC,MAAO,6BAKLkB,GAAQ,SAAAa,GAEnB,OADAA,EAAEH,YAAc,kBAAC,KAAD,CAAMI,GAAE,qBAAgBD,EAAEH,cAAgBG,EAAEH,aACrDG,G,6jBCtBF,IAAMO,GACM,wBADNA,GAEC,mBAFDA,GAGJ,cAGHhG,GAAe,CACnBmC,WAAY,GACZC,YAAQjC,GA0CG8F,GAAa,SAAC3D,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GACxDmB,QAAQC,IAAI,sBACZ,IAAIC,EAAS,GAOb,OANIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC3B/B,EAAIO,IAAI,kBAAmB,CAAEc,WACjCnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMuF,GACNtF,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvB+F,GAAY,SAAA1C,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE3C,GADAmB,QAAQC,IAAI,iBAAkBgB,GACzBA,EACL,OAAOpC,EAAIO,IAAJ,0BAA2B6B,IAC/BlC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMuF,GACNtF,QAAWa,EAAOA,EAAKC,UAAOrB,SCjErBgG,GANE,CACf3C,GAAI,CAAEE,MAAO,kCACb0C,QAAS,CAAE1C,MAAO,mFAClB6B,QAAS,CAAE7B,MAAO,kEAKPkB,GAAQ,SAAAa,GAGnB,OAFAA,EAAEW,QAAU,kBAAC,KAAD,CAAMV,GAAE,iBAAYD,EAAEW,UAAYX,EAAEW,SAChDX,EAAEF,QAAU,kBAAC,KAAD,CAAMG,GAAE,iBAAYD,EAAEF,UAAYE,EAAEF,SACzCE,G,6jBCZF,IAAMY,GACM,6BADNA,GAEC,wBAFDA,GAGJ,mBAGHrG,GAAe,CACnBmC,WAAY,GACZC,YAAQjC,GA0CGmG,GAAiB,SAAChE,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GAC5DmB,QAAQC,IAAI,2BACZ,IAAIC,EAAS,GAOb,OANIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC3B/B,EAAIO,IAAI,uBAAwB,CAAEc,WACtCnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAM4F,GACN3F,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvBoG,GAAgB,SAAA/C,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE/C,GADAmB,QAAQC,IAAI,sBAAuBgB,GAC9BA,EACL,OAAOpC,EAAIO,IAAJ,+BAAgC6B,IACpClC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAM4F,GACN3F,QAAWa,EAAOA,EAAKC,UAAOrB,S,6jBCzE7B,IAAMqG,GACM,+BADNA,GAEC,0BAFDA,GAGJ,qBAGHxG,GAAe,CACnBmC,WAAY,GACZC,YAAQjC,GAwCGsG,GAAoB,SAACnE,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GAC/DmB,QAAQC,IAAI,6BACZ,IAAIC,EAAS,GAOb,OANIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC3B/B,EAAIO,IAAI,yBAA0B,CAAEc,WACxCnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAM+F,GACN9F,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvBuG,GAAmB,SAAAlD,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAElD,GADAmB,QAAQC,IAAI,wBAAyBgB,GAChCA,EACL,OAAOpC,EAAIO,IAAJ,iCAAkC6B,IACtClC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAM+F,GACN9F,QAAWa,EAAOA,EAAKC,UAAOrB,SC9DrBwG,GANS,CACtBnD,GAAI,CAAEE,MAAO,kCACbkD,eAAgB,CAAElD,MAAO,2DACzB6B,QAAS,CAAE7B,MAAO,kEAKPkB,GAAQ,SAAAa,GAGnB,OAFAA,EAAEmB,eAAiB,kBAAC,KAAD,CAAMlB,GAAE,wBAAmBD,EAAEmB,iBAAmBnB,EAAEmB,gBACrEnB,EAAEF,QAAU,kBAAC,KAAD,CAAMG,GAAE,iBAAYD,EAAEF,UAAYE,EAAEF,SACzCE,G,6jBCZF,IAAMoB,GACM,oCADNA,GAEC,+BAFDA,GAGJ,0BAGH7G,GAAe,CACnBmC,WAAY,GACZC,YAAQjC,GA0CG2G,GAAwB,SAACxE,GAAD,OAAkB,SAACpB,EAAUC,EAAGC,GACnEmB,QAAQC,IAAI,kCACZ,IAAIC,EAAS,GAOb,OANIH,GAAgBA,EAAaI,QAAyD,IAA/CC,OAAOC,QAAQN,EAAaI,QAAQG,SAC7EJ,EAAOC,OAASC,OAAOG,KAAKR,EAAaI,QAAQK,KAAI,SAAAC,GAAC,gBAAOA,EAAP,YAAYV,EAAaI,OAAOM,OAAMC,KAAK,MAC/FX,GAAgBA,EAAaY,OAC/BT,EAAOS,KAAOZ,EAAaY,MACzBZ,GAAgBA,EAAaa,YAC/BV,EAAOU,UAAYb,EAAaa,WAC3B/B,EAAIO,IAAI,8BAA+B,CAAEc,WAC7CnB,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMoG,GACNnG,QAAWa,EAAOA,EAAKC,UAAOrB,SAIvB4G,GAAuB,SAAAvD,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAEtD,GADAmB,QAAQC,IAAI,6BAA8BgB,GACrCA,EACL,OAAOpC,EAAIO,IAAJ,sCAAuC6B,IAC3ClC,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMoG,GACNnG,QAAWa,EAAOA,EAAKC,UAAOrB,SC5DrB6G,eAAgB,CAC7BC,KAAMC,IACNC,KfKa,WAAmC,IAAlCtF,EAAiC,uDAAzB7B,EAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKd,EACH,OAAO,EAAP,GACKkC,EADL,CAEE5B,eAAgBL,EAAiBE,UACjCI,cAAekH,EAAO1G,QAAQH,KAC9BH,eAAgBgH,EAAO1G,QAAQF,MAC/BH,oBAAgBF,IAEpB,KAAKR,EACH,OAAO,EAAP,GACKkC,EADL,CAEE5B,eAAgBL,EAAiBG,SACjCM,eAAgB+G,EAAO1G,QAAQ0B,SAEnC,KAAKzC,EACH,OAAO,EAAP,GACKkC,EADL,CAEE5B,eAAgBL,EAAiBC,OAErC,KAAKF,EACH,OAAO,EAAP,GACKK,GAEP,QACE,OAAO6B,Ie9BXC,KdNa,WAAmC,IAAlCD,EAAiC,uDAAzB7B,EAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKG,EACH,OAAO,KACFiB,EADL,CAEEhB,MAAOuG,EAAO1G,UAElB,KAAKE,EACH,OAAO,KACFiB,EADL,CAEEf,GAAIsG,EAAO1G,UAEf,KAAKE,EACH,OAAO,KACFZ,GAEP,QACE,OAAO6B,IcVXwF,ObXa,WAAmC,IAAlCxF,EAAiC,uDAAzB7B,EAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKwB,EACH,OAAO,KACFjC,EADL,GAEKoH,EAAO1G,SAEd,KAAKuB,EACH,OAAO,KACFjC,GAEP,QACE,OAAO6B,IaAXyF,MZRa,WAAmC,IAAlCzF,EAAiC,uDAAzB7B,EAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKyB,EACH,OAAO,KACFL,EADL,CAEEM,WAAYiF,EAAO1G,UAEvB,KAAKwB,EACH,OAAO,KACFL,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAKwB,EACH,OAAO,KACFlC,GAEP,QACE,OAAO6B,IYRX0F,UVPa,WAAmC,IAAlC1F,EAAiC,uDAAzB7B,GAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKyE,GACH,OAAKkC,EAAO1G,SACZ0G,EAAO1G,QAAQc,KAAO4F,EAAO1G,QAAQc,KAAKuB,IAAI6B,IACvC,MACF/C,EADL,CAEEM,WAAYiF,EAAO1G,WAJOmB,EAM9B,KAAKqD,GACH,OAAO,MACFrD,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAKwE,GACH,OAAO,MACFlF,IAEP,QACE,OAAO6B,IUXX2F,QRRa,WAAmC,IAAlC3F,EAAiC,uDAAzB7B,GAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKkF,GACH,OAAKyB,EAAO1G,SACV0G,EAAO1G,QAAQc,KAAO4F,EAAO1G,QAAQc,KAAKuB,IAAI6B,IACzC,MACF/C,EADL,CAEEM,WAAYiF,EAAO1G,WAJOmB,EAM9B,KAAK8D,GACH,OAAO,MACF9D,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAKiF,GACH,OAAO,MACF3F,IAEP,QACE,OAAO6B,IQVX4F,MNTa,WAAmC,IAAlC5F,EAAiC,uDAAzB7B,GAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKuF,GACH,OAAKoB,EAAO1G,SACV0G,EAAO1G,QAAQc,KAAO4F,EAAO1G,QAAQc,KAAKuB,IAAI6B,IACzC,MACF/C,EADL,CAEEM,WAAYiF,EAAO1G,WAJOmB,EAM9B,KAAKmE,GACH,OAAO,MACFnE,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAKsF,GACH,OAAO,MACFhG,IAEP,QACE,OAAO6B,IMTX6F,WJVa,WAAmC,IAAlC7F,EAAiC,uDAAzB7B,GAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAK4F,GACH,OAAKe,EAAO1G,SACV0G,EAAO1G,QAAQc,KAAO4F,EAAO1G,QAAQc,KAAKuB,IAAI6B,IACzC,MACF/C,EADL,CAEEM,WAAYiF,EAAO1G,WAJOmB,EAM9B,KAAKwE,GACH,OAAO,MACFxE,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAK2F,GACH,OAAO,MACFrG,IAEP,QACE,OAAO6B,IIRX8F,aHZa,WAAmC,IAAlC9F,EAAiC,uDAAzB7B,GAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAK+F,GACH,OAAO,MACF3E,EADL,CAEEM,WAAYiF,EAAO1G,UAEvB,KAAK8F,GACH,OAAO,MACF3E,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAK8F,GACH,OAAO,MACFxG,IAEP,QACE,OAAO6B,IGJX+F,kBDZa,WAAmC,IAAlC/F,EAAiC,uDAAzB7B,GAAcoH,EAAW,uCAC/C,OAAQA,EAAO3G,MACb,KAAKoG,GACH,OAAKO,EAAO1G,SACV0G,EAAO1G,QAAQc,KAAO4F,EAAO1G,QAAQc,KAAKuB,IAAI6B,IACzC,MACF/C,EADL,CAEEM,WAAYiF,EAAO1G,WAJOmB,EAM9B,KAAKgF,GACH,OAAO,MACFhF,EADL,CAEEO,OAAQgF,EAAO1G,UAEnB,KAAKmG,GACH,OAAO,MACF7G,IAEP,QACE,OAAO6B,M,SEpBPgG,GAAgB,CACpBhE,IAAKiE,GAAOC,YACZC,YACAC,UAAW,CAAC,SAGRC,GAAmBC,YAAeN,GAAeO,IAE1ChH,GAAMiH,IAAMC,OAAO,CAC9BC,QAAST,GAAOU,WAAa,MAC7BC,QAASX,GAAOY,gBAChBC,QAAS,CAAE,OAAU,mBAAoB,eAAgB,sBAGrDC,GAAQC,YACZX,GACAY,YAAgBC,IAAMC,kBAAkB5H,MACpC6H,GAAYC,YAAaN,IAI/BxH,GAAI+H,aAAaC,QAAQC,KACvB,SAAAvB,GACE,IAAKA,EAAOa,QAAQW,cAAe,CACjC,IAAMzH,EAAQ+G,GAAMW,WAChBxH,EAAgBF,KAClBiG,EAAOa,QAAQW,cAAf,iBfqCsB,SAAAzH,GAAK,QAAMA,EAAMC,KAAKjB,OAASgB,EAAMC,KAAKjB,MAAMmB,aerC7BwH,CAAe3H,KAG5D,OAAOiG,K,2DCnCE2B,GAAgB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAO9F,EAA8B,EAA9BA,QAAS+F,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACjDnJ,EAAI,eAAMmD,EAAQnD,MAAO,GAC/B,OAAO,yBAAKiJ,MAAOA,GACjB,kBAACG,GAAA,EAAD,eACEC,UAAWF,EACXG,QAAS,uBAAGL,MAAO,CAAEM,YAAa,KAAOL,IACrClJ,MAMJwJ,G,8MACJpI,MAAQ,CACNqI,MAAO,M,qFAGY,IAAD,OAElBC,KAAKC,mBAAqBhJ,GAAI+H,aAAaC,QAAQC,KAAI,SAAAgB,GAErD,OADA,EAAKC,SAAS,CAAEJ,MAAO,OAChBG,KAGTF,KAAKI,oBAAsBnJ,GAAI+H,aAAaqB,SAASnB,KACnD,SAAAoB,GAAG,OAAIA,KACP,SAAAP,GACE3H,QAAQC,IAAI0H,GACNA,EAAMM,UAAcN,EAAMM,SAAShJ,MAAU0I,EAAMM,SAAShJ,KAAKmI,SACrE,EAAKe,MAAMC,MAAMT,MAAMU,KAAKC,UAAUX,EAAMM,SAAShJ,KAAKmI,UAE5D,EAAKW,SAAS,CAAEJ,e,6CAOpB9I,GAAI+H,aAAaC,QAAQ0B,MAAMX,KAAKC,oBACpChJ,GAAI+H,aAAaqB,SAASM,MAAMX,KAAKI,uB,wCAGrBL,EAAOa,GACvBxI,QAAQC,IAAI0H,GACNA,GAAWA,EAAMP,SACrBQ,KAAKO,MAAMC,MAAMT,MAAMU,KAAKC,UAAUX,EAAMP,Y,+BAI9C,OAAOQ,KAAKO,MAAMM,a,GArCKC,IAAMC,WAyClBC,iBAAYlB,I,6ECpDpB,SAASmB,GAAT,GAA+B,IAAbJ,EAAY,EAAZA,SACvB,OAAO,yBAAKtB,MAAO,CAAE2B,UAAW,QAASC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAC7FR,GAIE,IAAMS,GAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrBxK,EAAWyK,cACjB,OAAO,yBAAKjC,MAAO,CAAEkC,UAAW,SAC9B,kBAACC,GAAA,EAAD,CAAQC,MAAI,EAACC,cAAc,QAAQC,QAAS,WAC1C9K,EAASP,KACT+K,EAAQO,WAFV,uCAKE,kBAACC,GAAA,EAAD,CAAMC,KAAK,oB,yFCPJC,GAAS,CACpBC,SAAU,SAAAC,GAAC,OAAMA,GAAW,KAANA,OAAoCnM,EAAxB,kGAClCoM,QAAS,SAAAC,GAAM,OAAI,SAAAF,GAAC,OAAOA,GAAKA,EAAEzJ,OAAS2J,EAAnB,yEAA6CA,EAA7C,6EAAqErM,IAC7FsM,QAAS,SAAAC,GAAM,OAAI,SAAAJ,GAAC,OAAOA,GAAKA,EAAEzJ,OAAS6J,EAAnB,+EAA8CA,EAA9C,6EAAsEvM,IAC9FwM,QAAS,SAAAC,GAAM,OAAI,SAAAN,GAAC,OAAOA,GAAKA,EAAIM,EAAZ,yEAAsCA,EAAtC,kCAAsDzM,IAC9E0M,QAAS,SAAAC,GAAM,OAAI,SAAAR,GAAC,OAAOA,GAAKA,EAAIQ,EAAZ,+EAAuCA,EAAvC,kCAAuD3M,KAGpE4M,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMjC,EAAhB,EAAgBA,SAAaN,EAA7B,mDACxB,kBAACwC,GAAA,EAAKC,MAAN,iBAAgBzC,EACVsC,EADN,CACahC,SAAUA,EACrBoC,SAAU,SAACC,EAAD,OAAMtJ,EAAN,EAAMA,MAAN,OAAkBiJ,EAAMI,SAASrJ,IAC3CmG,SAAU+C,GAAQA,EAAKK,SAAWL,EAAKM,UAAWN,EAAK/C,UAG9CsD,GAAkB,SAAC,GAI9B,IAJuE,IAAvCR,EAAsC,EAAtCA,MAA0BtC,GAAY,EAA/BuC,KAA+B,EAAzBjC,SAAyB,6CAChEyC,EAAS7C,KAAK8C,MAAQV,EAAMjJ,MAAQiJ,EAAMjJ,MAAQ,MAClD4J,EAAMF,EAASA,EAAO5K,OAAS,EACjC+K,EAAS,GAHyD,WAI7DC,GACPD,EAAOE,KAAK,kBAACX,GAAA,EAAD,CAAOtJ,IAAKgK,EACtB1B,KAAMzB,EAAMyB,KAAO,IAAM0B,EACzB9J,MAAO0J,EAAOI,GACdT,SAAU,SAACC,EAAD,GAAmB,IAAbtJ,EAAY,EAAZA,MACd0J,EAAOI,GAAK9J,EACZiJ,EAAMI,SAASxC,KAAKC,UAAU4C,KAEhCrG,OAAQ,CACN0E,KAAM,QAASiC,MAAO,MAAO/B,QAAS,SAACqB,GACrCA,EAAEW,iBACFP,EAAOQ,OAAOJ,EAAG,GACjBb,EAAMI,SAASxC,KAAKC,UAAU4C,MAGlCS,OAAK,EACLxE,MAAO,CAAEyE,UAAWN,EAAI,EAAI,GAAK,OAhB5BA,EAAI,EAAGA,EAAIF,EAAGE,IAAM,EAApBA,GAmBT,OAAO,oCACL,kBAACO,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,MAAMP,MAAM,OAAOQ,UAAQ,GAClD,wBAAI7E,MAAO,CAAE4B,QAAS,WAAaZ,EAAMhH,OACzC,kBAACwI,GAAA,EAAD,CAAMC,KAAK,MAAMqC,UAAQ,EAACD,UAAQ,EAACR,MAAM,QAAQU,KAAK,QACpD/E,MAAO,CAAEgF,OAAQ,UAAWC,MAAO,QACnC3C,QAAS,WACPyB,EAAOK,KAAK,IACZd,EAAMI,SAASxC,KAAKC,UAAU4C,QAGpC,kBAACW,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,UACtBV,KAKMgB,GAAc,SAAC,GAAD,IAAG5B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMjC,EAAhB,EAAgBA,SAAaN,EAA7B,mDACzB,kBAACwC,GAAA,EAAK2B,SAAN,iBAAmBnE,EAAnB,CAA0BoE,WAAS,GAC7B9B,EADN,CACahC,SAAUA,EACrBoC,SAAU,SAACC,EAAD,OAAMtJ,EAAN,EAAMA,MAAN,OAAkBiJ,EAAMI,SAASrJ,IAC3CmG,SAAU+C,GAAQA,EAAKK,SAAWL,EAAKM,UAAWN,EAAK/C,UAG9C6E,GAAiB,CAC5B,CAAElL,IAAK,OAAQC,KAAM,GAAIC,WAAO5D,GAChC,CAAE0D,IAAK,OAAQC,KAAM,OAAQC,MAAO,GACpC,CAAEF,IAAK,QAASC,KAAM,QAASC,MAAO,IAGjC,SAASiL,GAAT,GAAiF,IAA1DhC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,KAAMjC,EAA4C,EAA5CA,SAAUiE,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAaxE,EAAS,oEAC/EvD,EAAOgI,aAAY,SAAAtN,GAAK,OAAIA,EAAMsF,QAClCjG,EAAWyK,cACX8B,EAAS0B,aAAY,SAAAtN,GAAK,OAAIuN,aAAcF,EAAdE,CAAwBvN,MACtDtB,EAAO2O,EAAW,IAAMD,EACxBI,EAAe,kBAACxD,GAAA,EAAD,CAAQC,KAAK,SAChCwD,GAAIC,KAAM7J,GAAE,WAAMuJ,GAClBjD,QAAS,kBAAM9K,EAASZ,EAAQC,EAAMkN,OAMxC,OALItG,EAAKlH,iBAAmBL,EAAiBG,UAAYoH,EAAKjH,gBAAkBK,IAC9EW,EAASsO,aAAWN,EAAU/H,EAAK/G,iBACnC4M,EAAMI,SAASjG,EAAK9G,eAAemD,IACnCtC,EAASP,MAEJ,kBAACuM,GAAA,EAAKC,MAAN,iBAAgBzC,EACjBsC,EADC,CACMhC,SAAUA,EACrB5D,OAAQiI,EACRjC,SAAU,SAACC,EAAD,OAAMtJ,EAAN,EAAMA,MAAN,OAAkBiJ,EAAMI,SAASrJ,IAC3CmG,SAAU+C,GAAQA,EAAKK,SAAWL,EAAKM,UAAWN,EAAK/C,SA8CpD,SAASuF,GAAT,GAAyD,IAApCzC,EAAmC,EAAnCA,MAAahC,GAAsB,EAA5BiC,KAA4B,EAAtBjC,UAAaN,EAAS,4CACvDgF,EAAS1C,EAAMjJ,MAAQiB,KAAOgI,EAAMjJ,MAAO,uBAAuB4L,cAAWxP,EACnF,OAAO,oCACL,kBAACyP,GAAA,EAAD,KAAQlF,EAAMhH,OACd,kBAAC,KAAD,eACEmM,SAAUH,EACVtC,SAAU,SAAA0C,GACR9C,EAAMI,SAASpI,KAAO8K,GAAG7K,OAAO,yBAElC8K,gBAAc,EACdC,WAAW,qBACXC,WAAW,QACXC,cAAe,GACflF,SAAUA,GACNN,IAEN,yBAAKhB,MAAO,CAAEyG,OAAQ,MAInB,SAASC,GAAT,GAA0D,IAApCpD,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMjC,EAAsB,EAAtBA,SAAaN,EAAS,4CACxD2F,EAAUC,iBAAO,MADuC,EAEtCC,mBAAS,IAF6B,oBAEvDzM,EAFuD,KAEjD0M,EAFiD,OAGpCD,mBAAS,MAH2B,oBAGvDE,EAHuD,KAGhDC,EAHgD,KAsB9D,OAAO,oCACL,kBAACxD,GAAA,EAAKC,MAAN,iBAAgBzC,EAAhB,CAAuB3G,MAAOD,EAAMkH,SAAUA,EAC5Cd,SAAU+C,GAAQA,EAAKK,SAAWL,EAAKM,UAAWN,EAAK/C,MACvD9C,OAAQ,kBAACyE,GAAA,EAAD,CAAQC,KAAK,OAAOE,QArBhB,SAAAqB,GACdA,EAAEW,iBACEqC,GAAWA,EAAQM,SACrBN,EAAQM,QAAQC,cAmBlB,2BAAOC,IAAKR,EAAS5P,KAAK,OAAOqQ,OAAO,UAAUC,QAAM,EAAC3D,SAjB1C,SAAAC,GACfA,EAAEW,iBACF,IAAMgD,EAAQ3D,EAAE4D,OAAOD,MACvB,GAAIA,GAASA,EAAM,GAAI,CACrBR,EAAQQ,EAAM,GAAG7E,MACjB,IAAI+E,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAAC,GAAE,OAAIX,EAASW,EAAGJ,OAAOrD,SACzCsD,EAAOI,cAAcN,EAAM,IAC3BhE,EAAMI,SAAS4D,EAAM,SAErBN,EAAS,SAQX,yBAAKhH,MAAO,CAAEyG,OAAQ,KACtB,kBAACoB,GAAA,EAAD,CAAOR,QAASN,EAAOe,IAAKf,EAAOhC,KAAK,QAAQ/E,MAAO,CAAE+H,aAAc,OAIpE,IAAMC,GAAkB,SAAC,GAQ9B,IAR6E,IAA7C1E,EAA4C,EAA5CA,MAAuB2E,GAAqB,EAArC1E,KAAqC,EAA/BjC,SAA+B,EAArB2G,MAASjH,EAAY,qDACpD6F,mBAAS,MAD2C,oBACrEqB,EADqE,KAC/DC,EAD+D,OAEpDtB,oBAAS,GAF2C,oBAErEuB,EAFqE,KAE/DC,EAF+D,OAGxCxB,oBAAS,GAH+B,oBAGrEyB,EAHqE,KAGzDC,EAHyD,KAItErI,EAAQ,kBAAMmI,GAAQ,IACtBtE,EAAS7C,KAAK8C,MAAQV,EAAMjJ,MAAQiJ,EAAMjJ,MAAQ,MAClD4J,EAAMF,EAASA,EAAO5K,OAAS,EACjC+K,EAAS,GAP+D,WAQnEC,GACPD,EAAOE,KAAK,yBAAKjK,IAAKgK,GACpB,kBAAC0D,GAAA,EAAD,CAAOC,IAAG,UAAK1J,GAAOU,WAAZ,mBAAiCiF,EAAOI,IAChDnE,MAAO,CAAEwI,SAAU,MAAO5G,QAAS,kBACrC,kBAACY,GAAA,EAAD,CAAMC,KAAK,QAAQ4B,MAAM,MAAMS,UAAQ,EAACD,UAAQ,EAAC7E,MAAO,CAAEyI,YAAa,GACrEnG,QAAS,SAACqB,GAqDlB,IAAoB+E,EApDV/E,EAAEW,iBAoDQoE,EAnDC3E,EAAOI,GAoDnBzM,GAAIiR,OAAO,QAAS,CAAE7Q,KAAM,CAAEmQ,KAAMS,KAnDnC3E,EAAOQ,OAAOJ,EAAG,GACjBb,EAAMI,SAASxC,KAAKC,UAAU4C,UAT7BI,EAAI,EAAGA,EAAIF,EAAGE,IAAM,EAApBA,GAaT,OAAO,oCACL,kBAACO,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,MAAMP,MAAM,OAAOQ,UAAQ,GAClD,wBAAI7E,MAAO,CAAE4B,QAAS,WAAaZ,EAAMhH,OACzC,kBAAC4O,GAAA,EAAD,CAAOC,QACL,kBAACrG,GAAA,EAAD,CAAMC,KAAK,MAAMqC,UAAQ,EAACD,UAAQ,EAACR,MAAM,QAAQU,KAAK,QACpDzC,QAAS,kBAAM+F,GAAQ,IACvBrI,MAAO,CAAEgF,OAAQ,UAAWC,MAAO,UAErCmD,KAAMA,EAAMU,QAAS5I,GACrB,kBAAC0I,GAAA,EAAMG,OAAP,sEACA,kBAACH,GAAA,EAAMI,QAAP,KACE,kBAACtC,GAAD,CAAYpD,MAAO,CAAEI,SAAUyE,KAC/B,kBAAChG,GAAA,EAAD,CAAQpL,KAAK,SAASsN,MAAM,QAAQjC,MAAI,EAACC,cAAc,OACrD4G,UAAWf,EAAMgB,QAASZ,EAAYhG,QAAS,WAC7CiG,GAAc,GAwB5B,SAAkBL,EAAMD,GACtB,IAAIkB,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,OAAQnB,GACxBiB,EAASE,OAAO,OAAQpB,GACjBvQ,GAAIC,KAAK,QAASwR,GA3BbG,CAASpB,EAAMD,GACZrQ,MAAK,SAAAmJ,GACCA,IACLgD,EAAOK,KAAKrD,EAAIjJ,KAAKyR,eACrBjG,EAAMI,SAASxC,KAAKC,UAAU4C,IAC9B7D,QAEDsJ,SAAQ,WACPjB,GAAc,QAGpB,kBAAC/F,GAAA,EAAD,CAAMC,KAAK,UAdb,qCAoBN,kBAACiC,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,UACtBV,KChPP,IAAMuF,GAAe/G,GAAOK,QAAQ,GAE9B2G,GAAYC,aAAU,CAAEpM,KAAM,SAAlBoM,EAChB,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,SAAUhG,EAA3B,EAA2BA,QAASyE,EAApC,EAAoCA,WAApC,OACE,kBAAC9E,GAAA,EAAD,CAAMsG,SAAUF,GACd,kBAACG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,WAAWzI,MAAM,0DAAaiQ,WAAS,EACxEC,UAAQ,EAACC,SAAUzH,GAAOC,WAC5B,kBAACoH,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,WAAWzI,MAAM,8CAAWjD,KAAK,WAClEmT,UAAQ,EAACC,SAAU,CAACzH,GAAOC,SAAU8G,MACvC,kBAACtH,GAAA,EAAD,CAAQpL,KAAK,SAASqT,SAAO,EAC3BnB,SAAUY,GAAYhG,EAASqF,QAASZ,GAD1C,gCAKA+B,G,8MACJP,SAAW,SAAA/F,GAAM,OAAI,EAAK/C,MAAM3J,MAAM0M,EAAOzM,SAAUyM,EAAOxM,W,0EAE5D,OACE,yBAAKyI,MAAO,CAAEsK,gBAAiB,SAC7B,kBAAC5I,GAAD,KACE,kBAACgD,GAAA,EAAD,CAASC,QAAM,EAAC3E,MAAO,CAAEuK,MAAO,MAC9B,kBAACb,GAAD,CAAWI,SAAUrJ,KAAKqJ,kB,GAPnBvI,IAAMC,WAeVgJ,eAAQ,MAAM,SAAAhT,GAAQ,MAAK,CACxCH,MAAO,SAACC,EAAUC,GAAX,OAAwBC,EAASH,EAAMC,EAAUC,QAD3CiT,CAEXH,I,kDCjCEI,GAASD,YAAQ,MAAM,SAAAhT,GAAQ,MAAK,CACxCQ,OAAQ,kBAAMR,EAASQ,SADVwS,CAEXE,cAAW,YAA2B,IAAxBC,EAAuB,EAAvBA,SAAU3S,EAAa,EAAbA,OACpB4S,EAAQD,EAASE,SAASC,MAAM,KAAK,GAC3C,OACE,kBAACC,GAAA,EAAD,CAAMnG,UAAQ,EAACC,UAAQ,GACrB,kBAACkG,GAAA,EAAKC,KAAN,CACEvI,KAAK,iCACLwI,OAAkB,WAAVL,EACRvG,MAAM,OACNjC,KAAK,YACL8I,MAAI,EACJtF,GAAIC,KACJ7J,GAAG,YAEL,kBAAC+O,GAAA,EAAKC,KAAN,CAAWpF,GAAIT,KAAUgG,MAAI,EAAC/Q,KAAK,iCACjC6Q,OAAQ,CAAC,QAAS,aAAaG,QAAQR,IAAU,EAAGvG,MAAM,QAC1D,kBAACc,GAAA,EAAS4F,KAAV,KACE,kBAAC5F,GAAA,EAAS6F,KAAV,CAAe5Q,KAAK,6CAAUgI,KAAK,QAAQwD,GAAIC,KAAM7J,GAAG,WACxD,kBAACmJ,GAAA,EAAS6F,KAAV,CAAe5Q,KAAK,uCAASgI,KAAK,WAAWwD,GAAIC,KAAM7J,GAAG,eAC1D,kBAACmJ,GAAA,EAAS6F,KAAV,CAAe5Q,KAAK,6CAAUgI,KAAK,OAAOwD,GAAIC,KAAM7J,GAAG,aACvD,kBAACmJ,GAAA,EAAS6F,KAAV,CAAe5Q,KAAK,qEAAcgI,KAAK,OAAOwD,GAAIC,KAAM7J,GAAG,WAC3D,kBAACmJ,GAAA,EAAS6F,KAAV,CAAe5Q,KAAK,6CAAUgI,KAAK,SAASwD,GAAIC,KAAM7J,GAAG,oBAG7D,kBAAC+O,GAAA,EAAKC,KAAN,CACEvI,KAAK,6CACLwI,OAAkB,YAAVL,EACRvG,MAAM,OACNjC,KAAK,UACL8I,MAAI,EACJtF,GAAIC,KACJ7J,GAAG,cAGL,kBAAC+O,GAAA,EAAKA,KAAN,CAAWM,SAAS,SAClB,kBAACN,GAAA,EAAKC,KAAN,CACEC,QAAQ,EACR5G,MAAM,MACN5B,KAAK,2BACLL,KAAK,WACLE,QAAStK,UAgBJsT,OATf,YAA+B,IAAbhK,EAAY,EAAZA,SAChB,OAAO,oCACL,kBAACmJ,GAAD,MACA,kBAACc,GAAA,EAAD,CAAWvL,MAAO,CAAEwL,OAAQ,WACzBlK,KCnDDmK,G,iMAEFhL,KAAKO,MAAM0K,gB,+BAEH,IACA/N,EAAW8C,KAAKO,MAAhBrD,OAER,OADA9E,QAAQC,IAAI,UAAW6E,GAChB,kBAAC,GAAD,KACL,kBAAC+G,GAAA,EAAD,CAASE,SAAS,MAAMD,QAAM,EAACzC,UAAU,SAASmC,MAAM,OAAOQ,UAAQ,GACrE,+DAEF,kBAACH,GAAA,EAAD,CAASE,SAAS,SAAS1C,UAAU,SAASyJ,QAAM,GACjDhO,EAAOiO,QACN,kBAACC,GAAA,EAAD,CAAMC,QAAS,GACb,kBAACD,GAAA,EAAKE,OAAN,KACE,kBAACrH,GAAA,EAAD,CAASE,SAAS,MAAMP,MAAM,OAAOnC,UAAU,SAAS2C,UAAQ,EAACF,QAAM,GACrE,yDAEF,kBAACD,GAAA,EAAD,CAASE,SAAS,SAAS1C,UAAU,SAASyC,QAAM,GAApD,6BACU,IAAIqH,KAAKrO,EAAOiO,OAAOK,WAAYC,gBAG/C,kBAACL,GAAA,EAAKE,OAAN,KACE,kBAACrH,GAAA,EAAD,CAASE,SAAS,MAAMP,MAAM,OAAOnC,UAAU,SAAS2C,UAAQ,EAACF,QAAM,GACrE,2EAEF,kBAACD,GAAA,EAAD,CAASE,SAAS,SAAS1C,UAAU,SAASyC,QAAM,GAClD,kBAACwH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAUjG,MAAX,kFACA,kBAACiG,GAAA,EAAUC,MAAX,KAAkBzO,EAAOC,MAAMyO,UAIrC,kBAACR,GAAA,EAAKE,OAAN,KACE,kBAACrH,GAAA,EAAD,CAASE,SAAS,MAAMP,MAAM,OAAOnC,UAAU,SAAS2C,UAAQ,EAACF,QAAM,GACrE,qEAEF,kBAACD,GAAA,EAAD,CAASE,SAAS,SAAS1C,UAAU,SAASyC,QAAM,GAClD,kBAACwH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAUjG,MAAX,4EACA,kBAACiG,GAAA,EAAUC,MAAX,KAAkBzO,EAAOE,UAAUwO,iB,GAxChC9K,IAAMC,WAmDZgJ,gBACb,SAAArS,GAAK,MAAK,CAAEwF,OAAQxF,EAAMwF,WAC1B,SAAAnG,GAAQ,MAAK,CAAEkU,YAAa,kBAAMlU,GpBjCH,SAACA,EAAUC,EAAGC,GAE7C,OADAmB,QAAQC,IAAI,mBACLpB,EAAIO,IAAJ,oBACJL,MAAK,SAAAC,GAAI,OAAIL,EAAS,CACrBT,KAAMwB,EACNvB,QAAWa,EAAOA,EAAKC,UAAOrB,coB0BrB+T,CAGbiB,IC7Caa,GAjBF,CACXxS,GAAI,CAAEE,MAAO,kCACbyI,KAAM,CAAEzI,MAAO,sBACfuS,MAAO,CAAEvS,MAAO,iEAChBwS,MAAO,CAAExS,MAAO,kCAChByS,KAAM,CACJzS,MAAO,qBAAOE,QAAS,CACrB,CAAEC,IAAK,OAAQC,KAAM,GAAIC,MAAO,MAChC,CAAEF,IAAK,QAASC,KAAM,QAASC,MAAO,SACtC,CAAEF,IAAK,OAAQC,KAAM,OAAQC,MAAO,UAGxCqS,UAAW,CAAE1S,MAAO,4BACpBzC,SAAU,CAAEyC,MAAO,+CACnB2S,gBAAiB,CAAE3S,MAAO,+E,yCCetB4S,GAAM,SAAAC,GAAM,OAAI,SAACnU,EAAQoU,GAC7B,IAAMC,EA3BO,SAACrU,EAAQoU,GAAT,OAAmB,SAAAE,GAChC,IAAID,EAAI,CAAE5S,IAAK6S,EAAI7S,IAAM2S,GACnBzS,EAAQ3B,EAAOsU,EAAI7S,KACzB,GAAM6S,EAAIC,OACR,GAA0B,kBAAfD,EAAIC,OACb,OAAQD,EAAIC,QACV,IAAK,UACH,IAAMC,EAAW,kBAAC1K,GAAA,EAAD,CAAMC,KAAK,QAAQsC,KAAK,QAAQV,MAAM,UACjD8I,EAAY,kBAAC3K,GAAA,EAAD,CAAMC,KAAK,QAAQsC,KAAK,QAAQV,MAAM,QACxD0I,EAAEzL,SAAajH,EAAQ6S,EAAWC,EAClC,MACF,IAAK,QACHJ,EAAEzL,SAAW,kBAACuG,GAAA,EAAD,CAAOC,IAAKzN,EAAO0K,KAAK,UACrC,MACF,QACEgI,EAAEzL,SAAW,UAGjByL,EAAEzL,SAAW0L,EAAIC,OAAOvU,QAG1BqU,EAAEzL,SAAWjH,EAEf,OAAO0S,GAIGhB,CAAOrT,EAAQoU,GACzB,MAAO,CACL3S,IAAK2S,EACLM,MAAOP,EAAOxT,KAAI,SAAA2T,GAAG,OAAID,EAAEC,SAIzBjE,GAAS,SAAC8D,EAAQnT,EAASE,EAASyT,GACxC,OAAOR,EAAOxT,KAAI,SAAA2T,GAAG,MAAK,CACxB7S,IAAK6S,EAAI7S,IACTmT,OAAQ5T,IAAYsT,EAAI7S,IAAmB,QAAZP,EAAoB,YAAc,aAAgB,KACjF0I,QAAS,WACH0K,EAAIO,UACNF,EAAWL,EAAI7S,IAAKT,IAAYsT,EAAI7S,KAAmB,QAAZP,EAAoB,OAAkB,QAErF0H,SAAU0L,EAAIQ,YAIZC,GAAa,SAACC,EAASC,GAG3B,IAH2C,IACnCC,EAA4DD,EAA5DC,aAAcC,EAA8CF,EAA9CE,UAAWC,EAAmCH,EAAnCG,SAAUC,EAAyBJ,EAAzBI,QAASC,EAAgBL,EAAhBK,YAChDC,EAAQ,GAF8B,WAGjC9J,GACHA,GAAK,GAAKA,GAAK0J,GACjBI,EAAM7J,KAAK,kBAAC2G,GAAA,EAAKC,KAAN,CAAW7Q,IAAG,eAAUgK,GAAKyB,GAAG,IAAIqF,OAAQ9G,IAAMyJ,EAC3DtL,QAAS,kBAAMyL,EAAQ5J,KAAKA,KAHzBA,EAAIyJ,EAAe,EAAGzJ,EAAIyJ,EAAe,EAAGzJ,IAAM,EAAlDA,GAKT,OACE,kBAAC+J,GAAA,EAAMtB,IAAP,KACE,kBAACsB,GAAA,EAAMC,WAAP,CAAkBT,QAASA,GACzB,kBAAC3C,GAAA,EAAD,CAAM4C,YAAU,EAAC3N,MAAO,CAAEoO,UAAW,QACnC,kBAACrD,GAAA,EAAKC,KAAN,CAAWpF,GAAG,IAAIxD,MAAI,EAACE,QAAS,kBAAMqL,EAAWI,QAAQ,KACvD,kBAACvL,GAAA,EAAD,CAAMC,KAAK,uBAEZwL,EACD,kBAAClD,GAAA,EAAKC,KAAN,CAAWpF,GAAG,IAAIxD,MAAI,EAACE,QAAS,kBAAMqL,EAAWI,QAAQF,KACvD,kBAACrL,GAAA,EAAD,CAAMC,KAAK,yBAGf,0BAAMzC,MAAO,CAAEyI,YAAa,KAC1B,0BAAMzI,MAAO,CAAEqO,WAAY,IAA3B,uDACA,kBAAClJ,GAAA,EAAD,CAAUC,WAAS,EAAC/K,MAAOyT,EAAU9N,MAAO,CAAEsO,SAAU,IACtDpU,QAAS,CAAC,GAAI,GAAI,GAAI,KAAKb,KAAI,SAAAuJ,GAAC,MAAK,CAAEzI,IAAKyI,EAAGxI,KAAMwI,EAAGvI,MAAOuI,MAC/Dc,SAAU,SAACC,EAAD,OAAMtJ,EAAN,EAAMA,MAAN,OAAkB2T,EAAY3T,OAE5C,kBAAC8R,GAAA,EAAD,CAAWpH,KAAK,OAAOwJ,QAAQ,SAC7B,kBAACpC,GAAA,EAAUjG,MAAX,sEACA,kBAACiG,GAAA,EAAUC,MAAX,KAAkByB,OAOb,SAASW,GAAT,GAA0E,IAAvD3B,EAAsD,EAAtDA,OAAQ/U,EAA8C,EAA9CA,KAAM6V,EAAwC,EAAxCA,WAAYjU,EAA4B,EAA5BA,QAASE,EAAmB,EAAnBA,QAAS6U,EAAU,EAAVA,OAE5E,OADK3W,IAAMA,EAAO,IACX,kBAACoW,GAAA,EAAD,CAAOQ,QAAM,EAACnB,UAAQ,EAC3BoB,UAAW5F,GAAO8D,EAAQnT,EAASE,EAAS6U,GAC5CG,cAAehC,GAAIC,GACnBgC,UAAWpB,GAAWZ,EAAO1T,OAAQwU,GACrCmB,UAAWhX,I,6jBC5Ef,IAsBMiX,GAAetN,eAAY,YAE1B,IADLO,EACI,EADJA,QAASuD,EACL,EADKA,WAAYyJ,EACjB,EADiBA,YAAalX,EAC9B,EAD8BA,KAAM6V,EACpC,EADoCA,WAAYsB,EAChD,EADgDA,aAAchO,EAC9D,EAD8DA,MAAOvH,EACrE,EADqEA,QAASE,EAC9E,EAD8EA,QAAS6U,EACvF,EADuFA,OAErFhR,EAAOgI,aAAY,SAAAtN,GAAK,OAAIA,EAAMsF,QAClCjG,EAAWyK,cACXiN,EAAe,SAAAxW,GAAM,OACzB,kBAAC8J,GAAA,EAAD,CAAMC,KAAK,QAAQ4B,MAAM,QAAQrE,MAAO,CAAEgF,OAAQ,WAAa1C,QAAS,WACtE9K,EzBcqB,SAAAkB,GAAM,MAAK,CACpC3B,KAAMd,EACNe,QAAS,CAAE0B,WyBhBEyW,CAAYzW,IACrBsJ,EAAQO,aA4BNsK,EAAM,CACV,CAAE1S,IAAK,aAAcqT,OAAQ,uCAAUP,OAPnB,SAAAvU,GAAM,OAC1B,oCACG+E,EAAKlH,iBAAmBL,EAAiBE,WAAa8Y,EAAaxW,GAtBrD,SAAAA,GAAM,OACvB,kBAAC,KAAD,CAAMsD,GAAE,WAAMuJ,EAAN,YAAsB7M,EAASA,EAAOoB,GAAK,MACjD,kBAAC0I,GAAA,EAAD,CAAMC,KAAK,OAAO4B,MAAM,QAAQrE,MAAO,CAAEgF,OAAQ,cAqBhDoK,CAAW1W,GAnBK,SAAAA,GAAM,OACzB,kBAACkQ,GAAA,EAAD,CACEC,QACE,kBAACrG,GAAA,EAAD,CAAMC,KAAK,QAAQsC,KAAK,QAAQV,MAAM,MAAMrE,MAAO,CAAEgF,OAAQ,aAE/DwI,OAAO,kCACPnN,QAAO,qIACPgP,QAAS,CACP,CACElV,IAAK,MAAOkG,QAAS,qBAAOiP,UAAU,EACtChN,QAAS,kBAAM2M,EAAevW,EAASA,EAAOoB,QAAKrD,GAChDmB,MAAK,kBAAMqJ,EAAMsO,QAAQ,yHAE9B,CAAEpV,IAAK,KAAMkG,QAAS,yBAOvBmP,CAAa9W,OAEN,oBAEPsW,IAEL,OAAO,kBAAC,GAAD,CAAOnC,OAAQA,EAAQ/U,KAAMA,EAAM6V,WAAYA,EACpDjU,QAASA,EAASE,QAASA,EAAS6U,OAAQA,OAI1CgB,G,8MACJtX,MAAQ,CACNqB,KAAM,EACNC,UAAW,GACXC,QAAS,KACTE,QAAS,M,EAEX8V,QAAKjZ,E,EAOLqT,SAAW,SAAA/F,GACT,IAAMhL,EAAS4W,KAAG3L,MAAM,EAAKhD,MAAM2J,SAASiF,QAC5C,OAAO,EAAK5O,MAAM6O,YAAY,CAC5B7W,OAAO,MAAMD,EAAP,GAAkBgL,GACxBvK,KAAM,EAAKrB,MAAMqB,KACjBC,UAAW,EAAKtB,MAAMsB,UACtBC,QAAS,EAAKvB,MAAMuB,QACpBE,QAAS,EAAKzB,MAAMyB,W,EAGxBgW,OAAS,kBAAM,EAAK5O,MAAM4O,OAAX,UAAqB,EAAK5O,MAAMuE,WAAhC,a,EACfwI,QAAU,SAAAvU,GACR,EAAKoH,SAAS,CAAEpH,QAAQ,EAAKoW,S,EAE/B5B,YAAc,SAAAvU,GACZ,EAAKmH,SAAS,CAAEnH,aAAa,EAAKmW,S,qFApBlCnP,KAAKqJ,SAAS,M,kCA5EC,IAACvE,EAAYuK,EA+E5BrP,KAAKiP,IA/EWnK,EA+EK9E,KAAKO,MAAMuE,WA/EJuK,EA+EgBrP,KAAKO,MAAM+O,aA9EzDpG,aAAU,CAAEpM,KAAK,GAAD,OAAKgI,EAAL,YAAhBoE,EACE,SAAA3I,GAAU,IACA4I,EAA8C5I,EAA9C4I,aAActB,EAAgCtH,EAAhCsH,WAAYuB,EAAoB7I,EAApB6I,SAAUmG,EAAUhP,EAAVgP,MAC5C,OAAO,kBAACxM,GAAA,EAAD,CAAMsG,SAAUF,GAEpBkG,EAAO9O,GAER,kBAACmB,GAAA,EAAD,CAAQpL,KAAK,SAASqL,MAAI,EAACC,cAAc,OAAO+H,SAAO,EACrDlB,QAASZ,GACT,kBAAC9F,GAAA,EAAD,CAAMC,KAAK,WAFb,kCAKA,kBAACN,GAAA,EAAD,CAAQpL,KAAK,SAASqL,MAAI,EAACC,cAAc,OAAO4N,WAAS,EACvDhH,SAAUY,GAAYvB,EAAYhG,QAAS0N,GAC3C,kBAACxN,GAAA,EAAD,CAAMC,KAAK,YAFb,8E,+BAqFI,IAAD,OACP,QAA8BhM,IAA1BgK,KAAKO,MAAMvI,WAA0B,OAAO,KAC5CgI,KAAKO,MAAM+O,eAAiBtP,KAAKiP,IAAIjP,KAAKyP,YAFvC,MAGmCzP,KAAKO,MAAMvI,WAA7CX,EAHD,EAGCA,KAAM8V,EAHP,EAGOA,aAAcC,EAHrB,EAGqBA,UACpB+B,EAAWnP,KAAKO,MAAM2J,SAAtBiF,OAJD,EAKkDnP,KAAKO,MAAtD1G,EALD,EAKCA,MAAOiL,EALR,EAKQA,WAAYyJ,EALpB,EAKoBA,YAAaC,EALjC,EAKiCA,aACxC,OAAO,kBAAC,GAAD,KACL,kBAACvK,GAAA,EAAD,CAASC,QAAM,EAACzC,UAAU,SAASmC,MAAM,OAAOQ,UAAQ,EAACD,SAAS,OAChE,4BAAKtK,IAEP,kBAACoK,GAAA,EAAD,CAASE,UAAQ,GACf,kBAAC,GAAD,CAAY5C,QAASvB,KAAKO,MAAMgB,UAC/BvB,KAAKO,MAAM+O,cAAgB,uBAAML,GAAN,CAAS5F,SAAUrJ,KAAKqJ,YAEtD,kBAACpF,GAAA,EAAD,CAASE,SAAS,UAChB,kBAACzC,GAAA,EAAD,CAAQkC,MAAM,QAAQjC,MAAI,EAACC,cAAc,OACvCuD,GAAIC,KAAM7J,GAAE,WAAMuJ,EAAN,eAAuBqK,IACnC,kBAACpN,GAAA,EAAD,CAAMC,KAAK,SAFb,4BAKA,kBAACsM,GAAD,CAAcxJ,WAAYA,EACxByJ,YAAaA,EACblX,KAAMA,EACN4B,QAAS+G,KAAKtI,MAAMuB,QACpBE,QAAS6G,KAAKtI,MAAMyB,QACpB6U,OAAQ,SAAC/U,EAASE,GAAV,OAAsB,EAAKgH,SAAS,CAAElH,UAASE,WAAW,EAAKgW,SACvE5N,QAASvB,KAAKO,MAAMgB,QACpB2L,WAAY,CACVC,eAAcC,YAAWC,SAAUrN,KAAKtI,MAAMsB,UAC9CsU,QAAStN,KAAKsN,QAASC,YAAavN,KAAKuN,aAE3CiB,aAAcA,U,GA9DG1N,IAAMC,WAoElBgJ,eAAQ,MAAM,SAAAhT,GAAQ,MAAK,CACxCoY,OAAQ,SAAApK,GAAQ,OAAIhO,EAAS2Y,aAAO3K,QADvBgF,CAEXiF,IC/GWjF,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAMyF,MAAMnF,eACtB,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAASmB,EAAWC,KACjDqW,aAAc,SAAAnV,GAAE,OAAItC,EvB4CI,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE5C,GADAmB,QAAQC,IAAI,iBAAkBgB,GACzBA,EACL,OAAOpC,EAAIiR,OAAJ,0BAA8B7O,IAClClC,MAAK,SAAAC,GAAI,OAAIL,EAASmB,SuBhDIyX,CAAWtW,QAJ3B0Q,EA7Bf,SAAoBxJ,GAClB,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,6CACNiL,WAAW,QACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAOsS,GAAKxS,GAAGE,QACvD,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAOsS,GAAK7J,KAAKzI,QAC3D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOsS,GAAKC,MAAMvS,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOsS,GAAKE,MAAMxS,SAE/D,kBAACwJ,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW9E,GAAazC,KAAK,OAAOzI,MAAOsS,GAAKG,KAAKzS,MAC1DE,QAASoS,GAAKG,KAAKvS,UACrB,kBAAC6P,GAAA,EAAD,CAAOC,UAAW9E,GAAazC,KAAK,YAAYzI,MAAOsS,GAAKI,UAAU1S,MACpEE,QAASmL,QAGf2J,YAAa,CACX,CAAE7U,IAAK,KAAMoT,UAAU,EAAMC,OAAQlB,GAAKxS,GAAGE,OAC7C,CAAEG,IAAK,OAAQoT,UAAU,EAAMC,OAAQlB,GAAK7J,KAAKzI,OACjD,CAAEG,IAAK,QAASoT,UAAU,EAAMC,OAAQlB,GAAKC,MAAMvS,OACnD,CAAEG,IAAK,QAASoT,UAAU,EAAMC,OAAQlB,GAAKE,MAAMxS,OACnD,CAAEG,IAAK,OAAQqT,OAAQlB,GAAKG,KAAKzS,OACjC,CAAEG,IAAK,YAAaqT,OAAQlB,GAAKI,UAAU1S,MAAOiT,OAAQ,kBC1B1DuD,GAAW,SAACjL,EAAYuK,EAAQW,GAArB,OACf9G,aAAU,CAAEpM,KAAK,GAAD,OAAKgI,EAAL,YAAmBkL,EAAQ,MAAQ,QAAUC,oBAAoB,GAAjF/G,EACE,SAAA3I,GAAU,IACA4I,EAA8C5I,EAA9C4I,aAActB,EAAgCtH,EAAhCsH,WAAYuB,EAAoB7I,EAApB6I,SAAUmG,EAAUhP,EAAVgP,MAC5C,OAAO,kBAACxM,GAAA,EAAD,CAAMsG,SAAUF,GAEpBkG,EAAO9O,GAER,kBAACmB,GAAA,EAAD,CAAQpL,KAAK,SAASsN,MAAM,QAAQjC,MAAI,EAACC,cAAc,OACrD4G,SAAUY,EAAUX,QAASZ,GAC7B,kBAAC9F,GAAA,EAAD,CAAMC,KAAK,UAFb,kCAKA,kBAACN,GAAA,EAAD,CAAQpL,KAAK,SAASkZ,WAAS,EAAC7N,MAAI,EAACC,cAAc,OACjD4G,SAAUY,GAAYvB,EAAYhG,QAAS0N,GAC3C,kBAACxN,GAAA,EAAD,CAAMC,KAAK,YAFb,sEASFkO,G,8MACJC,QAAKna,E,EACLoa,QAAKpa,E,EAYLqa,YAAc,SAAAhX,GACZ,OAAO,EAAKkH,MAAM8P,YAAYhX,I,EAEhCiX,aAAe,SAAAjX,GAAE,OAAI,SAAAiK,GACnB,OAAO,EAAK/C,MAAM+P,aAAajX,EAAIiK,GAChCnM,MAAK,kBAAM,EAAKoJ,MAAMC,MAAMsO,QAAQ,qI,EAEzCyB,UAAY,SAAAjN,GACV,OAAO,EAAK/C,MAAMgQ,UAAUjN,GACzBnM,MAAK,WACJ,EAAKoJ,MAAMC,MAAMsO,QAAQ,gIACzB,EAAKvO,MAAMgB,QAAQO,a,qFAtBJ,IACXzI,EAAO2G,KAAKO,MAAMiQ,MAAMlY,OAAxBe,GACJA,EACF2G,KAAKqQ,YAAYhX,GAEjB2G,KAAKO,MAAMkQ,YAAYvB,KAAG3L,MAAMvD,KAAKO,MAAM2J,SAASiF,W,kCAGtDnP,KAAKmQ,GAAKJ,GAAS/P,KAAKO,MAAMuE,WAAY9E,KAAKO,MAAMmQ,WAAW,GAChE1Q,KAAKoQ,GAAKL,GAAS/P,KAAKO,MAAMuE,WAAY9E,KAAKO,MAAMoQ,YAAY,K,+BAiB7D3Q,KAAKO,MAAMmQ,YAAc1Q,KAAKmQ,IAAInQ,KAAKyP,YACvCzP,KAAKO,MAAMoQ,aAAe3Q,KAAKoQ,IAAIpQ,KAAKyP,YAFrC,IAGCpW,EAAO2G,KAAKO,MAAMiQ,MAAMlY,OAAxBe,GAHD,EAImB2G,KAAKO,MAAvB1G,EAJD,EAICA,MAAO5B,EAJR,EAIQA,OACf,OAAO,kBAAC,GAAD,KACL,yBAAKsH,MAAO,CAAEwI,SAAU,IAAKgD,OAAQ,WACnC,kBAAC9G,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,MAAM1C,UAAU,SAASmC,MAAM,OAAOQ,UAAQ,GACrE,4BAAKvK,IAEP,kBAACoK,GAAA,EAAD,CAASC,QAAM,EAACgH,QAAM,EAAC/G,SAAS,UAC9B,kBAAC,GAAD,CAAY5C,QAASvB,KAAKO,MAAMgB,UAC/BlI,EACI2G,KAAKO,MAAMoQ,YAAc,uBAAMP,GAAN,CAAS/G,SAAUrJ,KAAKsQ,aAAajX,GAAKuX,cAAe3Y,IAClF+H,KAAKO,MAAMmQ,WAAa,uBAAMP,GAAN,CAAS9G,SAAUrJ,KAAKuQ,UAAWK,cAAe3Y,W,GA1ChE6I,IAAMC,WAiDhBC,iBAAYkP,ICrCZnG,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAMyF,MAAMlF,WAChC,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,EzBRA,SAAAuB,GAAM,MAAK,CACpChC,KAAMyB,EACNxB,QAAS+B,GyBMyBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAASqC,EAAUC,KACtCiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,EzBiCR,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAEtD,GADAmB,QAAQC,IAAI,iBAAkBgB,GACzBA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,0BAA2BxX,GAAMpB,GACrCd,MAAK,SAAAC,GAAI,OAAIL,EAASqC,EAAUC,QyBrCMyX,CAAWzX,EAAIpB,KACtDsY,UAAW,SAAAtY,GAAM,OAAIlB,EzB0BF,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAE7C,GADAmB,QAAQC,IAAI,iBACPJ,EACL,OAAOhB,EAAIC,KAAJ,YAAsBe,IyB7BG8Y,CAAQ9Y,QAN3B8R,EA/Bf,SAAkBxJ,GAChB,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,iCACNiL,WAAW,QACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAOsS,GAAK7J,KAAKzI,MACzDkQ,UAAQ,EAACC,SAAUzH,GAAOC,WAC5B,kBAACoH,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOsS,GAAKC,MAAMvS,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOsS,GAAKE,MAAMxS,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,WAAWzI,MAAOsS,GAAK/U,SAASyC,MAAOjD,KAAK,WAC7EmT,UAAQ,EAACC,SAAUzH,GAAOC,WAC5B,kBAACoH,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,kBAAkBzI,MAAOsS,GAAKK,gBAAgB3S,MAAOjD,KAAK,WAC3FmT,UAAQ,EAACC,SAAUzH,GAAOC,aAE9ByO,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAOsS,GAAK7J,KAAKzI,MACzDkQ,UAAQ,EAACC,SAAUzH,GAAOC,WAC5B,kBAACoH,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOsS,GAAKC,MAAMvS,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOsS,GAAKE,MAAMxS,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAOsS,GAAKE,MAAMxS,MAC1DkQ,UAAQ,EAACC,SAAUzH,GAAOC,WAC5B,kBAACoH,GAAA,EAAD,CAAOC,UAAW9E,GAAazC,KAAK,YAAYzI,MAAOsS,GAAKI,UAAU1S,MACpEE,QAASmL,KACX,yBAAKrF,MAAO,CAAE+H,aAAc,KAC1B,kBAAC5F,GAAA,EAAD,CAAQyD,GAAIC,KAAM7J,GAAE,8BAA2BqU,EAAUgB,cAAgBhB,EAAUgB,cAAcvX,GAAK,SAAtG,sEACA,kBAACqI,GAAA,EAAD,CAAQyD,GAAIC,KAAM7J,GAAE,qCAAkCqU,EAAUgB,cAAgBhB,EAAUgB,cAAcvX,GAAK,SAA7G,uDC/BO,SAAS2X,GAAT,GAAoC,IAAV/I,EAAS,EAAlBuI,MAASvI,IACvC,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAW2H,KACxC,kBAAC,KAAD,CAAOD,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAW4H,KAC5C,kBAAC,KAAD,CAAOF,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAW4H,MCiCnCpH,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAM0F,UAAUpF,eAC1B,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAASiE,GAAe7C,KACrDqW,aAAc,SAAAnV,GAAE,OAAItC,EzB0CQ,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAEhD,GADAmB,QAAQC,IAAI,qBAAsBgB,GAC7BA,EACL,OAAOpC,EAAIiR,OAAJ,8BAAkC7O,IACtClC,MAAK,SAAAC,GAAI,OAAIL,EAASiE,UyB9CIoW,CAAe/X,QAJ/B0Q,EAhCf,SAAwBxJ,GACtB,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,uCACNiL,WAAW,YACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAOD,GAASD,GAAGE,QAC3D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASO,MAAMN,SAEnE,kBAACwJ,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASE,OAAOC,QACtDuI,KAAK,SAASzI,MAAOD,GAASE,OAAOD,QACvC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASQ,UAAUL,QACzDuI,KAAK,YAAYzI,MAAOD,GAASQ,UAAUP,QAC7C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASS,YAAYN,QAC3DuI,KAAK,cAAczI,MAAOD,GAASS,YAAYR,WAGrDgV,YAAa,CACX,CAAE7U,IAAK,KAAMqT,OAAQzT,GAASD,GAAGE,OACjC,CAAEG,IAAK,SAAUqT,OAAQzT,GAASE,OAAOD,OACzC,CAAEG,IAAK,QAASqT,OAAQzT,GAASO,MAAMN,OACvC,CAAEG,IAAK,YAAaqT,OAAQzT,GAASQ,UAAUP,OAC/C,CAAEG,IAAK,cAAeqT,OAAQzT,GAASS,YAAYR,OACnD,CAAEG,IAAK,aAAcqT,OAAQzT,GAASU,WAAWT,OACjD,CAAEG,IAAK,WAAYqT,OAAQzT,GAASW,SAASV,OAC7C,CAAEG,IAAK,QAASqT,OAAQzT,GAASY,MAAMX,OACvC,CAAEG,IAAK,QAASqT,OAAQzT,GAASa,MAAMZ,cC/BhC8X,GAAe,SAAC,GAqD3B,IArD0E,IAA7CxO,EAA4C,EAA5CA,MAAgCtC,GAAY,EAArCuC,KAAqC,EAA/BjC,SAA+B,EAArB2G,KAAqB,sDACjDpB,oBAAS,GADwC,oBAClEuB,EADkE,KAC5DC,EAD4D,KAGnES,EAAU,kBAAMT,GAAQ,IACxBtE,EAAWT,EAAMjJ,MAAQ6G,KAAK8C,MAAMV,EAAMjJ,OAAS,GACnD4J,EAAMF,EAASA,EAAO5K,OAAS,EA+CjC+K,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAGE,IACrBD,EAAOE,KAAK,kBAAC,GAAD,CAAWjK,IAAKgK,EAAGzL,OAAQqL,EAAOI,GAAI2I,MAAO3I,EAAGJ,OAAQA,EAAQT,MAAOA,KAErF,OAAO,oCACL,kBAACoB,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,MAAMP,MAAM,OAAOQ,UAAQ,GAClD,wBAAI7E,MAAO,CAAE4B,QAAS,WAAaZ,EAAMhH,OACzC,kBAAC4O,GAAA,EAAD,CAAOC,QACL,kBAACrG,GAAA,EAAD,CAAMC,KAAK,MAAMqC,UAAQ,EAACD,UAAQ,EAACR,MAAM,QAAQU,KAAK,QAAQzC,QA1DrD,kBAAM+F,GAAQ,IA2DrBrI,MAAO,CAAEgF,OAAQ,UAAWC,MAAO,UAErCmD,KAAMA,EAAMU,QAASA,GACrB,kBAACF,GAAA,EAAMI,QAAP,KACE,mBAzDY,WAAO,IAAD,EACFnC,mBAAS,CAAE9P,KAAM,OAAQsD,MAAO,OAD9B,oBACjB0X,EADiB,KACZC,EADY,OAEYnL,oBAAS,GAFrB,oBAEjByB,EAFiB,KAELC,EAFK,KAsBxB,OAAO,oCACL,kBAAC/E,GAAA,EAAK2B,SAAN,CAAeC,WAAS,EAAClL,QAAS,CAChC,CAAEC,IAAK,OAAQC,KAAM,2BAAQC,MAAO,QACpC,CAAEF,IAAK,QAASC,KAAM,uCAAUC,MAAO,UAEvCA,MAAO0X,EAAIhb,KACX2M,SAAU,SAACC,EAAD,OAAMtJ,EAAN,EAAMA,MAAN,OAAkB2X,EAAO,CAAEjb,KAAMsD,EAAOA,MAAO,UAE3D,yBAAK2F,MAAO,CAAEyG,OAAQ,KACR,UAAbsL,EAAIhb,KACD,kBAAC2P,GAAD,CAAYpD,MAAO,CAAEI,SAAU,SAAAwE,GAAI,OAAI8J,EAAO,CAAEjb,KAAM,QAASsD,MAAO6N,QACtE,KAEJ,kBAAC/F,GAAA,EAAD,CAAQpL,KAAK,SAASsN,MAAM,QAAQjC,MAAI,EAACC,cAAc,OACrD4G,SAAuB,UAAb8I,EAAIhb,OAAqBgb,EAAI1X,MACvCiI,QAlCa,WACE,SAAbyP,EAAIhb,MACNgN,EAAOK,KAAK,CAAErN,KAAM,OAAQsD,MAAO,KACnCiJ,EAAMI,SAASxC,KAAKC,UAAU4C,IAC9B+E,MAEAP,GAAc,GAwFtB,SAAkBL,EAAMD,GACtB,IAAIkB,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,OAAQnB,GACxBiB,EAASE,OAAO,OAAQpB,GACjBvQ,GAAIC,KAAK,QAASwR,GA3FnBG,CAASyI,EAAI1X,MAAO,SACjBzC,MAAK,SAAAmJ,GACCA,IACLgD,EAAOK,KAAK,CAAErN,KAAM,QAASsD,MAAO0G,EAAIjJ,KAAKyR,gBAC7CjG,EAAMI,SAASxC,KAAKC,UAAU4C,IAC9B+E,QAEDU,SAAQ,WACPjB,GAAc,QAmBCW,QAASZ,GAC5B,kBAAC9F,GAAA,EAAD,CAAMC,KAAK,UAHb,qCAsBI,SAIN,kBAACiC,GAAA,EAAD,CAASC,QAAM,EAACC,SAAS,UACtBV,KAKD+N,GAAY,SAAC,GAAD,IAAGvZ,EAAH,EAAGA,OAAQoU,EAAX,EAAWA,MAAO/I,EAAlB,EAAkBA,OAAQT,EAA1B,EAA0BA,MAA1B,OAAsC,yBAAKtD,MAAO,CAAEwL,OAAQ,UAC3D,UAAhB9S,EAAO3B,KACJ,oCACA,kBAAC8Q,GAAA,EAAD,CAAOC,IAAG,UAAK1J,GAAOU,WAAZ,mBAAiCpG,EAAO2B,OAChD2F,MAAO,CAAEwI,SAAU,MAAO5G,QAAS,kBACrC,kBAACY,GAAA,EAAD,CAAMC,KAAK,QAAQ4B,MAAM,MAAMS,UAAQ,EAACD,UAAQ,EAAC7E,MAAO,CAAEyI,YAAa,GACrEnG,QAAS,SAACqB,GA+BlB,IAAoB+E,EA9BV/E,EAAEW,iBA8BQoE,EA7BC3E,EAAO+I,GA8BnBpV,GAAIiR,OAAO,QAAS,CAAE7Q,KAAM,CAAEmQ,KAAMS,KA7BnC3E,EAAOQ,OAAOuI,EAAO,GACrBxJ,EAAMI,SAASxC,KAAKC,UAAU4C,QAGlC,kBAACN,GAAA,EAAD,CAAOe,OAAK,EAACnK,MAAO3B,EAAO2B,MAC3BqJ,SAAU,SAACC,EAAD,GAAmB,IAAbtJ,EAAY,EAAZA,MACd0J,EAAO+I,GAAOzS,MAAQA,EACtBiJ,EAAMI,SAASxC,KAAKC,UAAU4C,KAEhCrG,OAAQ,CACN0E,KAAM,QAASiC,MAAO,MAAO/B,QAAS,SAACqB,GACrCA,EAAEW,iBACFP,EAAOQ,OAAOuI,EAAO,GACrBxJ,EAAMI,SAASxC,KAAKC,UAAU4C,MAGlC/D,MAAO,CAAEyE,UAAWqI,EAAQ,EAAI,GAAK,OC7C5BtC,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAM0F,UAAUnF,WACpC,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,E3BxBA,SAAAuB,GAAM,MAAK,CACpChC,KAAMyE,GACNxE,QAAS+B,G2BsByBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAASkE,GAAc5B,KAC1CiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,E3BeJ,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAE1D,GADAmB,QAAQC,IAAI,qBAAsBgB,GAC7BA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,8BAA+BxX,GAAMpB,GACzCd,MAAK,SAAAC,GAAI,OAAIL,EAASkE,GAAc5B,Q2BnBEoY,CAAepY,EAAIpB,KAC1DsY,UAAW,SAAAtY,GAAM,OAAIlB,E3BQE,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAEjD,GADAmB,QAAQC,IAAI,qBACPJ,EACL,OAAOhB,EAAIC,KAAJ,sBAAgCe,I2BXPyZ,CAAYzZ,QAN/B8R,EA9Cf,SAAsBxJ,GACpB,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,2BACNiL,WAAW,YACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASE,OAAOC,QACtDuI,KAAK,SAASzI,MAAOD,GAASE,OAAOD,QACvC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASO,MAAMN,QACjE,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASQ,UAAUL,QACzDuI,KAAK,YAAYzI,MAAOD,GAASQ,UAAUP,QAC7C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASS,YAAYN,QAC3DuI,KAAK,cAAczI,MAAOD,GAASS,YAAYR,QACjD,kBAAC+P,GAAA,EAAD,CAAOC,UAAWjE,GAAWtD,KAAK,aAAazI,MAAOD,GAASU,WAAWT,QAC1E,kBAAC+P,GAAA,EAAD,CAAOC,UAAWjE,GAAWtD,KAAK,WAAWzI,MAAOD,GAASW,SAASV,QACtE,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASY,MAAMX,QACjE,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASa,MAAMZ,QAEjE,kBAAC+P,GAAA,EAAD,CAAOC,UAAWhC,GAAiBvF,KAAK,SAASzI,MAAOD,GAASc,OAAOb,MAAOiO,KAAK,UACpF,kBAAC8B,GAAA,EAAD,CAAOC,UAAW8H,GAAcrP,KAAK,UAAUzI,MAAOD,GAASe,QAAQd,QACvE,kBAAC+P,GAAA,EAAD,CAAOC,UAAWlG,GAAiBrB,KAAK,UAAUzI,MAAOD,GAASgB,QAAQf,QAC1E,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,cAAczI,MAAOD,GAASiB,YAAYhB,QAC7E,kBAAC+P,GAAA,EAAD,CAAOC,UAAWlG,GAAiBrB,KAAK,YAAYzI,MAAOD,GAASkB,UAAUjB,UAEhFoX,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAOD,GAASD,GAAGE,MAAOiP,UAAQ,IAC1E,kBAACc,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASE,OAAOC,QACtDuI,KAAK,SAASzI,MAAOD,GAASE,OAAOD,QACvC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASO,MAAMN,QACjE,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASQ,UAAUL,QACzDuI,KAAK,YAAYzI,MAAOD,GAASQ,UAAUP,QAC7C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASH,GAASS,YAAYN,QAC3DuI,KAAK,cAAczI,MAAOD,GAASS,YAAYR,QACjD,kBAAC+P,GAAA,EAAD,CAAOC,UAAWjE,GAAWtD,KAAK,aAAazI,MAAOD,GAASU,WAAWT,QAC1E,kBAAC+P,GAAA,EAAD,CAAOC,UAAWjE,GAAWtD,KAAK,WAAWzI,MAAOD,GAASW,SAASV,QACtE,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASY,MAAMX,QACjE,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOD,GAASa,MAAMZ,QAEjE,kBAAC+P,GAAA,EAAD,CAAOC,UAAWhC,GAAiBvF,KAAK,SAASzI,MAAOD,GAASc,OAAOb,MAAOiO,KAAK,UACpF,kBAAC8B,GAAA,EAAD,CAAOC,UAAW8H,GAAcrP,KAAK,UAAUzI,MAAOD,GAASe,QAAQd,QACvE,kBAAC+P,GAAA,EAAD,CAAOC,UAAWlG,GAAiBrB,KAAK,UAAUzI,MAAOD,GAASgB,QAAQf,QAC1E,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,cAAczI,MAAOD,GAASiB,YAAYhB,QAC7E,kBAAC+P,GAAA,EAAD,CAAOC,UAAWlG,GAAiBrB,KAAK,YAAYzI,MAAOD,GAASkB,UAAUjB,gBCpDrE,SAASoY,GAAT,GAAwC,IAAV1J,EAAS,EAAlBuI,MAASvI,IAC3C,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAWqI,KACxC,kBAAC,KAAD,CAAOX,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWsI,KAC5C,kBAAC,KAAD,CAAOZ,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWsI,MC0BnC9H,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAM2F,QAAQrF,eACxB,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAAS0E,GAAatD,KACnDqW,aAAc,SAAAnV,GAAE,OAAItC,E3BiDM,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE9C,GADAmB,QAAQC,IAAI,mBAAoBgB,GAC3BA,EACL,OAAOpC,EAAIiR,OAAJ,4BAAgC7O,IACpClC,MAAK,SAAAC,GAAI,OAAIL,EAAS0E,U2BrDIqW,CAAazY,QAJ7B0Q,EA1Bf,SAAsBxJ,GACpB,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,6CACNiL,WAAW,UACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,YAAYC,SAAS,iBAC7D/C,KAAK,cAAczI,MAAO2B,GAAOC,YAAY5B,QAC/C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,iBACzD/C,KAAK,UAAUzI,MAAO2B,GAAOE,QAAQ7B,SAEzC,kBAACwJ,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAO2B,GAAOvB,KAAKJ,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAazC,KAAK,UAAUzI,MAAO2B,GAAOG,QAAQ9B,MAClEE,QAASmL,QAGf2J,YAAa,CACX,CAAE7U,IAAK,cAAeqT,OAAQ7R,GAAOC,YAAY5B,OACjD,CAAEG,IAAK,UAAWqT,OAAQ7R,GAAOE,QAAQ7B,OACzC,CAAEG,IAAK,OAAQqT,OAAQ7R,GAAOvB,KAAKJ,OACnC,CAAEG,IAAK,UAAWqT,OAAQ7R,GAAOG,QAAQ9B,MAAOiT,OAAQ,kBCO/CzC,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAM2F,QAAQpF,WAClC,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,E5BAA,SAAAuB,GAAM,MAAK,CACpChC,KAAMkF,GACNjF,QAAS+B,G4BFyBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAAS2E,GAAYrC,KACxCiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,E5BuCN,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAExD,GADAmB,QAAQC,IAAI,mBAAoBgB,GAC3BA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,4BAA6BxX,GAAMpB,GACvCd,MAAK,SAAAC,GAAI,OAAIL,EAAS2E,GAAYrC,Q4B3CI0Y,CAAa1Y,EAAIpB,KACxDsY,UAAW,SAAAtY,GAAM,OAAIlB,E5BgCA,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAE/C,GADAmB,QAAQC,IAAI,mBACPJ,EACL,OAAOhB,EAAIC,KAAJ,oBAA8Be,I4BnCL+Z,CAAU/Z,QAN7B8R,EA7Bf,SAAoBxJ,GAClB,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,2BACNiL,WAAW,UACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,YAAYC,SAAS,cAC7D0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,cAAczI,MAAO2B,GAAOC,YAAY5B,QAC/C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,cACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAO2B,GAAOE,QAAQ7B,QACvC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAO2B,GAAOvB,KAAKJ,UAE/DoX,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAO2B,GAAO7B,GAAGE,MAAOiP,UAAQ,IACxE,kBAACc,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,YAAYC,SAAS,eAC7D0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,cAAczI,MAAO2B,GAAOC,YAAY5B,QAC/C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,eACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAO2B,GAAOE,QAAQ7B,QACvC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAO2B,GAAOvB,KAAKJ,MAC3DkQ,UAAQ,EAACC,SAAUzH,GAAOC,WAC5B,kBAACoH,GAAA,EAAD,CAAOC,UAAW9E,GAAazC,KAAK,UAAUzI,MAAO2B,GAAOG,QAAQ9B,MAClEE,QAASmL,aC5BF,SAASqN,GAAT,GAAsC,IAAVhK,EAAS,EAAlBuI,MAASvI,IACzC,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAW2I,KACxC,kBAAC,KAAD,CAAOjB,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAW4I,KAC5C,kBAAC,KAAD,CAAOlB,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAW4I,MCmBnCpI,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAM4F,MAAMtF,eACtB,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAAS+E,GAAW3D,KACjDqW,aAAc,SAAAnV,GAAE,OAAItC,E5BwDI,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAE5C,GADAmB,QAAQC,IAAI,iBAAkBgB,GACzBA,EACL,OAAOpC,EAAIiR,OAAJ,0BAA8B7O,IAClClC,MAAK,SAAAC,GAAI,OAAIL,EAAS+E,U4B5DIsW,CAAW/Y,QAJ3B0Q,EAnBf,SAAoBxJ,GAClB,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,qEACNiL,WAAW,QACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,YAAYC,SAAS,eAC7D/C,KAAK,cAAczI,MAAOoC,GAAKR,YAAY5B,WAGjDgV,YAAa,CACX,CAAE7U,IAAK,cAAeqT,OAAQpR,GAAKR,YAAY5B,OAC/C,CAAEG,IAAK,OAAQqT,OAAQpR,GAAKrF,KAAKiD,OACjC,CAAEG,IAAK,QAASqT,OAAQpR,GAAK/B,MAAML,OACnC,CAAEG,IAAK,QAASqT,OAAQpR,GAAKC,MAAMrC,c,UCf5B8Y,GAAY,SAAC,GAA0D,IAAxDxP,EAAuD,EAAvDA,MAA6B+M,GAA0B,EAAhD9M,KAAgD,EAA1CjC,SAA0C,EAAhC2G,KAAgC,EAA1BoI,WAA0B,+DAEjF,OADa5K,aAAY,SAAAtN,GAAK,OAAI4a,aAAkB1C,EAAU9S,KAA5BwV,CAAkC5a,EAAO,YAEzE,IAAK,QACH,OAAO,kBAAC6a,GAAD,CAAW3Y,MAAOiJ,EAAMjJ,MAAOqJ,SAAUJ,EAAMI,WACxD,IAAK,SACH,OAAO,kBAAC,GAAD,CAAiBjB,KAAK,UAAUzI,MAAM,mJAAgCsJ,MAAOA,IACtF,IAAK,SACH,OAAO,kBAAC,GAAD,CAAiBb,KAAK,UAAUzI,MAAM,qHAA2BsJ,MAAOA,IACjF,QACE,OAAO,OAIb,SAAS0P,GAAT,GAAyC,IAApB3Y,EAAmB,EAAnBA,MAAOqJ,EAAY,EAAZA,SAAY,EACdmD,oBAAS,GADK,oBAC/BuB,EAD+B,KACzBC,EADyB,OAEdxB,mBAAS,MAFK,oBAE/BqB,EAF+B,KAEzBC,EAFyB,OAGFtB,oBAAS,GAHP,oBAG/ByB,EAH+B,KAGnBC,EAHmB,KAKhCO,EAAU,kBAAMT,GAAQ,IAa9B,OAAO,yBAAKrI,MAAO,CAAE+H,aAAc,KACjC,kBAACa,GAAA,EAAD,CAAOC,QAAS,kBAAC1G,GAAA,EAAD,CAAQG,QAAS,SAAAqB,GAAOA,EAAEW,iBAfvB+D,GAAQ,KAeX,uEACdD,KAAMA,EAAMU,QAASA,GACrB,kBAACF,GAAA,EAAMI,QAAP,KACE,kBAACtC,GAAD,CAAYpD,MAAO,CAAEI,SAAUyE,KAC/B,kBAAChG,GAAA,EAAD,CAAQpL,KAAK,SAASsN,MAAM,QAAQjC,MAAI,EAACC,cAAc,OACrD4G,UAAWf,EAAM5F,QAlBR,WACfiG,GAAc,GA2BlB,SAAkBL,EAAMD,GACtB,IAAIkB,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,OAAQnB,GACxBiB,EAASE,OAAO,OAAQpB,GACjBvQ,GAAIC,KAAK,QAASwR,GA9BvBG,CAASpB,EAAM,SACZtQ,MAAK,SAAAmJ,GACCA,IACL2C,EAAS3C,EAAIjJ,KAAKyR,eAClBT,QAEDU,SAAQ,WACPjB,GAAc,OASwBW,QAASZ,GAC7C,kBAAC9F,GAAA,EAAD,CAAMC,KAAK,UAFb,oCAODpI,EAAQ,kBAACwN,GAAA,EAAD,CAAOC,IAAG,UAAK1J,GAAOU,WAAZ,mBAAiCzE,KAAc,MCjBzDmQ,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAM4F,MAAMrF,WAChC,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,E9BEA,SAAAuB,GAAM,MAAK,CACpChC,KAAMuF,GACNtF,QAAS+B,G8BJyBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAASgF,GAAU1C,KACtCiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,E9ByCR,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAEtD,GADAmB,QAAQC,IAAI,iBAAkBgB,GACzBA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,0BAA2BxX,GAAMpB,GACrCd,MAAK,SAAAC,GAAI,OAAIL,EAASgF,GAAU1C,Q8B7CMmZ,CAAWnZ,EAAIpB,KACtDsY,UAAW,SAAAtY,GAAM,OAAIlB,E9BkCF,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAE7C,GADAmB,QAAQC,IAAI,iBACPJ,EACL,OAAOhB,EAAIC,KAAJ,kBAA4Be,I8BrCHwa,CAAQxa,QAN3B8R,EA1Bf,SAAkBxJ,GAChB,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,mDACNiL,WAAW,QACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,YAAYC,SAAS,YAC7D0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,cAAczI,MAAOoC,GAAKR,YAAY5B,QAC7C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOoC,GAAKC,MAAMrC,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASkC,GAAKrF,KAAKmD,QAChDJ,GAAG,OAAO2I,KAAK,OAAOzI,MAAOoC,GAAKrF,KAAKiD,QACzC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW8I,GAAWrQ,KAAK,QAAQzI,MAAOoC,GAAK/B,MAAML,MAAOqW,UAAWA,MAEhFe,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAOoC,GAAKtC,GAAGE,MAAOiP,UAAQ,IACtE,kBAACc,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,YAAYC,SAAS,aAC7D0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,cAAczI,MAAOoC,GAAKR,YAAY5B,QAC7C,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,QAAQzI,MAAOoC,GAAKC,MAAMrC,QAC7D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW9E,GAAahL,QAASkC,GAAKrF,KAAKmD,QAChDuI,KAAK,OAAOzI,MAAOoC,GAAKrF,KAAKiD,QAC/B,kBAAC+P,GAAA,EAAD,CAAOC,UAAW8I,GAAWrQ,KAAK,QAAQzI,MAAOoC,GAAK/B,MAAML,MAAOqW,UAAWA,YC1BrE,SAAS8C,GAAT,GAAoC,IAAVzK,EAAS,EAAlBuI,MAASvI,IACvC,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAWoJ,KACxC,kBAAC,KAAD,CAAO1B,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWqJ,KAC5C,kBAAC,KAAD,CAAO3B,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWqJ,MCmBnC7I,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAM6F,WAAWvF,eAC3B,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAASoF,GAAehE,KACrDqW,aAAc,SAAAnV,GAAE,OAAItC,E9BwDQ,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAEhD,GADAmB,QAAQC,IAAI,sBAAuBgB,GAC9BA,EACL,OAAOpC,EAAIiR,OAAJ,+BAAmC7O,IACvClC,MAAK,SAAAC,GAAI,OAAIL,EAASoF,U8B5DI0W,CAAexZ,QAJ/B0Q,EAnBf,SAAwBxJ,GACtB,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,sHACNiL,WAAW,aACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,oBACzD/C,KAAK,UAAUzI,MAAOyC,GAASC,QAAQ1C,QACzC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,oBACzD/C,KAAK,UAAUzI,MAAOyC,GAASZ,QAAQ7B,WAG7CgV,YAAa,CACX,CAAE7U,IAAK,UAAWqT,OAAQ/Q,GAASC,QAAQ1C,OAC3C,CAAEG,IAAK,UAAWqT,OAAQ/Q,GAASZ,QAAQ7B,cCSlCwQ,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAM6F,WAAWtF,WACrC,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,E/BKA,SAAAuB,GAAM,MAAK,CACpChC,KAAM4F,GACN3F,QAAS+B,G+BPyBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAASqF,GAAc/C,KAC1CiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,E/B4CJ,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAE1D,GADAmB,QAAQC,IAAI,sBAAuBgB,GAC9BA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,+BAAgCxX,GAAMpB,GAC1Cd,MAAK,SAAAC,GAAI,OAAIL,EAASqF,GAAc/C,Q+BhDEyZ,CAAezZ,EAAIpB,KAC1DsY,UAAW,SAAAtY,GAAM,OAAIlB,E/BqCE,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAEjD,GADAmB,QAAQC,IAAI,sBACPJ,EACL,OAAOhB,EAAIC,KAAJ,uBAAiCe,I+BxCR8a,CAAY9a,QAN/B8R,EAxBf,SAAsBxJ,GACpB,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,kFACNiL,WAAW,aACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,iBACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAOyC,GAASC,QAAQ1C,QACzC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,iBACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAOyC,GAASZ,QAAQ7B,UAE3CoX,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAOyC,GAAS3C,GAAGE,MAAOiP,UAAQ,IAC1E,kBAACc,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,kBACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAOyC,GAASC,QAAQ1C,QACzC,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,kBACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAOyC,GAASZ,QAAQ7B,gBCvBhC,SAASyZ,GAAT,GAAwC,IAAV/K,EAAS,EAAlBuI,MAASvI,IAC3C,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAW0J,KACxC,kBAAC,KAAD,CAAOhC,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAW2J,KAC5C,kBAAC,KAAD,CAAOjC,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAW2J,MCXlD,IAKeC,GALK,CAClB9Z,GAAI,CAAEE,MAAO,kCACbnD,KAAM,CAAEmD,MAAO,iBCwBFwQ,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAM8F,aAAaxF,eAC7B,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAASuF,GAAkBnE,KACxDqW,aAAc,SAAAnV,GAAE,OAAItC,EjCyDW,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAEnD,GADAmB,QAAQC,IAAI,wBAAyBgB,GAChCA,EACL,OAAOpC,EAAIiR,OAAJ,iCAAqC7O,IACzClC,MAAK,SAAAC,GAAI,OAAIL,EAASuF,UiC7DI8W,CAAkB/Z,QAJlC0Q,EAff,SAA2BxJ,GACzB,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,6CACNiL,WAAW,eACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAO4Z,GAAY/c,KAAKmD,WAGtEgV,YAAa,CACX,CAAE7U,IAAK,OAAQqT,OAAQoG,GAAY/c,KAAKmD,cCK/BwQ,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAM8F,aAAavF,WACvC,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,ElCUA,SAAAuB,GAAM,MAAK,CACpChC,KAAM+F,GACN9F,QAAS+B,GkCZyBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAASwF,GAAiBlD,KAC7CiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,ElCiDD,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAE7D,GADAmB,QAAQC,IAAI,wBAAyBgB,GAChCA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,iCAAkCxX,GAAMpB,GAC5Cd,MAAK,SAAAC,GAAI,OAAIL,EAASwF,GAAiBlD,QkCrDDga,CAAkBha,EAAIpB,KAC7DsY,UAAW,SAAAtY,GAAM,OAAIlB,ElC0CK,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAEpD,GADAmB,QAAQC,IAAI,wBACPJ,EACL,OAAOhB,EAAIC,KAAJ,yBAAmCe,IkC7CVqb,CAAerb,QANlC8R,EAhBf,SAAyBxJ,GACvB,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,2BACNiL,WAAW,eACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAO4Z,GAAY/c,KAAKmD,MAChEkQ,UAAQ,EAACC,SAAUzH,GAAOC,aAE9ByO,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAO4Z,GAAY9Z,GAAGE,MAAOiP,UAAQ,IAC7E,kBAACc,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,OAAOzI,MAAO4Z,GAAY/c,KAAKmD,MAChEkQ,UAAQ,EAACC,SAAUzH,GAAOC,mBCfnB,SAASqR,GAAT,GAA2C,IAAVtL,EAAS,EAAlBuI,MAASvI,IAC9C,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAWiK,KACxC,kBAAC,KAAD,CAAOvC,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWkK,KAC5C,kBAAC,KAAD,CAAOxC,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWkK,MCmBnC1J,oBAAQ,SAAArS,GAAK,MAAK,CAC/BM,WAAYN,EAAM+F,kBAAkBzF,eAClC,SAAAjB,GAAQ,MAAK,CACfqY,YAAa,SAAAjX,GAAY,OAAIpB,EAAS4F,GAAsBxE,KAC5DqW,aAAc,SAAAnV,GAAE,OAAItC,ElCwDe,SAAAsC,GAAE,OAAI,SAACtC,EAAUC,EAAGC,GAEvD,GADAmB,QAAQC,IAAI,6BAA8BgB,GACrCA,EACL,OAAOpC,EAAIiR,OAAJ,sCAA0C7O,IAC9ClC,MAAK,SAAAC,GAAI,OAAIL,EAAS4F,UkC5DI+W,CAAsBra,QAJtC0Q,EAnBf,SAA+BxJ,GAC7B,OAAO,kBAAC,GAAD,iBAAkBA,EAAlB,CACL1G,MAAM,8FACNiL,WAAW,oBACXwK,aAAc,SAAAM,GAAS,OAAI,oCACzB,kBAAC7M,GAAA,EAAK8M,MAAN,CAAYC,OAAO,SACjB,kBAACxG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,eAAeC,SAAS,2BAChE/C,KAAK,iBAAiBzI,MAAOiD,GAAgBC,eAAelD,QAC9D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,2BACzD/C,KAAK,UAAUzI,MAAOiD,GAAgBpB,QAAQ7B,WAGpDgV,YAAa,CACX,CAAE7U,IAAK,iBAAkBqT,OAAQvQ,GAAgBC,eAAelD,OAChE,CAAEG,IAAK,UAAWqT,OAAQvQ,GAAgBpB,QAAQ7B,cCSzCwQ,oBACb,SAAArS,GAAK,MAAK,CAAEO,OAAQP,EAAM+F,kBAAkBxF,WAC5C,SAAAlB,GAAQ,MAAK,CACX0Z,YAAa,SAAAnY,GAAM,OAAIvB,EnCKA,SAAAuB,GAAM,MAAK,CACpChC,KAAMoG,GACNnG,QAAS+B,GmCPyBmY,CAAYnY,KAC5C+X,YAAa,SAAAhX,GAAE,OAAItC,EAAS6F,GAAqBvD,KACjDiX,aAAc,SAACjX,EAAIpB,GAAL,OAAgBlB,EnC4CG,SAACsC,EAAIpB,GAAL,OAAgB,SAAClB,EAAUC,EAAGC,GAEjE,GADAmB,QAAQC,IAAI,6BAA8BgB,GACrCA,GAAOpB,EACZ,OAAOhB,EAAI4Z,IAAJ,sCAAuCxX,GAAMpB,GACjDd,MAAK,SAAAC,GAAI,OAAIL,EAAS6F,GAAqBvD,QmChDLsa,CAAsBta,EAAIpB,KACjEsY,UAAW,SAAAtY,GAAM,OAAIlB,EnCqCS,SAAAkB,GAAM,OAAI,SAAClB,EAAUC,EAAGC,GAExD,GADAmB,QAAQC,IAAI,6BACPJ,EACL,OAAOhB,EAAIC,KAAJ,8BAAwCe,ImCxCf2b,CAAmB3b,QANtC8R,EAxBf,SAA6BxJ,GAC3B,OAAO,kBAAC,GAAD,iBAAgBA,EAAhB,CACL1G,MAAM,0DACNiL,WAAW,oBACX4L,UAAW,SAAAd,GAAS,OAAI,oCACtB,kBAACtG,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,eAAeC,SAAS,wBAChE0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,iBAAiBzI,MAAOiD,GAAgBC,eAAelD,QAC9D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,wBACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAOiD,GAAgBpB,QAAQ7B,UAElDoX,WAAY,SAAAf,GAAS,OAAI,oCACvB,kBAACtG,GAAA,EAAD,CAAOC,UAAW3G,GAAYZ,KAAK,KAAKzI,MAAOiD,GAAgBnD,GAAGE,MAAOiP,UAAQ,IACjF,kBAACc,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,eAAeC,SAAS,yBAChE0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,iBAAiBzI,MAAOiD,GAAgBC,eAAelD,QAC9D,kBAAC+P,GAAA,EAAD,CAAOC,UAAW1E,GAAaC,WAAW,QAAQC,SAAS,yBACzD0E,UAAQ,EAACC,SAAUzH,GAAOC,SAC1BF,KAAK,UAAUzI,MAAOiD,GAAgBpB,QAAQ7B,gBCvBvC,SAASsa,GAAT,GAA+C,IAAV5L,EAAS,EAAlBuI,MAASvI,IAClD,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgJ,OAAK,EAACzJ,KAAI,UAAKS,GAAOsB,UAAWuK,KACxC,kBAAC,KAAD,CAAO7C,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWwK,KAC5C,kBAAC,KAAD,CAAO9C,OAAK,EAACzJ,KAAI,UAAKS,EAAL,QAAgBsB,UAAWwK,M,cCH5CC,GAAqB9K,aAAU,CAAEpM,KAAM,4BAAlBoM,EACzB,SAAC3I,GAAW,IACF4I,EAA8C5I,EAA9C4I,aAActB,EAAgCtH,EAAhCsH,WAAYuB,EAAoB7I,EAApB6I,SAAUmG,EAAUhP,EAAVgP,MAC5C,OAAO,kBAACxM,GAAA,EAAD,CAAMsG,SAAUF,GAErB,kBAACG,GAAA,EAAD,CAAOC,UAAW3G,GAAYtM,KAAK,WAAWmT,UAAQ,EAACC,SAAUzH,GAAOC,SACtEF,KAAK,eAAezI,MAAM,+EAC5B,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYtM,KAAK,WAAWmT,UAAQ,EAACC,SAAUzH,GAAOC,SACtEF,KAAK,eAAezI,MAAM,yEAC5B,kBAAC+P,GAAA,EAAD,CAAOC,UAAW3G,GAAYtM,KAAK,WAAWmT,UAAQ,EAACC,SAAUzH,GAAOC,SACtEF,KAAK,uBAAuBzI,MAAM,wGAEpC,kBAACmI,GAAA,EAAD,CAAQpL,KAAK,SAASsN,MAAM,QAAQjC,MAAI,EAACC,cAAc,OACrD4G,SAAUY,EAAUX,QAASZ,GAC7B,kBAAC9F,GAAA,EAAD,CAAMC,KAAK,UAFb,kCAKA,kBAACN,GAAA,EAAD,CAAQpL,KAAK,SAASkZ,WAAS,EAAC7N,MAAI,EAACC,cAAc,OACjD4G,SAAUY,GAAYvB,EAAYhG,QAAS0N,GAC3C,kBAACxN,GAAA,EAAD,CAAMC,KAAK,YAFb,qEAgBSiS,GARQ,WACrB,IAAMld,EAAWyK,cAIjB,OAAO,kBAACwS,GAAD,CAAoB3K,SAHV,SAAA/F,GACf,OAAOvM,ElDsBmB,SAAC,GAAD,IAAGmd,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,qBAA/B,OAC5B,SAACrd,EAAUqI,EAAUnI,GACnB,GAAIkd,IAAiBC,EAIrB,OAAOnd,EAAIC,KAAK,YAAa,CAAEgd,eAAcC,iBAAgBhd,MAAK,SAACmJ,GAC3DA,GAAsB,MAAfA,EAAI+T,SACftd,EAASH,EAAMa,EAAM2H,KAAY0M,MAAOqI,IACxC3T,MAAM,uJANRA,MAAM,uIkDzBQ8T,CAAehR,QClCpB,SAASiR,KACtB,OAAO,oCACL,sKACA,0JACA,sFACA,mEACE,uBAAGC,KAAK,yBAAyB1N,OAAO,SAAS2N,IAAI,uBAArD,4BCAS,SAASC,KACtB,IAAMC,EAAQ,CACZ,CAAEC,SAAU,6EAAkBpI,OAAQ,kBAAM,kBAACqI,GAAA,EAAIC,KAAL,KAAU,kBAAC,GAAD,SACtD,CAAEF,SAAU,uHAAyBpI,OAAQ,kBAAM,kBAACqI,GAAA,EAAIC,KAAL,KAAU,kBAACP,GAAD,UAE/D,OACE,kBAAC,GAAD,KACE,kBAACM,GAAA,EAAD,CAAKE,KAAM,CAAEhR,OAAO,EAAMiR,UAAU,EAAMC,SAAS,GAAQN,MAAOA,KCFzDO,OARf,WACE,OAAO,kBAAC,GAAD,KACL,kBAACjR,GAAA,EAAD,CAASC,QAAM,EAACzC,UAAU,SAASmC,MAAM,OAAOQ,UAAQ,GACtD,+JCaA+Q,GAAkB,SAAAzd,GAAK,MAAK,CAChCE,gBAAiBA,EAAgBF,KAG7B0d,GAAYrL,YAAQoL,GAARpL,EAChB,gBAAGnS,EAAH,EAAGA,gBAAoByd,EAAvB,2CACEzd,EACI,kBAAC,KAAUyd,GACX,kBAAC,KAAD,CAAU9Z,GAAG,SAGf+Z,GAAcvL,YAAQoL,GAARpL,EAClB,YAAyC,IAAtCnS,EAAqC,EAArCA,gBAAoByd,EAAiB,oCACtC,OAAOzd,EACH,kBAAC,KAAD,CAAU2D,GAAG,YACb,kBAAC,KAAU8Z,MAiCJtL,oBAAQ,SAAArS,GAAK,MAAK,CAC/BE,gBAAiBA,EAAgBF,GACjCf,GAAIc,EAAMC,OACR,SAAAX,GAAQ,MAAK,CACfO,QAAS,kBAAMP,EAASO,MACxBC,OAAQ,kBAAMR,EAASQ,SALVwS,EA7Bf,YAA2D,IAAzCzS,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,OAAQK,EAAuB,EAAvBA,gBAAiBjB,EAAM,EAANA,GAClD,GAAIiB,EAAiB,CACnB,IAAKjB,GAAiC,IAA3B6B,OAAOG,KAAKhC,GAAI+B,OAEzB,OADApB,IACO,8BACc,UAAZX,EAAGqV,OACZzU,IACAiJ,MAAM,kLAGV,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC8U,GAAD,CAAarE,OAAK,EAACzJ,KAAK,IAAI+B,UAAWK,KACvC,kBAACwL,GAAD,CAAWnE,OAAK,EAACzJ,KAAK,UAAU+B,UAAWyB,KAC3C,kBAACoK,GAAD,CAAW5N,KAAK,SAAS+B,UAAWyH,KACpC,kBAACoE,GAAD,CAAW5N,KAAK,aAAa+B,UAAWoI,KACxC,kBAACyD,GAAD,CAAW5N,KAAK,WAAW+B,UAAW0I,KACtC,kBAACmD,GAAD,CAAW5N,KAAK,SAAS+B,UAAWmJ,KACpC,kBAAC0C,GAAD,CAAW5N,KAAK,cAAc+B,UAAWyJ,KACzC,kBAACoC,GAAD,CAAW5N,KAAK,gBAAgB+B,UAAWgK,KAC3C,kBAAC6B,GAAD,CAAW5N,KAAK,qBAAqB+B,UAAWsK,KAChD,kBAACuB,GAAD,CAAWnE,OAAK,EAACzJ,KAAK,YAAY+B,UAAWmL,KAC7C,kBAAC,KAAD,CAAOlN,KAAK,IAAI+B,UAAW2L,U,qBC5DnCK,IAAS/I,OAAO,mBCWD,WACb,OACE,kBAAC,IAAD,CAAU/N,MAAOA,IACf,kBAAC,IAAD,CAAagK,QAAS,KAAM3J,UAAWA,IACrC,kBAAC,IAAD,CAAe0W,SAAUlW,GACvBhB,QAAS,IAAMsM,SAAU6K,IAAUC,WAAYC,WAAYC,IAAYC,OACvE,kBAAC,GAAD,KACE,kBAAC,GAAD,YDlBI,MAASC,SAASC,eAAe,W",
    "file": "static/js/main.3733b803.chunk.js",
    "sourcesContent": [
        "\r\nexport const FLOW_ACTIONS = {\r\n  TRANSITION: \"flow/TRANSITION\",\r\n  SET_SELECTED: \"flow/SET_SELECTED\",\r\n  SELECTION_RECEIVED: \"flow/SELECTION_RECEIVED\",\r\n  RESET: \"flow/RESET\",\r\n};\r\n\r\nexport const SELECTION_STATES = {\r\n  IDLE: \"IDLE\",\r\n  SELECTING: \"SELECTING\",\r\n  SELECTED: \"SELECTED\",\r\n};\r\n\r\nconst initialState = {\r\n  selectionState: SELECTION_STATES.IDLE,\r\n  selectionCode: undefined,\r\n  selectionCarry: undefined,\r\n  selectedEntity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FLOW_ACTIONS.TRANSITION:\r\n      return {\r\n        ...state,\r\n        selectionState: SELECTION_STATES.SELECTING,\r\n        selectionCode: action.payload.code,\r\n        selectionCarry: action.payload.carry,\r\n        selectedEntity: undefined,\r\n      };\r\n    case FLOW_ACTIONS.SET_SELECTED:\r\n      return {\r\n        ...state,\r\n        selectionState: SELECTION_STATES.SELECTED,\r\n        selectedEntity: action.payload.entity,\r\n      };\r\n    case FLOW_ACTIONS.SELECTION_RECEIVED:\r\n      return {\r\n        ...state,\r\n        selectionState: SELECTION_STATES.IDLE,\r\n      };\r\n    case FLOW_ACTIONS.RESET:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const transit = (code, carry) => ({\r\n  type: FLOW_ACTIONS.TRANSITION,\r\n  payload: { code, carry },\r\n});\r\n\r\nexport const setSelected = entity => ({\r\n  type: FLOW_ACTIONS.SET_SELECTED,\r\n  payload: { entity },\r\n});\r\n\r\nexport const selectionReceived = () => ({\r\n  type: FLOW_ACTIONS.SELECTION_RECEIVED,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: FLOW_ACTIONS.RESET,\r\n});\r\n",
        "export const AUTH_ACTIONS = {\r\n  LOGIN: 'auth/LOGIN',\r\n  ME: 'auth/ME',\r\n  RESET: 'auth/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  token: {},\r\n  me: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n      };\r\n    case AUTH_ACTIONS.ME:\r\n      return {\r\n        ...state,\r\n        me: action.payload,\r\n      };\r\n    case AUTH_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const login = (username, password) => (dispatch, _, API) => {\r\n  return API.post('/login', { username, password })\r\n    .then(resp => {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN,\r\n        payload: !!resp ? resp.data : undefined,\r\n      });\r\n      dispatch(fetchMe());\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: AUTH_ACTIONS.RESET,\r\n  });\r\n};\r\n\r\nexport const fetchMe = () => (dispatch, _, API) => {\r\n  return API.get('/v1/me')\r\n    .then(resp => dispatch({\r\n      type: AUTH_ACTIONS.ME,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const changePassword = ({ old_password, new_password, new_password_confirm }) =>\r\n  (dispatch, getState, API) => {\r\n    if (new_password !== new_password_confirm) {\r\n      alert(\"تکرار رمز عبور اشتباه است\");\r\n      return;\r\n    }\r\n    return API.post('/password', { old_password, new_password }).then((res) => {\r\n      if (!!res && res.status === 200) {\r\n        dispatch(login(getMe(getState()).phone, new_password));\r\n        alert(\"رمز عبور با موفقیت تغییر کرد\");\r\n      }\r\n    });\r\n  }\r\n\r\n// --------- STATES ---------\r\n\r\nexport const getAccessToken = state => !!state.auth.token && state.auth.token.access_token;\r\nexport const getMe = state => state.auth.me;\r\nexport const isAuthenticated = state => !!state.auth.token && !!state.auth.token.access_token;\r\n",
        "export const REPORT_ACTIONS = {\n  SET: 'report/SET',\n  RESET: 'report/RESET',\n};\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case REPORT_ACTIONS.SET:\n      return {\n        ...initialState,\n        ...action.payload,\n      };\n    case REPORT_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const reset = () => ({\n  type: REPORT_ACTIONS.RESET,\n});\n\nexport const fetchReport = () => (dispatch, _, API) => {\n  console.log(\"Fetching report\");\n  return API.get(`/admin/v1/report`)\n    .then(resp => dispatch({\n      type: REPORT_ACTIONS.SET,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n",
        "export const USERS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'users/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'users/SET_ENTITY',\r\n  RESET: 'users/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_ACTIONS.SET_ENTITY_LIST:\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case USERS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case USERS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: USERS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: USERS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: USERS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchUsers = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all users\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  if (searchParams && searchParams.sortCol)\r\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\r\n  return API.get('/admin/v1/users', { params })\r\n    .then(resp => dispatch({\r\n      type: USERS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchUser = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching user:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/users/${id}`)\r\n    .then(resp => dispatch({\r\n      type: USERS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newUser = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating user\");\r\n  if (!entity) return;\r\n  return API.post(`/register`, entity);\r\n};\r\n\r\nexport const updateUser = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating user:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/users/${id}`, entity)\r\n    .then(resp => dispatch(fetchUser(id)));\r\n};\r\n\r\nexport const deleteUser = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting user:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/users/${id}`)\r\n    .then(resp => dispatch(fetchUsers()));\r\n};\r\n",
        "import moment from 'moment-jalaali';\r\n\r\nconst Question = {\r\n  id: { label: \"شناسه\" },\r\n  locale: {\r\n    label: \"زبان\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"en\", text: \"انگلیسی\", value: \"en\" },\r\n      { key: \"fa\", text: \"فارسی\", value: \"fa\" },\r\n    ]\r\n  },\r\n  title: { label: \"عنوان\" },\r\n  time_type: {\r\n    label: \"نوع زمان\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"daily\", text: \"روزانه\", value: \"daily\" },\r\n      { key: \"weekly\", text: \"هفتگی\", value: \"weekly\" },\r\n    ]\r\n  },\r\n  answer_type: {\r\n    label: \"نوع پاسخ\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"text\", text: \"متنی\", value: \"text\" },\r\n      { key: \"choice\", text: \"گزینه‌ای\", value: \"choice\" },\r\n      { key: \"letter\", text: \"حروفی\", value: \"letter\" },\r\n    ]\r\n  },\r\n  start_time: { label: \"تاریخ شروع\" },\r\n  end_time: { label: \"تاریخ پایان\" },\r\n  score: { label: \"امتیاز\" },\r\n  tries: { label: \"تعداد تلاش\" },\r\n  images: { label: \"تصاویر\" },\r\n  choices: { label: \"گزینه‌ها\" },\r\n  letters: { label: \"حروف\" },\r\n  letters_num: { label: \"تعداد حروف\" },\r\n  solutions: { label: \"جواب‌ها\" },\r\n};\r\n\r\nexport default Question;\r\n\r\nexport const print = q => {\r\n  q.time_type = Question.time_type.options.find(x => x.value === q.time_type);\r\n  if (!!q.time_type) q.time_type = q.time_type.text;\r\n  q.answer_type = Question.answer_type.options.find(x => x.value === q.answer_type);\r\n  if (!!q.answer_type) q.answer_type = q.answer_type.text;\r\n  if (q.start_time) q.start_time = moment(q.start_time, 'YYYY-MM-DD HH:mm:ss').format('jYYYY/jMM/jDD');\r\n  if (q.end_time) q.end_time = moment(q.end_time, 'YYYY-MM-DD HH:mm:ss').format('jYYYY/jMM/jDD');\r\n  return q;\r\n}\r\n",
        "import { print } from \"./questions.model\";\r\n\r\nexport const QUESTIONS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'questions/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'questions/SET_ENTITY',\r\n  RESET: 'questions/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case QUESTIONS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n      action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case QUESTIONS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case QUESTIONS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: QUESTIONS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: QUESTIONS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: QUESTIONS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchQuestions = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all questions\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/questions', { params })\r\n    .then(resp => dispatch({\r\n      type: QUESTIONS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchQuestion = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching question:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/questions/${id}`)\r\n    .then(resp => dispatch({\r\n      type: QUESTIONS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newQuestion = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating question\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/questions`, entity);\r\n};\r\n\r\nexport const updateQuestion = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating question:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/questions/${id}`, entity)\r\n    .then(resp => dispatch(fetchQuestion(id)));\r\n};\r\n\r\nexport const deleteQuestion = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting question:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/questions/${id}`)\r\n    .then(resp => dispatch(fetchQuestions()));\r\n};\r\n",
        "import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Answer = {\n  id: { label: \"شناسه\" },\n  question_id: { label: \"شناسه سؤال\" },\n  user_id: { label: \"شناسه کاربر\" },\n  text: { label: \"متن\" },\n  correct: { label: \"درستی\" },\n};\n\nexport default Answer;\n\nexport const print = a => {\n  a.question_id = <Link to={`/questions/${a.question_id}`}>{a.question_id}</Link>\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>\n  return a;\n}\n",
        "import { print } from \"./answers.model\";\r\n\r\nexport const ANSWERS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'answers/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'answers/SET_ENTITY',\r\n  RESET: 'answers/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ANSWERS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case ANSWERS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case ANSWERS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: ANSWERS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: ANSWERS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ANSWERS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchAnswers = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all answers\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/answers', { params })\r\n    .then(resp => dispatch({\r\n      type: ANSWERS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchAnswer = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching answer:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/answers/${id}`)\r\n    .then(resp => dispatch({\r\n      type: ANSWERS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newAnswer = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating answer\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/answers`, entity);\r\n};\r\n\r\nexport const updateAnswer = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating answer:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/answers/${id}`, entity)\r\n    .then(resp => dispatch(fetchAnswer(id)));\r\n};\r\n\r\nexport const deleteAnswer = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting answer:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/answers/${id}`)\r\n    .then(resp => dispatch(fetchAnswers()));\r\n};\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Hint = {\r\n  id: { label: \"شناسه\" },\r\n  question_id: { label: \"شناسه سؤال\" },\r\n  type: {\r\n    label: \"نوع\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"image\", text: \"تصویر\", value: \"image\" },\r\n      { key: \"choice\", text: \"گزینه\", value: \"choice\" },\r\n      { key: \"letter\", text: \"حروف\", value: \"letter\" },\r\n      { key: \"try\", text: \"تلاش\", value: \"try\" },\r\n      // { key: \"time\", text: \"زمان\", value: \"time\" },\r\n    ]\r\n  },\r\n  value: { label: \"مقدار\" },\r\n  price: { label: \"قیمت\" },\r\n};\r\n\r\nexport default Hint;\r\n\r\nexport const print = a => {\r\n  a.question_id = <Link to={`/questions/${a.question_id}`}>{a.question_id}</Link>\r\n  return a;\r\n}\r\n",
        "import { print } from \"./hints.model\";\r\n\r\nexport const HINTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'hints/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'hints/SET_ENTITY',\r\n  RESET: 'hints/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HINTS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case HINTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case HINTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: HINTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: HINTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: HINTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchHints = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all hints\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/hints', { params })\r\n    .then(resp => dispatch({\r\n      type: HINTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchHint = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching hint:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/hints/${id}`)\r\n    .then(resp => dispatch({\r\n      type: HINTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newHint = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating hint\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/hints`, entity);\r\n};\r\n\r\nexport const updateHint = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating hint:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/hints/${id}`, entity)\r\n    .then(resp => dispatch(fetchHint(id)));\r\n};\r\n\r\nexport const deleteHint = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting hint:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/hints/${id}`)\r\n    .then(resp => dispatch(fetchHints()));\r\n};\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserHint = {\r\n  id: { label: \"شناسه\" },\r\n  hint_id: { label: \"شناسه راهنمایی\" },\r\n  user_id: { label: \"شناسه کاربر\" },\r\n};\r\n\r\nexport default UserHint;\r\n\r\nexport const print = a => {\r\n  a.hint_id = <Link to={`/hints/${a.hint_id}`}>{a.hint_id}</Link>;\r\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>;\r\n  return a;\r\n}\r\n",
        "import { print } from \"./user_hints.model\";\r\n\r\nexport const USER_HINTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'user_hints/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'user_hints/SET_ENTITY',\r\n  RESET: 'user_hints/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_HINTS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case USER_HINTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case USER_HINTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: USER_HINTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: USER_HINTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: USER_HINTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchUserHints = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all user_hints\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/user_hints', { params })\r\n    .then(resp => dispatch({\r\n      type: USER_HINTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchUserHint = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching user_hint:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/user_hints/${id}`)\r\n    .then(resp => dispatch({\r\n      type: USER_HINTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newUserHint = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating user_hint\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/user_hints`, entity);\r\n};\r\n\r\nexport const updateUserHint = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating user_hint:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/user_hints/${id}`, entity)\r\n    .then(resp => dispatch(fetchUserHint(id)));\r\n};\r\n\r\nexport const deleteUserHint = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting user_hint:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/user_hints/${id}`)\r\n    .then(resp => dispatch(fetchUserHints()));\r\n};\r\n",
        "\r\nexport const ACHIEVEMENTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'achievements/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'achievements/SET_ENTITY',\r\n  RESET: 'achievements/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST:\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case ACHIEVEMENTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case ACHIEVEMENTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACHIEVEMENTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchAchievements = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all achievements\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/achievements', { params })\r\n    .then(resp => dispatch({\r\n      type: ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching achievement:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/achievements/${id}`)\r\n    .then(resp => dispatch({\r\n      type: ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newAchievement = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating achievement\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/achievements`, entity);\r\n};\r\n\r\nexport const updateAchievement = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating achievement:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/achievements/${id}`, entity)\r\n    .then(resp => dispatch(fetchAchievement(id)));\r\n};\r\n\r\nexport const deleteAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting achievement:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/achievements/${id}`)\r\n    .then(resp => dispatch(fetchAchievements()));\r\n};\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserAchievement = {\r\n  id: { label: \"شناسه\" },\r\n  achievement_id: { label: \"شناسه مدال\" },\r\n  user_id: { label: \"شناسه کاربر\" },\r\n};\r\n\r\nexport default UserAchievement;\r\n\r\nexport const print = a => {\r\n  a.achievement_id = <Link to={`/achievements/${a.achievement_id}`}>{a.achievement_id}</Link>;\r\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>;\r\n  return a;\r\n}\r\n",
        "import { print } from \"./user_achievements.model\";\r\n\r\nexport const USER_ACHIEVEMENTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'user_achievements/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'user_achievements/SET_ENTITY',\r\n  RESET: 'user_achievements/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case USER_ACHIEVEMENTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: USER_ACHIEVEMENTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchUserAchievements = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all user_achievements\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/user_achievements', { params })\r\n    .then(resp => dispatch({\r\n      type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchUserAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching user_achievement:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/user_achievements/${id}`)\r\n    .then(resp => dispatch({\r\n      type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newUserAchievement = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating user_achievement\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/user_achievements`, entity);\r\n};\r\n\r\nexport const updateUserAchievement = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating user_achievement:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/user_achievements/${id}`, entity)\r\n    .then(resp => dispatch(fetchUserAchievement(id)));\r\n};\r\n\r\nexport const deleteUserAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting user_achievement:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/user_achievements/${id}`)\r\n    .then(resp => dispatch(fetchUserAchievements()));\r\n};\r\n",
        "import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport flowReducer from './flow.reducer';\r\nimport auth from 'src/modules/auth/auth.reducer';\r\nimport report from 'src/modules/report/report.reducer';\r\nimport users from 'src/modules/users/users.reducer';\r\nimport questions from 'src/modules/questions/questions.reducer';\r\nimport answers from 'src/modules/answers/answers.reducer';\r\nimport hints from 'src/modules/hints/hints.reducer';\r\nimport user_hints from 'src/modules/user_hints/user_hints.reducer';\r\nimport achievements from 'src/modules/achievements/achievements.reducer';\r\nimport user_achievements from 'src/modules/user_achievements/user_achievements.reducer';\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  flow: flowReducer,\r\n  auth,\r\n  report,\r\n  users,\r\n  questions,\r\n  answers,\r\n  hints,\r\n  user_hints,\r\n  achievements,\r\n  user_achievements,\r\n});\r\n",
        "import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport Axios from 'axios';\r\n\r\nimport reducer from 'src/redux/reducer';\r\nimport { isAuthenticated, getAccessToken } from 'src/modules/auth/auth.reducer';\r\n\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nconst persistConfig = {\r\n  key: config.persist_key,\r\n  storage,\r\n  whitelist: ['auth'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const API = Axios.create({\r\n  baseURL: config.server_url + \"api\",\r\n  timeout: config.request_timeout,\r\n  headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(thunk.withExtraArgument(API)));\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\nAPI.interceptors.request.use(\r\n  config => {\r\n    if (!config.headers.Authorization) {\r\n      const state = store.getState();\r\n      if (isAuthenticated(state))\r\n        config.headers.Authorization = `Bearer ${getAccessToken(state)}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n);\r\n",
        "import React from 'react';\nimport { withAlert } from 'react-alert';\nimport { API } from 'src/redux/store_config';\nimport { Message } from 'semantic-ui-react';\n\n\nexport const AlertTemplate = ({ style, options, message, close }) => {\n  const type = { [options.type]: true };\n  return <div style={style}>\n    <Message\n      onDismiss={close}\n      content={<p style={{ paddingLeft: 16 }}>{message}</p>}\n      {...type}\n    />\n  </div>\n};\n\n\nclass ErrorHandler extends React.Component {\n  state = {\n    error: null\n  };\n\n  componentDidMount() {\n    // Set axios interceptors\n    this.requestInterceptor = API.interceptors.request.use(req => {\n      this.setState({ error: null });\n      return req;\n    });\n\n    this.responseInterceptor = API.interceptors.response.use(\n      res => res,\n      error => {\n        console.log(error);\n        if (!!error.response && !!error.response.data && !!error.response.data.message) {\n          this.props.alert.error(JSON.stringify(error.response.data.message));\n        }\n        this.setState({ error });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    // Remove handlers, so Garbage Collector will get rid of if WrappedComponent will be removed\n    API.interceptors.request.eject(this.requestInterceptor);\n    API.interceptors.response.eject(this.responseInterceptor);\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n    if (!!error && !!error.message)\n      this.props.alert.error(JSON.stringify(error.message));\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withAlert()(ErrorHandler);\n",
        "import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\n\r\nimport { selectionReceived } from 'src/redux/flow.reducer';\r\n\r\n\r\nexport function Center({ children }) {\r\n  return <div style={{ minHeight: '100vh', display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n    {children}\r\n  </div>;\r\n}\r\n\r\nexport const BackButton = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  return <div style={{ textAlign: \"left\" }}>\r\n    <Button icon labelPosition='right' onClick={() => {\r\n      dispatch(selectionReceived());\r\n      history.goBack();\r\n    }}>\r\n      بازگشت\r\n      <Icon name=\"chevron left\" />\r\n    </Button>\r\n  </div>;\r\n};\r\n",
        "import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Button, Icon, Image, Segment, Input, Modal, Label } from 'semantic-ui-react';\r\n// import { DateTimePicker as JalaliDateTimePicker } from \"react-advance-jalaali-datepicker\";\r\nimport moment from 'moment-jalaali';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { getFormValues, initialize } from 'redux-form';\r\n\r\nimport { transit, selectionReceived, SELECTION_STATES } from 'src/redux/flow.reducer';\r\nimport { API } from 'src/redux/store_config';\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nexport const CHECKS = {\r\n  REQUIRED: v => (!v || v === '') ? 'این فیلد را پر کنید' : undefined,\r\n  MAX_LEN: maxLen => v => (!!v && v.length > maxLen) ? `باید کمتر از ${maxLen} کاراکتر باشد` : undefined,\r\n  MIN_LEN: minLen => v => (!!v && v.length < minLen) ? `باید بیشتر از ${minLen} کاراکتر باشد` : undefined,\r\n  MAX_VAL: maxVal => v => (!!v && v > maxVal) ? `باید کمتر از ${maxVal} باشد` : undefined,\r\n  MIN_VAL: minVal => v => (!!v && v < minVal) ? `باید بیشتر از ${minVal} باشد` : undefined,\r\n};\r\n\r\nexport const InputField = ({ input, meta, children, ...props }) =>\r\n  <Form.Input {...props}\r\n    {...input} children={children}\r\n    onChange={(e, { value }) => input.onChange(value)}\r\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n  />;\r\n\r\nexport const MultiInputField = ({ input, meta, children, ...props }) => {\r\n  const values = JSON.parse(!!input.value ? input.value : \"[]\");\r\n  const N = !!values ? values.length : 0;\r\n  let result = [];\r\n  for (let i = 0; i < N; i++) {\r\n    result.push(<Input key={i}\r\n      name={props.name + \" \" + i}\r\n      value={values[i]}\r\n      onChange={(e, { value }) => {\r\n        values[i] = value;\r\n        input.onChange(JSON.stringify(values));\r\n      }}\r\n      action={{\r\n        icon: \"minus\", color: \"red\", onClick: (e) => {\r\n          e.preventDefault();\r\n          values.splice(i, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }\r\n      }}\r\n      fluid\r\n      style={{ marginTop: i > 0 ? 16 : 0 }}\r\n    />);\r\n  }\r\n  return <>\r\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\r\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\r\n      <Icon name=\"add\" circular inverted color=\"green\" size=\"small\"\r\n        style={{ cursor: \"pointer\", float: \"left\" }}\r\n        onClick={() => {\r\n          values.push(\"\");\r\n          input.onChange(JSON.stringify(values));\r\n        }} />\r\n    </Segment>\r\n    <Segment raised attached=\"bottom\">\r\n      {result}\r\n    </Segment>\r\n  </>;\r\n}\r\n\r\nexport const SelectField = ({ input, meta, children, ...props }) =>\r\n  <Form.Dropdown {...props} selection\r\n    {...input} children={children}\r\n    onChange={(e, { value }) => input.onChange(value)}\r\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n  />;\r\n\r\nexport const booleanOptions = [\r\n  { key: 'null', text: '', value: undefined },\r\n  { key: 'true', text: 'True', value: 1 },\r\n  { key: 'false', text: 'False', value: 0 },\r\n];\r\n\r\nexport function EntityField({ input, meta, children, entityName, formName, ...props }) {\r\n  const flow = useSelector(state => state.flow);\r\n  const dispatch = useDispatch();\r\n  const values = useSelector(state => getFormValues(formName)(state));\r\n  const code = formName + \"/\" + entityName;\r\n  const actionButton = <Button icon=\"search\"\r\n    as={Link} to={`/${entityName}`}\r\n    onClick={() => dispatch(transit(code, values))} />;\r\n  if (flow.selectionState === SELECTION_STATES.SELECTED && flow.selectionCode === code) {\r\n    dispatch(initialize(formName, flow.selectionCarry));\r\n    input.onChange(flow.selectedEntity.id);\r\n    dispatch(selectionReceived());\r\n  }\r\n  return <Form.Input {...props}\r\n    {...input} children={children}\r\n    action={actionButton}\r\n    onChange={(e, { value }) => input.onChange(value)}\r\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n  />;\r\n};\r\n\r\n// export const DateTimePicker = ({ input, meta, children, ...props }) =>\r\n//   <>\r\n//     <label><b>{props.label}</b></label>\r\n//     <JalaliDateTimePicker {...props}\r\n//       {...input} children={children}\r\n//       format=\"تاریخ: jYYYY/jMM/jDD ساعت: HH:mm\"\r\n//       onChange={(unix, formatted) => input.onChange(unix)}\r\n//     />\r\n//   </>;\r\n\r\n// export function DatePicker({ input, meta, children, ...props }) {\r\n//   const miladiFormat = 'YYYY-MM-DD HH:mm:ss';\r\n//   const jalaaliFormat = 'jYYYY/jMM/jDD';\r\n//   const regex = /\\d{4}\\/\\d{2}\\/\\d{2}/g;\r\n\r\n//   const toJalaali = x => !!x ? moment(input.value).format(jalaaliFormat) : \"\";\r\n//   const toMilaadi = x => !!x ? moment(text, jalaaliFormat).format(miladiFormat) : \"\";\r\n//   const isCorrect = x => regex.test(x);\r\n\r\n//   const [text, setText] = React.useState(toJalaali(input.value));\r\n//   const [correct, setCorrect] = React.useState(false);\r\n\r\n//   React.useEffect(() => {\r\n//     // console.log(\"input.value changed:\", input.value);\r\n//     setText(toJalaali(input.value));\r\n//   }, [input.value]);\r\n//   React.useEffect(() => {\r\n//     // console.log(\"text changed:\", text);\r\n//     setCorrect(isCorrect(text));\r\n//     if (isCorrect(text))\r\n//       input.onChange(toMilaadi(text));\r\n//   }, [text]);\r\n\r\n//   const correctIcon = <Icon name={correct ? \"check\" : \"times\"}\r\n//     color={correct ? \"green\" : \"red\"} />;\r\n\r\n//   return <Form.Input {...props} value={text} children={children}\r\n//     error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n//     onChange={(e, { value }) => setText(value)}\r\n//     icon={correctIcon} />;\r\n// }\r\n\r\nexport function Timestamp({ input, meta, children, ...props }) {\r\n  const date = !!input.value ? moment(input.value, 'YYYY-MM-DD HH:mm:ss').toDate() : undefined;\r\n  return <>\r\n    <Label>{props.label}</Label>\r\n    <DatePicker\r\n      selected={date}\r\n      onChange={d => {\r\n        input.onChange(moment(d).format('YYYY-MM-DD HH:mm:ss'));\r\n      }}\r\n      showTimeSelect\r\n      dateFormat=\"yyyy MMMM d, HH:mm\"\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={60}\r\n      children={children}\r\n      {...props}\r\n    />\r\n    <div style={{ height: 8 }} />\r\n  </>\r\n}\r\n\r\nexport function FilePicker({ input, meta, children, ...props }) {\r\n  const inputEl = useRef(null);\r\n  const [text, setText] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const onClick = e => {\r\n    e.preventDefault();\r\n    if (inputEl && inputEl.current)\r\n      inputEl.current.click();\r\n  };\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      setText(files[0].name);\r\n      let reader = new FileReader();\r\n      reader.onload = ev => setImage(ev.target.result);\r\n      reader.readAsDataURL(files[0]);\r\n      input.onChange(files[0]);\r\n    } else {\r\n      setImage(null);\r\n    }\r\n  };\r\n  return <>\r\n    <Form.Input {...props} value={text} children={children}\r\n      error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n      action={<Button icon=\"file\" onClick={onClick} />} />\r\n    <input ref={inputEl} type=\"file\" accept=\"image/*\" hidden onChange={onChange} />\r\n    <div style={{ height: 8 }} />\r\n    <Image hidden={!image} src={image} size=\"large\" style={{ marginBottom: 16 }} />\r\n  </>;\r\n}\r\n\r\nexport const MultiFilePicker = ({ input, meta, children, path, ...props }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const close = () => setOpen(false);\r\n  const values = JSON.parse(!!input.value ? input.value : \"[]\");\r\n  const N = !!values ? values.length : 0;\r\n  let result = [];\r\n  for (let i = 0; i < N; i++) {\r\n    result.push(<div key={i}>\r\n      <Image src={`${config.server_url}storage/${values[i]}`}\r\n        style={{ maxWidth: \"90%\", display: \"inline-block\" }} />\r\n      <Icon name=\"times\" color=\"red\" circular inverted style={{ marginRight: 8 }}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          deleteFile(values[i]);\r\n          values.splice(i, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }} />\r\n    </div>);\r\n  }\r\n  return <>\r\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\r\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\r\n      <Modal trigger={\r\n        <Icon name=\"add\" circular inverted color=\"green\" size=\"small\"\r\n          onClick={() => setOpen(true)}\r\n          style={{ cursor: \"pointer\", float: \"left\" }} />\r\n      }\r\n        open={open} onClose={close}>\r\n        <Modal.Header>انتخاب فایل</Modal.Header>\r\n        <Modal.Content>\r\n          <FilePicker input={{ onChange: setFile }} />\r\n          <Button type='submit' color='green' icon labelPosition=\"left\"\r\n            disabled={!file} loading={submitting} onClick={() => {\r\n              setSubmitting(true);\r\n              saveFile(file, path)\r\n                .then(res => {\r\n                  if (!res) return;\r\n                  values.push(res.data.relative_path);\r\n                  input.onChange(JSON.stringify(values));\r\n                  close();\r\n                })\r\n                .finally(() => {\r\n                  setSubmitting(false);\r\n                });\r\n            }}>\r\n            <Icon name='check' />\r\n            ذخیره\r\n          </Button>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Segment>\r\n    <Segment raised attached=\"bottom\">\r\n      {result}\r\n    </Segment>\r\n  </>;\r\n}\r\n\r\nfunction saveFile(file, path) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"path\", path);\r\n  return API.post(\"files\", formData);\r\n}\r\n\r\nfunction deleteFile(url) {\r\n  return API.delete(\"files\", { data: { path: url } });\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { Center } from 'src/components/Common';\r\nimport { login } from './auth.reducer';\r\nimport { InputField, CHECKS } from 'src/components/FormFields';\r\n\r\n\r\nconst checkMinLen6 = CHECKS.MIN_LEN(6);\r\n\r\nconst LoginForm = reduxForm({ form: 'login' })(\r\n  ({ handleSubmit, pristine, invalid, submitting }) =>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Field component={InputField} name=\"username\" label=\"نام کاربری\" autoFocus\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"password\" label=\"رمز عبور\" type=\"password\"\r\n        required validate={[CHECKS.REQUIRED, checkMinLen6]} />\r\n      <Button type='submit' primary\r\n        disabled={pristine || invalid} loading={submitting}>ورود</Button>\r\n    </Form>\r\n);\r\n\r\nclass Auth extends React.Component {\r\n  onSubmit = values => this.props.login(values.username, values.password);\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \"#abc\" }}>\r\n        <Center>\r\n          <Segment raised style={{ width: 400 }}>\r\n            <LoginForm onSubmit={this.onSubmit} />\r\n          </Segment>\r\n        </Center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, dispatch => ({\r\n  login: (username, password) => dispatch(login(username, password)),\r\n}))(Auth);\r\n",
        "import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Menu, Dropdown, Container } from 'semantic-ui-react';\r\n\r\nimport { logout } from 'src/modules/auth/auth.reducer';\r\n\r\n\r\nconst Navbar = connect(null, dispatch => ({\r\n  logout: () => dispatch(logout()),\r\n}))(withRouter(({ location, logout }) => {\r\n  const route = location.pathname.split('/')[1];\r\n  return (\r\n    <Menu attached inverted>\r\n      <Menu.Item\r\n        name='گزارش'\r\n        active={route === 'report'}\r\n        color=\"blue\"\r\n        icon=\"dashboard\"\r\n        link\r\n        as={Link}\r\n        to=\"/report\"\r\n      />\r\n      <Menu.Item as={Dropdown} item text='جداول'\r\n        active={['users', 'questions'].indexOf(route) >= 0} color=\"blue\">\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item text='کاربران' icon=\"users\" as={Link} to='/users' />\r\n          <Dropdown.Item text='سؤالات' icon=\"question\" as={Link} to='/questions' />\r\n          <Dropdown.Item text='تلاش‌ها' icon=\"file\" as={Link} to='/answers' />\r\n          <Dropdown.Item text='راهنمایی‌ها' icon=\"gift\" as={Link} to='/hints' />\r\n          <Dropdown.Item text='مدال‌ها' icon=\"trophy\" as={Link} to='/achievements' />\r\n        </Dropdown.Menu>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name='تنظیمات'\r\n        active={route === 'setting'}\r\n        color=\"blue\"\r\n        icon=\"setting\"\r\n        link\r\n        as={Link}\r\n        to=\"/settings\"\r\n      />\r\n\r\n      <Menu.Menu position='right'>\r\n        <Menu.Item\r\n          active={true}\r\n          color=\"red\"\r\n          name='خروج'\r\n          icon='sign-out'\r\n          onClick={logout}\r\n        />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}));\r\n\r\nfunction Layout({ children }) {\r\n  return <>\r\n    <Navbar />\r\n    <Container style={{ margin: '16px 0' }}>\r\n      {children}\r\n    </Container>\r\n  </>;\r\n}\r\n\r\nexport default Layout;\r\n",
        "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Segment, Grid, Statistic } from 'semantic-ui-react';\n\nimport { fetchReport } from './report.reducer';\n\nimport Layout from 'src/components/Layout';\n\n\nclass Report extends React.Component {\n  componentDidMount() {\n    this.props.fetchReport();\n  }\n  render() {\n    const { report } = this.props;\n    console.log(\"Report:\", report);\n    return <Layout>\n      <Segment attached=\"top\" raised textAlign=\"center\" color=\"blue\" inverted>\n        <h1>گزارش</h1>\n      </Segment>\n      <Segment attached=\"bottom\" textAlign=\"center\" padded>\n        {report.server &&\n          <Grid columns={3}>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>سرور</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                زمان: {(new Date(report.server.timestamp)).toUTCString()}\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>کاربران</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد کاربران</Statistic.Label>\n                  <Statistic.Value>{report.users.count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>سؤالات</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد سؤالات</Statistic.Label>\n                  <Statistic.Value>{report.questions.count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n          </Grid>\n        }\n      </Segment>\n    </Layout>;\n  }\n}\n\nexport default connect(\n  state => ({ report: state.report }),\n  dispatch => ({ fetchReport: () => dispatch(fetchReport()) }),\n)(Report);\n",
        "\r\nconst User = {\r\n  id: { label: \"شناسه\" },\r\n  name: { label: \"نام\" },\r\n  phone: { label: \"شماره همراه\" },\r\n  email: { label: \"ایمیل\" },\r\n  role: {\r\n    label: \"نقش\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"admin\", text: \"admin\", value: \"admin\" },\r\n      { key: \"user\", text: \"user\", value: \"user\" },\r\n    ]\r\n  },\r\n  is_active: { label: \"فعال\" },\r\n  password: { label: \"رمز عبور\" },\r\n  passwordConfirm: { label: \"تکرار رمز عبور\" },\r\n};\r\n\r\nexport default User;\r\n",
        "import React from 'react';\r\nimport { Table, Icon, Menu, Statistic, Dropdown, Image } from 'semantic-ui-react';\r\n\r\n\r\nconst Column = (entity, index) => col => {\r\n  let c = { key: col.key + index };\r\n  const value = entity[col.key];\r\n  if (!!col.render) {\r\n    if (typeof col.render === 'string') {\r\n      switch (col.render) {\r\n        case 'boolean':\r\n          const trueIcon = <Icon name=\"check\" size=\"large\" color=\"green\" />;\r\n          const falseIcon = <Icon name=\"times\" size=\"large\" color=\"red\" />;\r\n          c.children = !!value ? trueIcon : falseIcon;\r\n          break;\r\n        case 'image':\r\n          c.children = <Image src={value} size=\"large\"/>;\r\n          break;\r\n        default:\r\n          c.children = null;\r\n      }\r\n    } else {\r\n      c.children = col.render(entity);\r\n    }\r\n  } else {\r\n    c.children = value;\r\n  }\r\n  return c;\r\n};\r\n\r\nconst Row = schema => (entity, index) => {\r\n  const c = Column(entity, index);\r\n  return {\r\n    key: index,\r\n    cells: schema.map(col => c(col)),\r\n  };\r\n};\r\n\r\nconst Header = (schema, sortCol, sortDir, handleSort) => {\r\n  return schema.map(col => ({\r\n    key: col.key,\r\n    sorted: sortCol === col.key ? (sortDir === 'asc' ? 'ascending' : 'descending') : null,\r\n    onClick: () => {\r\n      if (col.sortable)\r\n        handleSort(col.key, sortCol === col.key ? (sortDir === 'asc' ? 'desc' : 'asc') : 'asc');\r\n    },\r\n    children: col.header,\r\n  }));\r\n};\r\n\r\nconst Pagination = (colSpan, pagination) => {\r\n  const { current_page, last_page, per_page, setPage, setPageSize } = pagination;\r\n  let pages = [];\r\n  for (let i = current_page - 2; i < current_page + 3; i++) {\r\n    if (i >= 1 && i <= last_page)\r\n      pages.push(<Menu.Item key={`page_${i}`} as='a' active={i === current_page}\r\n        onClick={() => setPage(i)}>{i}</Menu.Item>);\r\n  }\r\n  return (\r\n    <Table.Row>\r\n      <Table.HeaderCell colSpan={colSpan}>\r\n        <Menu pagination style={{ direction: \"ltr\" }}>\r\n          <Menu.Item as='a' icon onClick={() => pagination.setPage(1)}>\r\n            <Icon name='angle double left' />\r\n          </Menu.Item>\r\n          {pages}\r\n          <Menu.Item as='a' icon onClick={() => pagination.setPage(last_page)}>\r\n            <Icon name='angle double right' />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <span style={{ marginRight: 16 }}>\r\n          <span style={{ marginLeft: 4 }}>در هر صفحه:</span>\r\n          <Dropdown selection value={per_page} style={{ minWidth: 48 }}\r\n            options={[10, 20, 50, 100].map(v => ({ key: v, text: v, value: v }))}\r\n            onChange={(e, { value }) => setPageSize(value)} />\r\n        </span>\r\n        <Statistic size='mini' floated=\"right\">\r\n          <Statistic.Label>تعداد صفحات</Statistic.Label>\r\n          <Statistic.Value>{last_page}</Statistic.Value>\r\n        </Statistic>\r\n      </Table.HeaderCell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nexport default function MyTable({ schema, data, pagination, sortCol, sortDir, onSort }) {\r\n  if (!data) data = [];\r\n  return <Table celled sortable\r\n    headerRow={Header(schema, sortCol, sortDir, onSort)}\r\n    renderBodyRow={Row(schema)}\r\n    footerRow={Pagination(schema.length, pagination)}\r\n    tableData={data} />;\r\n}\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { Segment, Form, Button, Icon, Modal } from 'semantic-ui-react';\r\nimport { reduxForm, submit } from 'redux-form';\r\nimport qs from 'query-string';\r\nimport { withAlert } from 'react-alert';\r\n\r\nimport Layout from 'src/components/Layout';\r\nimport Table from 'src/components/Table';\r\nimport { BackButton } from 'src/components/Common';\r\n\r\nimport { setSelected, SELECTION_STATES } from 'src/redux/flow.reducer';\r\n\r\n\r\nconst SearchForm = (entityName, Fields) =>\r\n  reduxForm({ form: `${entityName}/search` })(\r\n    props => {\r\n      const { handleSubmit, submitting, pristine, reset } = props;\r\n      return <Form onSubmit={handleSubmit}>\r\n\r\n        {Fields(props)}\r\n\r\n        <Button type='submit' icon labelPosition=\"left\" primary\r\n          loading={submitting}>\r\n          <Icon name='search' />\r\n          جستجو\r\n        </Button>\r\n        <Button type='button' icon labelPosition=\"left\" secondary\r\n          disabled={pristine || submitting} onClick={reset}>\r\n          <Icon name='refresh' />\r\n          پاک‌سازی فرم\r\n        </Button>\r\n      </Form>;\r\n    }\r\n  );\r\n\r\nconst SearchResult = withAlert()(({\r\n  history, entityName, tableSchema, data, pagination, deleteAction, alert, sortCol, sortDir, onSort\r\n}) => {\r\n  const flow = useSelector(state => state.flow);\r\n  const dispatch = useDispatch();\r\n  const selectButton = entity =>\r\n    <Icon name=\"check\" color=\"green\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n      dispatch(setSelected(entity));\r\n      history.goBack();\r\n    }} />\r\n  const editButton = entity =>\r\n    <Link to={`/${entityName}/${!!entity ? entity.id : '?'}`}>\r\n      <Icon name=\"edit\" color=\"black\" style={{ cursor: \"pointer\" }} />\r\n    </Link>\r\n  const deleteButton = entity =>\r\n    <Modal\r\n      trigger={\r\n        <Icon name=\"times\" size=\"large\" color=\"red\" style={{ cursor: \"pointer\" }} />\r\n      }\r\n      header='هشدار!'\r\n      content={`آیا از حذف اطمینان دارید؟`}\r\n      actions={[\r\n        {\r\n          key: 'yes', content: 'بله', negative: true,\r\n          onClick: () => deleteAction(!!entity ? entity.id : undefined)\r\n            .then(() => alert.success(\"رکورد با موفقیت حذف شد\"))\r\n        },\r\n        { key: 'no', content: 'خیر' },\r\n      ]}\r\n    />;\r\n  const actionButtons = entity =>\r\n    <>\r\n      {flow.selectionState === SELECTION_STATES.SELECTING && selectButton(entity)}\r\n      {editButton(entity)}\r\n      {deleteButton(entity)}\r\n    </>;\r\n  const schema = [\r\n    { key: \"operations\", header: \"عملیات\", render: actionButtons },\r\n    ...tableSchema,\r\n  ];\r\n  return <Table schema={schema} data={data} pagination={pagination}\r\n    sortCol={sortCol} sortDir={sortDir} onSort={onSort} />;\r\n});\r\n\r\n\r\nclass SelectLayout extends React.Component {\r\n  state = {\r\n    page: 1,\r\n    page_size: 20,\r\n    sortCol: null,\r\n    sortDir: null,\r\n  };\r\n  SF = undefined;\r\n  componentDidMount() {\r\n    this.onSubmit({});\r\n  }\r\n  initForms() {\r\n    this.SF = SearchForm(this.props.entityName, this.props.SearchFields);\r\n  }\r\n  onSubmit = values => {\r\n    const params = qs.parse(this.props.location.search);\r\n    return this.props.fetchMethod({\r\n      filter: { ...params, ...values },\r\n      page: this.state.page,\r\n      page_size: this.state.page_size,\r\n      sortCol: this.state.sortCol,\r\n      sortDir: this.state.sortDir,\r\n    });\r\n  };\r\n  search = () => this.props.search(`${this.props.entityName}/search`);\r\n  setPage = page => {\r\n    this.setState({ page }, this.search);\r\n  };\r\n  setPageSize = page_size => {\r\n    this.setState({ page_size }, this.search);\r\n  };\r\n  render() {\r\n    if (this.props.entityList === undefined) return null;\r\n    if (this.props.SearchFields && !this.SF) this.initForms();\r\n    const { data, current_page, last_page } = this.props.entityList;\r\n    const { search } = this.props.location;\r\n    const { title, entityName, tableSchema, deleteAction } = this.props;\r\n    return <Layout>\r\n      <Segment raised textAlign=\"center\" color=\"blue\" inverted attached=\"top\">\r\n        <h1>{title}</h1>\r\n      </Segment>\r\n      <Segment attached>\r\n        <BackButton history={this.props.history} />\r\n        {this.props.SearchFields && <this.SF onSubmit={this.onSubmit} />}\r\n      </Segment>\r\n      <Segment attached=\"bottom\">\r\n        <Button color=\"green\" icon labelPosition=\"left\"\r\n          as={Link} to={`/${entityName}/new${search}`}>\r\n          <Icon name=\"plus\" />\r\n          جدید\r\n        </Button>\r\n        <SearchResult entityName={entityName}\r\n          tableSchema={tableSchema}\r\n          data={data}\r\n          sortCol={this.state.sortCol}\r\n          sortDir={this.state.sortDir}\r\n          onSort={(sortCol, sortDir) => this.setState({ sortCol, sortDir }, this.search)}\r\n          history={this.props.history}\r\n          pagination={{\r\n            current_page, last_page, per_page: this.state.page_size,\r\n            setPage: this.setPage, setPageSize: this.setPageSize,\r\n          }}\r\n          deleteAction={deleteAction} />\r\n      </Segment>\r\n    </Layout>;\r\n  }\r\n}\r\n\r\nexport default connect(null, dispatch => ({\r\n  search: formName => dispatch(submit(formName)),\r\n}))(SelectLayout);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchUsers, deleteUser } from './users.reducer';\r\nimport User from './users.model';\r\n\r\nimport { InputField, SelectField, booleanOptions } from 'src/components/FormFields';\r\nimport SelectLayout from 'src/components/SelectLayout';\r\n\r\n\r\nfunction UserSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"کاربران\"\r\n    entityName=\"users\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"id\" label={User.id.label} />\r\n        <Field component={InputField} name=\"name\" label={User.name.label} />\r\n        <Field component={InputField} name=\"phone\" label={User.phone.label} />\r\n        <Field component={InputField} name=\"email\" label={User.email.label} />\r\n      </Form.Group>\r\n      <Form.Group widths='equal'>\r\n        <Field component={SelectField} name=\"role\" label={User.role.label}\r\n          options={User.role.options} />\r\n        <Field component={SelectField} name=\"is_active\" label={User.is_active.label}\r\n          options={booleanOptions} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"id\", sortable: true, header: User.id.label },\r\n      { key: \"name\", sortable: true, header: User.name.label },\r\n      { key: \"phone\", sortable: true, header: User.phone.label },\r\n      { key: \"email\", sortable: true, header: User.email.label },\r\n      { key: \"role\", header: User.role.label },\r\n      { key: \"is_active\", header: User.is_active.label, render: \"boolean\" },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.users.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchUsers(searchParams)),\r\n  deleteAction: id => dispatch(deleteUser(id)),\r\n}))(UserSelect);\r\n",
        "import React from 'react';\nimport { Segment, Form, Button, Icon } from 'semantic-ui-react';\nimport { reduxForm } from 'redux-form';\nimport { withAlert } from 'react-alert';\nimport qs from 'query-string';\n\nimport Layout from 'src/components/Layout';\nimport { BackButton } from 'src/components/Common';\n\n\nconst EditForm = (entityName, Fields, isNew) =>\n  reduxForm({ form: `${entityName}/${isNew ? 'new' : 'edit'}`, enableReinitialize: true })(\n    props => {\n      const { handleSubmit, submitting, pristine, reset } = props;\n      return <Form onSubmit={handleSubmit}>\n\n        {Fields(props)}\n\n        <Button type='submit' color='green' icon labelPosition=\"left\"\n          disabled={pristine} loading={submitting}>\n          <Icon name='check' />\n          ذخیره\n        </Button>\n        <Button type='button' secondary icon labelPosition=\"left\"\n          disabled={pristine || submitting} onClick={reset}>\n          <Icon name='refresh' />\n          لغو تغییرات\n        </Button>\n      </Form>;\n    }\n  );\n\nclass EditLayout extends React.Component {\n  NF = undefined;\n  EF = undefined;\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    if (id)\n      this.fetchEntity(id);\n    else\n      this.props.resetEntity(qs.parse(this.props.location.search));\n  }\n  initForms() {\n    this.NF = EditForm(this.props.entityName, this.props.NewFields, true);\n    this.EF = EditForm(this.props.entityName, this.props.EditFields, false);\n  }\n  fetchEntity = id => {\n    return this.props.fetchEntity(id);\n  };\n  updateEntity = id => values => {\n    return this.props.updateEntity(id, values)\n      .then(() => this.props.alert.success(\"رکورد با موفقیت اصلاح شد\"));\n  };\n  newEntity = values => {\n    return this.props.newEntity(values)\n      .then(() => {\n        this.props.alert.success(\"رکورد با موفقیت ایجاد شد\");\n        this.props.history.goBack();\n      });\n  };\n  render() {\n    if (this.props.NewFields && !this.NF) this.initForms();\n    if (this.props.EditFields && !this.EF) this.initForms();\n    const { id } = this.props.match.params;\n    const { title, entity } = this.props;\n    return <Layout>\n      <div style={{ maxWidth: 600, margin: '0 auto' }}>\n        <Segment raised attached=\"top\" textAlign=\"center\" color=\"blue\" inverted>\n          <h2>{title}</h2>\n        </Segment>\n        <Segment raised padded attached=\"bottom\">\n          <BackButton history={this.props.history} />\n          {id\n            ? (this.props.EditFields && <this.EF onSubmit={this.updateEntity(id)} initialValues={entity} />)\n            : (this.props.NewFields && <this.NF onSubmit={this.newEntity} initialValues={entity} />)}\n        </Segment>\n      </div>\n    </Layout>;\n  }\n}\n\nexport default withAlert()(EditLayout);\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchUser, updateUser, newUser } from './users.reducer';\r\nimport User from './users.model';\r\n\r\nimport { CHECKS, InputField, SelectField, booleanOptions } from 'src/components/FormFields';\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction UserEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"کاربر\"\r\n    entityName=\"users\"\r\n    NewFields={formProps => <>\r\n      <Field component={InputField} name=\"name\" label={User.name.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"phone\" label={User.phone.label} />\r\n      <Field component={InputField} name=\"email\" label={User.email.label} />\r\n      <Field component={InputField} name=\"password\" label={User.password.label} type=\"password\"\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"passwordConfirm\" label={User.passwordConfirm.label} type=\"password\"\r\n        required validate={CHECKS.REQUIRED} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"name\" label={User.name.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"phone\" label={User.phone.label} />\r\n      <Field component={InputField} name=\"email\" label={User.email.label} />\r\n      <Field component={InputField} name=\"role\" label={User.email.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={SelectField} name=\"is_active\" label={User.is_active.label}\r\n        options={booleanOptions} />\r\n      <div style={{ marginBottom: 16 }}>\r\n        <Button as={Link} to={`/user_hints?user_id=${!!formProps.initialValues ? formProps.initialValues.id : 'null'}`}>راهنمایی‌ها</Button>\r\n        <Button as={Link} to={`/user_achievements?user_id=${!!formProps.initialValues ? formProps.initialValues.id : 'null'}`}>مدال‌ها</Button>\r\n      </div>\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.users.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchUser(id)),\r\n    updateEntity: (id, entity) => dispatch(updateUser(id, entity)),\r\n    newEntity: entity => dispatch(newUser(entity)),\r\n  })\r\n)(UserEdit);\r\n",
        "import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport UserSelect from './users.select';\nimport UserEdit from './users.edit';\n\n\nexport default function Users({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={UserSelect} />\n      <Route exact path={`${url}/new`} component={UserEdit} />\n      <Route exact path={`${url}/:id`} component={UserEdit} />\n    </Switch>\n  );\n}\n",
        "\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchQuestions, deleteQuestion } from './questions.reducer';\r\nimport Question from './questions.model';\r\n\r\nimport { InputField, SelectField } from 'src/components/FormFields';\r\nimport SelectLayout from 'src/components/SelectLayout';\r\n\r\n\r\nfunction QuestionSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"سؤالات\"\r\n    entityName=\"questions\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"id\" label={Question.id.label} />\r\n        <Field component={InputField} name=\"title\" label={Question.title.label} />\r\n      </Form.Group>\r\n      <Form.Group widths='equal'>\r\n        <Field component={SelectField} options={Question.locale.options}\r\n          name=\"locale\" label={Question.locale.label} />\r\n        <Field component={SelectField} options={Question.time_type.options}\r\n          name=\"time_type\" label={Question.time_type.label} />\r\n        <Field component={SelectField} options={Question.answer_type.options}\r\n          name=\"answer_type\" label={Question.answer_type.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"id\", header: Question.id.label },\r\n      { key: \"locale\", header: Question.locale.label },\r\n      { key: \"title\", header: Question.title.label },\r\n      { key: \"time_type\", header: Question.time_type.label },\r\n      { key: \"answer_type\", header: Question.answer_type.label },\r\n      { key: \"start_time\", header: Question.start_time.label },\r\n      { key: \"end_time\", header: Question.end_time.label },\r\n      { key: \"score\", header: Question.score.label },\r\n      { key: \"tries\", header: Question.tries.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.questions.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchQuestions(searchParams)),\r\n  deleteAction: id => dispatch(deleteQuestion(id)),\r\n}))(QuestionSelect);\r\n",
        "import React, { useState } from 'react';\r\nimport { Form, Input, Button, Icon, Image, Segment, Modal } from 'semantic-ui-react';\r\n\r\nimport { FilePicker } from 'src/components/FormFields';\r\n\r\nimport { API } from 'src/redux/store_config';\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nexport const ChoicesField = ({ input, meta, children, path, ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const onOpen = () => setOpen(true);\r\n  const onClose = () => setOpen(false);\r\n  const values = !!input.value ? JSON.parse(input.value) : [];\r\n  const N = !!values ? values.length : 0;\r\n\r\n  // =============  CHOICE MODAL  =============\r\n  const ChoiceModal = () => {\r\n    const [obj, setObj] = useState({ type: \"text\", value: null });\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const onSubmit = () => {\r\n      if (obj.type === \"text\") {\r\n        values.push({ type: \"text\", value: \"\" });\r\n        input.onChange(JSON.stringify(values));\r\n        onClose();\r\n      } else {\r\n        setSubmitting(true);\r\n        saveFile(obj.value, \"q_img\")\r\n          .then(res => {\r\n            if (!res) return;\r\n            values.push({ type: \"image\", value: res.data.relative_path });\r\n            input.onChange(JSON.stringify(values));\r\n            onClose();\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(false);\r\n          });\r\n      }\r\n    };\r\n    return <>\r\n      <Form.Dropdown selection options={[\r\n        { key: \"text\", text: \"متنی\", value: \"text\" },\r\n        { key: \"image\", text: \"تصویری\", value: \"image\" },\r\n      ]}\r\n        value={obj.type}\r\n        onChange={(e, { value }) => setObj({ type: value, value: null })}\r\n      />\r\n      <div style={{ height: 8 }} />\r\n      {obj.type === \"image\"\r\n        ? <FilePicker input={{ onChange: file => setObj({ type: \"image\", value: file }) }} />\r\n        : null\r\n      }\r\n      <Button type='submit' color='green' icon labelPosition=\"left\"\r\n        disabled={obj.type === \"image\" && !obj.value}\r\n        onClick={onSubmit} loading={submitting}>\r\n        <Icon name='check' />\r\n        ذخیره\r\n      </Button>\r\n    </>\r\n  };\r\n\r\n  let result = [];\r\n  for (let i = 0; i < N; i++)\r\n    result.push(<ChoiceRow key={i} entity={values[i]} index={i} values={values} input={input} />);\r\n\r\n  return <>\r\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\r\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\r\n      <Modal trigger={\r\n        <Icon name=\"add\" circular inverted color=\"green\" size=\"small\" onClick={onOpen}\r\n          style={{ cursor: \"pointer\", float: \"left\" }} />\r\n      }\r\n        open={open} onClose={onClose}>\r\n        <Modal.Content>\r\n          <ChoiceModal />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Segment>\r\n    <Segment raised attached=\"bottom\">\r\n      {result}\r\n    </Segment>\r\n  </>;\r\n};\r\n\r\nconst ChoiceRow = ({ entity, index, values, input }) => <div style={{ margin: \"4px 0\" }}>\r\n  {entity.type === 'image'\r\n    ? <>\r\n      <Image src={`${config.server_url}storage/${entity.value}`}\r\n        style={{ maxWidth: \"90%\", display: \"inline-block\" }} />\r\n      <Icon name=\"times\" color=\"red\" circular inverted style={{ marginRight: 8 }}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          deleteFile(values[index]);\r\n          values.splice(index, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }} />\r\n    </>\r\n    : <Input fluid value={entity.value}\r\n      onChange={(e, { value }) => {\r\n        values[index].value = value;\r\n        input.onChange(JSON.stringify(values));\r\n      }}\r\n      action={{\r\n        icon: \"minus\", color: \"red\", onClick: (e) => {\r\n          e.preventDefault();\r\n          values.splice(index, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }\r\n      }}\r\n      style={{ marginTop: index > 0 ? 16 : 0 }} />\r\n  }\r\n</div>;\r\n\r\n\r\nfunction saveFile(file, path) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"path\", path);\r\n  return API.post(\"files\", formData);\r\n}\r\n\r\nfunction deleteFile(url) {\r\n  return API.delete(\"files\", { data: { path: url } });\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport {\r\n  resetEntity, fetchQuestion,\r\n  updateQuestion, newQuestion\r\n} from './questions.reducer';\r\nimport Question from './questions.model';\r\nimport { ChoicesField } from './questions.choices';\r\n\r\nimport {\r\n  InputField, SelectField, Timestamp,\r\n  MultiInputField, MultiFilePicker\r\n} from 'src/components/FormFields';\r\nimport EditLayout from 'src/components/EditLayout';\r\n\r\n\r\nfunction QuestionEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"سؤال\"\r\n    entityName=\"questions\"\r\n    NewFields={formProps => <>\r\n      <Field component={SelectField} options={Question.locale.options}\r\n        name=\"locale\" label={Question.locale.label} />\r\n      <Field component={InputField} name=\"title\" label={Question.title.label} />\r\n      <Field component={SelectField} options={Question.time_type.options}\r\n        name=\"time_type\" label={Question.time_type.label} />\r\n      <Field component={SelectField} options={Question.answer_type.options}\r\n        name=\"answer_type\" label={Question.answer_type.label} />\r\n      <Field component={Timestamp} name=\"start_time\" label={Question.start_time.label} />\r\n      <Field component={Timestamp} name=\"end_time\" label={Question.end_time.label} />\r\n      <Field component={InputField} name=\"score\" label={Question.score.label} />\r\n      <Field component={InputField} name=\"tries\" label={Question.tries.label} />\r\n\r\n      <Field component={MultiFilePicker} name=\"images\" label={Question.images.label} path=\"q_img\" />\r\n      <Field component={ChoicesField} name=\"choices\" label={Question.choices.label} />\r\n      <Field component={MultiInputField} name=\"letters\" label={Question.letters.label} />\r\n      <Field component={InputField} name=\"letters_num\" label={Question.letters_num.label} />\r\n      <Field component={MultiInputField} name=\"solutions\" label={Question.solutions.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Question.id.label} disabled />\r\n      <Field component={SelectField} options={Question.locale.options}\r\n        name=\"locale\" label={Question.locale.label} />\r\n      <Field component={InputField} name=\"title\" label={Question.title.label} />\r\n      <Field component={SelectField} options={Question.time_type.options}\r\n        name=\"time_type\" label={Question.time_type.label} />\r\n      <Field component={SelectField} options={Question.answer_type.options}\r\n        name=\"answer_type\" label={Question.answer_type.label} />\r\n      <Field component={Timestamp} name=\"start_time\" label={Question.start_time.label} />\r\n      <Field component={Timestamp} name=\"end_time\" label={Question.end_time.label} />\r\n      <Field component={InputField} name=\"score\" label={Question.score.label} />\r\n      <Field component={InputField} name=\"tries\" label={Question.tries.label} />\r\n\r\n      <Field component={MultiFilePicker} name=\"images\" label={Question.images.label} path=\"q_img\" />\r\n      <Field component={ChoicesField} name=\"choices\" label={Question.choices.label} />\r\n      <Field component={MultiInputField} name=\"letters\" label={Question.letters.label} />\r\n      <Field component={InputField} name=\"letters_num\" label={Question.letters_num.label} />\r\n      <Field component={MultiInputField} name=\"solutions\" label={Question.solutions.label} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.questions.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchQuestion(id)),\r\n    updateEntity: (id, entity) => dispatch(updateQuestion(id, entity)),\r\n    newEntity: entity => dispatch(newQuestion(entity)),\r\n  })\r\n)(QuestionEdit);\r\n",
        "import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport QuestionSelect from './questions.select';\nimport QuestionEdit from './questions.edit';\n\n\nexport default function Questions({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={QuestionSelect} />\n      <Route exact path={`${url}/new`} component={QuestionEdit} />\n      <Route exact path={`${url}/:id`} component={QuestionEdit} />\n    </Switch>\n  );\n}\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchAnswers, deleteAnswer } from './answers.reducer';\r\nimport Answer from './answers.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { InputField, SelectField, booleanOptions, EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction AnswerSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"تلاش‌ها\"\r\n    entityName=\"answers\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"questions\" formName=\"answers/search\"\r\n          name=\"question_id\" label={Answer.question_id.label} />\r\n        <Field component={EntityField} entityName=\"users\" formName=\"answers/search\"\r\n          name=\"user_id\" label={Answer.user_id.label} />\r\n      </Form.Group>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"text\" label={Answer.text.label} />\r\n        <Field component={SelectField} name=\"correct\" label={Answer.correct.label}\r\n          options={booleanOptions} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"question_id\", header: Answer.question_id.label },\r\n      { key: \"user_id\", header: Answer.user_id.label },\r\n      { key: \"text\", header: Answer.text.label },\r\n      { key: \"correct\", header: Answer.correct.label, render: \"boolean\" },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.answers.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchAnswers(searchParams)),\r\n  deleteAction: id => dispatch(deleteAnswer(id)),\r\n}))(AnswerSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchAnswer, updateAnswer, newAnswer } from './answers.reducer';\r\nimport Answer from './answers.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField, SelectField, booleanOptions } from 'src/components/FormFields';\r\n\r\n\r\nfunction AnswerEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"تلاش\"\r\n    entityName=\"answers\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"answers/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Answer.question_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"answers/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={Answer.user_id.label} />\r\n      <Field component={InputField} name=\"text\" label={Answer.text.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Answer.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"answers/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Answer.question_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"answers/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={Answer.user_id.label} />\r\n      <Field component={InputField} name=\"text\" label={Answer.text.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={SelectField} name=\"correct\" label={Answer.correct.label}\r\n        options={booleanOptions} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.answers.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchAnswer(id)),\r\n    updateEntity: (id, entity) => dispatch(updateAnswer(id, entity)),\r\n    newEntity: entity => dispatch(newAnswer(entity)),\r\n  })\r\n)(AnswerEdit);\r\n",
        "import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AnswerSelect from './answers.select';\nimport AnswerEdit from './answers.edit';\n\n\nexport default function Answers({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={AnswerSelect} />\n      <Route exact path={`${url}/new`} component={AnswerEdit} />\n      <Route exact path={`${url}/:id`} component={AnswerEdit} />\n    </Switch>\n  );\n}\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchHints, deleteHint } from './hints.reducer';\r\nimport Hint from './hints.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction HintSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"راهنمایی‌ها\"\r\n    entityName=\"hints\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"questions\" formName=\"hints/search\"\r\n          name=\"question_id\" label={Hint.question_id.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"question_id\", header: Hint.question_id.label },\r\n      { key: \"type\", header: Hint.type.label },\r\n      { key: \"value\", header: Hint.value.label },\r\n      { key: \"price\", header: Hint.price.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.hints.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchHints(searchParams)),\r\n  deleteAction: id => dispatch(deleteHint(id)),\r\n}))(HintSelect);\r\n",
        "import React, { useState } from 'react';\r\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react';\r\nimport { useSelector } from 'react-redux';\r\nimport { formValueSelector } from 'redux-form';\r\n\r\nimport { FilePicker, MultiInputField } from 'src/components/FormFields';\r\n\r\nimport { API } from 'src/redux/store_config';\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nexport const HintField = ({ input, meta, children, path, formProps, ...props }) => {\r\n  const type = useSelector(state => formValueSelector(formProps.form)(state, \"type\"));\r\n  switch (type) {\r\n    case \"image\":\r\n      return <ImageHint value={input.value} onChange={input.onChange} />;\r\n    case \"choice\":\r\n      return <MultiInputField name=\"choices\" label=\"اندیس گزینه‌های حذفی (از صفر)\" input={input} />;\r\n    case \"letter\":\r\n      return <MultiInputField name=\"letters\" label=\"اندیس حروف حذفی (از صفر)\" input={input} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction ImageHint({ value, onChange }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const onOpen = () => setOpen(true);\r\n  const onClose = () => setOpen(false);\r\n  const onSubmit = () => {\r\n    setSubmitting(true);\r\n    saveFile(file, \"q_img\")\r\n      .then(res => {\r\n        if (!res) return;\r\n        onChange(res.data.relative_path);\r\n        onClose();\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n  return <div style={{ marginBottom: 16 }}>\r\n    <Modal trigger={<Button onClick={e => { e.preventDefault(); onOpen(); }}>انتخاب تصویر</Button>}\r\n      open={open} onClose={onClose}>\r\n      <Modal.Content>\r\n        <FilePicker input={{ onChange: setFile }} />\r\n        <Button type='submit' color='green' icon labelPosition=\"left\"\r\n          disabled={!file} onClick={onSubmit} loading={submitting}>\r\n          <Icon name='check' />\r\n          ذخیره\r\n      </Button>\r\n      </Modal.Content>\r\n    </Modal>\r\n    {!!value ? <Image src={`${config.server_url}storage/${value}`} /> : null}\r\n  </div>;\r\n}\r\n\r\nfunction saveFile(file, path) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"path\", path);\r\n  return API.post(\"files\", formData);\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchHint, updateHint, newHint } from './hints.reducer';\r\nimport Hint from './hints.model';\r\nimport { HintField } from './hints.fields';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField, SelectField } from 'src/components/FormFields';\r\n\r\n\r\nfunction HintEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"راهنمایی\"\r\n    entityName=\"hints\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"hints/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Hint.question_id.label} />\r\n      <Field component={InputField} name=\"price\" label={Hint.price.label} />\r\n      <Field component={SelectField} options={Hint.type.options}\r\n        id=\"type\" name=\"type\" label={Hint.type.label} />\r\n      <Field component={HintField} name=\"value\" label={Hint.value.label} formProps={formProps} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Hint.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"hints/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Hint.question_id.label} />\r\n      <Field component={InputField} name=\"price\" label={Hint.price.label} />\r\n      <Field component={SelectField} options={Hint.type.options}\r\n        name=\"type\" label={Hint.type.label} />\r\n      <Field component={HintField} name=\"value\" label={Hint.value.label} formProps={formProps} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.hints.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchHint(id)),\r\n    updateEntity: (id, entity) => dispatch(updateHint(id, entity)),\r\n    newEntity: entity => dispatch(newHint(entity)),\r\n  })\r\n)(HintEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport HintSelect from './hints.select';\r\nimport HintEdit from './hints.edit';\r\n\r\n\r\nexport default function Hints({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={HintSelect} />\r\n      <Route exact path={`${url}/new`} component={HintEdit} />\r\n      <Route exact path={`${url}/:id`} component={HintEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchUserHints, deleteUserHint } from './user_hints.reducer';\r\nimport UserHint from './user_hints.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserHintSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"راهنمایی‌های کاربران\"\r\n    entityName=\"user_hints\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/search\"\r\n          name=\"hint_id\" label={UserHint.hint_id.label} />\r\n        <Field component={EntityField} entityName=\"users\" formName=\"user_hints/search\"\r\n          name=\"user_id\" label={UserHint.user_id.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"hint_id\", header: UserHint.hint_id.label },\r\n      { key: \"user_id\", header: UserHint.user_id.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.user_hints.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchUserHints(searchParams)),\r\n  deleteAction: id => dispatch(deleteUserHint(id)),\r\n}))(UserHintSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchUserHint, updateUserHint, newUserHint } from './user_hints.reducer';\r\nimport UserHint from './user_hints.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserHintEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"راهنمایی کاربر\"\r\n    entityName=\"user_hints\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"hint_id\" label={UserHint.hint_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_hints/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserHint.user_id.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={UserHint.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"hint_id\" label={UserHint.hint_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_hints/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserHint.user_id.label} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.user_hints.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchUserHint(id)),\r\n    updateEntity: (id, entity) => dispatch(updateUserHint(id, entity)),\r\n    newEntity: entity => dispatch(newUserHint(entity)),\r\n  })\r\n)(UserHintEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport UserHintSelect from './user_hints.select';\r\nimport UserHintEdit from './user_hints.edit';\r\n\r\n\r\nexport default function UserHints({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={UserHintSelect} />\r\n      <Route exact path={`${url}/new`} component={UserHintEdit} />\r\n      <Route exact path={`${url}/:id`} component={UserHintEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "\r\nconst Achievement = {\r\n  id: { label: \"شناسه\" },\r\n  code: { label: \"کد\" },\r\n};\r\n\r\nexport default Achievement;\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchAchievements, deleteAchievement } from './achievements.reducer';\r\nimport Achievement from './achievements.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { InputField } from 'src/components/FormFields';\r\n\r\n\r\nfunction AchievementSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"مدال‌ها\"\r\n    entityName=\"achievements\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"code\" label={Achievement.code.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"code\", header: Achievement.code.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.achievements.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchAchievements(searchParams)),\r\n  deleteAction: id => dispatch(deleteAchievement(id)),\r\n}))(AchievementSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchAchievement, updateAchievement, newAchievement } from './achievements.reducer';\r\nimport Achievement from './achievements.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField } from 'src/components/FormFields';\r\n\r\n\r\nfunction AchievementEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"مدال\"\r\n    entityName=\"achievements\"\r\n    NewFields={formProps => <>\r\n      <Field component={InputField} name=\"code\" label={Achievement.code.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Achievement.id.label} disabled />\r\n      <Field component={InputField} name=\"code\" label={Achievement.code.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.achievements.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchAchievement(id)),\r\n    updateEntity: (id, entity) => dispatch(updateAchievement(id, entity)),\r\n    newEntity: entity => dispatch(newAchievement(entity)),\r\n  })\r\n)(AchievementEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport AchievementSelect from './achievements.select';\r\nimport AchievementEdit from './achievements.edit';\r\n\r\n\r\nexport default function Achievements({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={AchievementSelect} />\r\n      <Route exact path={`${url}/new`} component={AchievementEdit} />\r\n      <Route exact path={`${url}/:id`} component={AchievementEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchUserAchievements, deleteUserAchievement } from './user_achievements.reducer';\r\nimport UserAchievement from './user_achievements.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserAchievementSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"مدال‌های کاربران\"\r\n    entityName=\"user_achievements\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/search\"\r\n          name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\r\n        <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/search\"\r\n          name=\"user_id\" label={UserAchievement.user_id.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"achievement_id\", header: UserAchievement.achievement_id.label },\r\n      { key: \"user_id\", header: UserAchievement.user_id.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.user_achievements.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchUserAchievements(searchParams)),\r\n  deleteAction: id => dispatch(deleteUserAchievement(id)),\r\n}))(UserAchievementSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchUserAchievement, updateUserAchievement, newUserAchievement } from './user_achievements.reducer';\r\nimport UserAchievement from './user_achievements.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserAchievementEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"مدال کاربر\"\r\n    entityName=\"user_achievements\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserAchievement.user_id.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={UserAchievement.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserAchievement.user_id.label} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.user_achievements.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchUserAchievement(id)),\r\n    updateEntity: (id, entity) => dispatch(updateUserAchievement(id, entity)),\r\n    newEntity: entity => dispatch(newUserAchievement(entity)),\r\n  })\r\n)(UserAchievementEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport UserAchievementSelect from './user_achievements.select';\r\nimport UserAchievementEdit from './user_achievements.edit';\r\n\r\n\r\nexport default function UserAchievements({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={UserAchievementSelect} />\r\n      <Route exact path={`${url}/new`} component={UserAchievementEdit} />\r\n      <Route exact path={`${url}/:id`} component={UserAchievementEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { Form, Button, Icon } from 'semantic-ui-react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { CHECKS, InputField } from 'src/components/FormFields';\r\nimport { changePassword } from 'src/modules/auth/auth.reducer';\r\n\r\n\r\nconst PasswordChangeForm = reduxForm({ form: 'settings/password_change' })(\r\n  (props) => {\r\n    const { handleSubmit, submitting, pristine, reset } = props;\r\n    return <Form onSubmit={handleSubmit}>\r\n\r\n      <Field component={InputField} type=\"password\" required validate={CHECKS.REQUIRED}\r\n        name=\"old_password\" label=\"رمز عبور قدیمی\" />\r\n      <Field component={InputField} type=\"password\" required validate={CHECKS.REQUIRED}\r\n        name=\"new_password\" label=\"رمز عبور جدید\" />\r\n      <Field component={InputField} type=\"password\" required validate={CHECKS.REQUIRED}\r\n        name=\"new_password_confirm\" label=\"تکرار رمز عبور جدید\" />\r\n\r\n      <Button type='submit' color='green' icon labelPosition=\"left\"\r\n        disabled={pristine} loading={submitting}>\r\n        <Icon name='check' />\r\n        ذخیره\r\n      </Button>\r\n      <Button type='button' secondary icon labelPosition=\"left\"\r\n        disabled={pristine || submitting} onClick={reset}>\r\n        <Icon name='refresh' />\r\n        لغو تغییرات\r\n      </Button>\r\n    </Form>;\r\n  });\r\n\r\nconst PasswordChange = () => {\r\n  const dispatch = useDispatch();\r\n  const onSubmit = values => {\r\n    return dispatch(changePassword(values));\r\n  };\r\n  return <PasswordChangeForm onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default PasswordChange;\r\n",
        "import React from 'react';\r\n\r\n\r\nexport default function DeveloperContact() {\r\n  return <>\r\n    <p>توسعه‌دهنده: مهران میرخان</p>\r\n    <p>تلفن همراه: ۰۹۱۲۸۴۷۰۴۲۳</p>\r\n    <p>ایمیل: mehranmirkhan@gmail.com</p>\r\n    <p>تلگرام:\r\n      <a href=\"https://t.me/m3hr4n_91\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        https://t.me/m3hr4n_91\r\n      </a>\r\n    </p>\r\n  </>;\r\n}\r\n",
        "import React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\n\r\nimport Layout from 'src/components/Layout';\r\n\r\nimport PasswordChange from './PasswordChange';\r\nimport DeveloperContact from './DeveloperContact';\r\n\r\n\r\nexport default function Settings() {\r\n  const panes = [\r\n    { menuItem: 'تغییر رمز عبور', render: () => <Tab.Pane><PasswordChange /></Tab.Pane> },\r\n    { menuItem: 'ارتباط با توسعه‌دهنده', render: () => <Tab.Pane><DeveloperContact /></Tab.Pane> },\r\n  ]\r\n  return (\r\n    <Layout>\r\n      <Tab menu={{ fluid: true, vertical: true, tabular: true }} panes={panes} />\r\n    </Layout>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nimport Layout from 'src/components/Layout';\r\n\r\n\r\nfunction NotFound() {\r\n  return <Layout>\r\n    <Segment raised textAlign=\"center\" color=\"blue\" inverted>\r\n      <h1>صفحه‌ی مورد نظر یافت نشد</h1>\r\n    </Segment>\r\n  </Layout>;\r\n}\r\n\r\nexport default NotFound;\r\n",
        "import React from 'react';\r\nimport {\r\n  BrowserRouter, Switch,\r\n  Route, Redirect\r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchMe, logout, isAuthenticated, getMe } from 'src/modules/auth/auth.reducer';\r\n\r\nimport Auth from 'src/modules/auth';\r\nimport Report from 'src/modules/report';\r\nimport Users from 'src/modules/users';\r\nimport Questions from 'src/modules/questions';\r\nimport Answers from 'src/modules/answers';\r\nimport Hints from 'src/modules/hints';\r\nimport UserHints from 'src/modules/user_hints';\r\nimport Achievements from 'src/modules/achievements';\r\nimport UserAchievements from 'src/modules/user_achievements';\r\nimport Settings from 'src/modules/settings';\r\nimport NotFound from 'src/modules/NotFound';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n});\r\n\r\nconst AuthRoute = connect(mapStateToProps)(\r\n  ({ isAuthenticated, ...otherProps }) =>\r\n    isAuthenticated\r\n      ? <Route {...otherProps} />\r\n      : <Redirect to=\"/\" />\r\n);\r\n\r\nconst UnAuthRoute = connect(mapStateToProps)(\r\n  ({ isAuthenticated, ...otherProps }) => {\r\n    return isAuthenticated\r\n      ? <Redirect to=\"/report\" />\r\n      : <Route {...otherProps} />\r\n  }\r\n);\r\n\r\nfunction Routes({ fetchMe, logout, isAuthenticated, me }) {\r\n  if (isAuthenticated) {\r\n    if (!me || Object.keys(me).length === 0) {\r\n      fetchMe();\r\n      return <div />;\r\n    } else if (me.role !== 'admin') {\r\n      logout();\r\n      alert(\"فقط مدیر سامانه اجازه دسترسی دارد\");\r\n    }\r\n  }\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <UnAuthRoute exact path=\"/\" component={Auth} />\r\n        <AuthRoute exact path=\"/report\" component={Report} />\r\n        <AuthRoute path=\"/users\" component={Users} />\r\n        <AuthRoute path=\"/questions\" component={Questions} />\r\n        <AuthRoute path=\"/answers\" component={Answers} />\r\n        <AuthRoute path=\"/hints\" component={Hints} />\r\n        <AuthRoute path=\"/user_hints\" component={UserHints} />\r\n        <AuthRoute path=\"/achievements\" component={Achievements} />\r\n        <AuthRoute path=\"/user_achievements\" component={UserAchievements} />\r\n        <AuthRoute exact path=\"/settings\" component={Settings} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default connect(state => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n  me: getMe(state),\r\n}), dispatch => ({\r\n  fetchMe: () => dispatch(fetchMe()),\r\n  logout: () => dispatch(logout()),\r\n}))(Routes);\r\n",
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n",
        "import React from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\r\n\r\nimport { store, persistor } from 'src/redux/store_config';\r\nimport ErrorHandler, { AlertTemplate } from 'src/components/ErrorHandler';\r\nimport Routes from 'src/Routes';\r\n\r\nimport 'src/font/fonts.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './App.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <AlertProvider template={AlertTemplate}\r\n          timeout={5000} position={positions.TOP_CENTER} transition={transitions.SCALE}>\r\n          <ErrorHandler>\r\n            <Routes />\r\n          </ErrorHandler>\r\n        </AlertProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n"
    ],
    "sourceRoot": ""
}
