{
    "version": 3,
    "sources": [
        "redux/flow.reducer.js",
        "modules/auth/auth.reducer.js",
        "modules/report/report.reducer.js",
        "modules/users/users.reducer.js",
        "modules/questions/questions.model.js",
        "modules/questions/questions.reducer.js",
        "modules/answers/answers.model.js",
        "modules/answers/answers.reducer.js",
        "modules/hints/hints.model.js",
        "modules/hints/hints.reducer.js",
        "modules/user_hints/user_hints.model.js",
        "modules/user_hints/user_hints.reducer.js",
        "modules/achievements/achievements.reducer.js",
        "modules/user_achievements/user_achievements.model.js",
        "modules/user_achievements/user_achievements.reducer.js",
        "redux/reducer.js",
        "redux/store_config.js",
        "components/ErrorHandler.jsx",
        "components/Common.jsx",
        "components/FormFields.jsx",
        "modules/auth/index.jsx",
        "components/Layout.jsx",
        "modules/report/index.jsx",
        "modules/users/users.model.js",
        "components/Table.jsx",
        "components/SelectLayout.jsx",
        "modules/users/users.select.jsx",
        "components/EditLayout.jsx",
        "modules/users/users.edit.jsx",
        "modules/users/index.jsx",
        "modules/questions/questions.select.jsx",
        "modules/questions/questions.choices.jsx",
        "modules/questions/questions.edit.jsx",
        "modules/questions/index.jsx",
        "modules/answers/answers.select.jsx",
        "modules/answers/answers.edit.jsx",
        "modules/answers/index.jsx",
        "modules/hints/hints.select.jsx",
        "modules/hints/hints.fields.jsx",
        "modules/hints/hints.edit.jsx",
        "modules/hints/index.jsx",
        "modules/user_hints/user_hints.select.jsx",
        "modules/user_hints/user_hints.edit.jsx",
        "modules/user_hints/index.jsx",
        "modules/achievements/achievements.model.js",
        "modules/achievements/achievements.select.jsx",
        "modules/achievements/achievements.edit.jsx",
        "modules/achievements/index.jsx",
        "modules/user_achievements/user_achievements.select.jsx",
        "modules/user_achievements/user_achievements.edit.jsx",
        "modules/user_achievements/index.jsx",
        "modules/NotFound.jsx",
        "Routes.jsx",
        "index.js",
        "App.jsx"
    ],
    "names": [
        "FLOW_ACTIONS",
        "SELECTION_STATES",
        "IDLE",
        "SELECTING",
        "SELECTED",
        "initialState",
        "selectionState",
        "selectionCode",
        "undefined",
        "selectionCarry",
        "selectedEntity",
        "transit",
        "code",
        "carry",
        "type",
        "payload",
        "selectionReceived",
        "AUTH_ACTIONS",
        "token",
        "me",
        "logout",
        "dispatch",
        "getMe",
        "state",
        "auth",
        "isAuthenticated",
        "access_token",
        "REPORT_ACTIONS",
        "USERS_ACTIONS",
        "entityList",
        "entity",
        "fetchUsers",
        "searchParams",
        "_",
        "API",
        "console",
        "log",
        "params",
        "filter",
        "Object",
        "entries",
        "length",
        "keys",
        "map",
        "k",
        "join",
        "page",
        "page_size",
        "sortCol",
        "sort",
        "sortDir",
        "get",
        "then",
        "resp",
        "data",
        "fetchUser",
        "id",
        "Question",
        "label",
        "locale",
        "options",
        "key",
        "text",
        "value",
        "title",
        "time_type",
        "answer_type",
        "start_time",
        "end_time",
        "score",
        "tries",
        "images",
        "choices",
        "letters",
        "solutions",
        "print",
        "q",
        "find",
        "x",
        "moment",
        "format",
        "QUESTIONS_ACTIONS",
        "fetchQuestions",
        "fetchQuestion",
        "Answer",
        "question_id",
        "user_id",
        "correct",
        "a",
        "to",
        "ANSWERS_ACTIONS",
        "fetchAnswers",
        "fetchAnswer",
        "Hint",
        "price",
        "HINTS_ACTIONS",
        "fetchHints",
        "fetchHint",
        "UserHint",
        "hint_id",
        "USER_HINTS_ACTIONS",
        "fetchUserHints",
        "fetchUserHint",
        "ACHIEVEMENTS_ACTIONS",
        "fetchAchievements",
        "fetchAchievement",
        "UserAchievement",
        "achievement_id",
        "USER_ACHIEVEMENTS_ACTIONS",
        "fetchUserAchievements",
        "fetchUserAchievement",
        "combineReducers",
        "form",
        "formReducer",
        "flow",
        "action",
        "report",
        "users",
        "questions",
        "answers",
        "hints",
        "user_hints",
        "achievements",
        "user_achievements",
        "persistConfig",
        "config",
        "persist_key",
        "storage",
        "whitelist",
        "persistedReducer",
        "persistReducer",
        "reducer",
        "Axios",
        "create",
        "baseURL",
        "server_url",
        "timeout",
        "request_timeout",
        "headers",
        "store",
        "createStore",
        "applyMiddleware",
        "thunk",
        "withExtraArgument",
        "persistor",
        "persistStore",
        "interceptors",
        "request",
        "use",
        "Authorization",
        "getState",
        "getAccessToken",
        "AlertTemplate",
        "style",
        "message",
        "close",
        "Message",
        "onDismiss",
        "content",
        "paddingLeft",
        "ErrorHandler",
        "error",
        "this",
        "requestInterceptor",
        "req",
        "setState",
        "responseInterceptor",
        "response",
        "res",
        "props",
        "alert",
        "JSON",
        "stringify",
        "eject",
        "errorInfo",
        "children",
        "React",
        "Component",
        "withAlert",
        "Center",
        "minHeight",
        "display",
        "alignItems",
        "justifyContent",
        "BackButton",
        "history",
        "useDispatch",
        "textAlign",
        "Button",
        "icon",
        "labelPosition",
        "onClick",
        "goBack",
        "Icon",
        "name",
        "CHECKS",
        "REQUIRED",
        "v",
        "MAX_LEN",
        "maxLen",
        "MIN_LEN",
        "minLen",
        "MAX_VAL",
        "maxVal",
        "MIN_VAL",
        "minVal",
        "InputField",
        "input",
        "meta",
        "Form",
        "Input",
        "onChange",
        "e",
        "touched",
        "invalid",
        "MultiInputField",
        "values",
        "parse",
        "N",
        "result",
        "i",
        "push",
        "color",
        "preventDefault",
        "splice",
        "fluid",
        "marginTop",
        "Segment",
        "raised",
        "attached",
        "inverted",
        "circular",
        "size",
        "cursor",
        "float",
        "SelectField",
        "Dropdown",
        "selection",
        "booleanOptions",
        "EntityField",
        "entityName",
        "formName",
        "useSelector",
        "getFormValues",
        "actionButton",
        "as",
        "Link",
        "initialize",
        "Timestamp",
        "date",
        "toDate",
        "Label",
        "selected",
        "d",
        "showTimeSelect",
        "dateFormat",
        "timeFormat",
        "timeIntervals",
        "height",
        "FilePicker",
        "inputEl",
        "useRef",
        "useState",
        "setText",
        "image",
        "setImage",
        "current",
        "click",
        "ref",
        "accept",
        "hidden",
        "files",
        "target",
        "reader",
        "FileReader",
        "onload",
        "ev",
        "readAsDataURL",
        "Image",
        "src",
        "marginBottom",
        "MultiFilePicker",
        "path",
        "file",
        "setFile",
        "open",
        "setOpen",
        "submitting",
        "setSubmitting",
        "maxWidth",
        "marginRight",
        "url",
        "delete",
        "Modal",
        "trigger",
        "onClose",
        "Header",
        "Content",
        "disabled",
        "loading",
        "formData",
        "FormData",
        "append",
        "post",
        "saveFile",
        "relative_path",
        "finally",
        "checkMinLen6",
        "LoginForm",
        "reduxForm",
        "handleSubmit",
        "pristine",
        "onSubmit",
        "Field",
        "component",
        "autoFocus",
        "required",
        "validate",
        "primary",
        "Auth",
        "login",
        "username",
        "password",
        "backgroundColor",
        "width",
        "connect",
        "Navbar",
        "withRouter",
        "location",
        "route",
        "pathname",
        "split",
        "Menu",
        "Item",
        "active",
        "link",
        "item",
        "indexOf",
        "position",
        "Layout",
        "Container",
        "margin",
        "Report",
        "fetchReport",
        "padded",
        "server",
        "Grid",
        "columns",
        "Column",
        "Date",
        "timestamp",
        "toUTCString",
        "Statistic",
        "Value",
        "count",
        "User",
        "phone",
        "email",
        "role",
        "is_active",
        "passwordConfirm",
        "Row",
        "schema",
        "index",
        "c",
        "col",
        "render",
        "trueIcon",
        "falseIcon",
        "cells",
        "handleSort",
        "sorted",
        "sortable",
        "header",
        "Pagination",
        "colSpan",
        "pagination",
        "current_page",
        "last_page",
        "per_page",
        "setPage",
        "setPageSize",
        "pages",
        "Table",
        "HeaderCell",
        "direction",
        "marginLeft",
        "minWidth",
        "floated",
        "MyTable",
        "onSort",
        "celled",
        "headerRow",
        "renderBodyRow",
        "footerRow",
        "tableData",
        "SearchResult",
        "tableSchema",
        "deleteAction",
        "selectButton",
        "setSelected",
        "editButton",
        "actions",
        "negative",
        "success",
        "deleteButton",
        "SelectLayout",
        "SF",
        "qs",
        "search",
        "fetchMethod",
        "Fields",
        "SearchFields",
        "reset",
        "secondary",
        "initForms",
        "submit",
        "deleteUser",
        "formProps",
        "Group",
        "widths",
        "EditForm",
        "isNew",
        "enableReinitialize",
        "EditLayout",
        "NF",
        "EF",
        "fetchEntity",
        "updateEntity",
        "newEntity",
        "match",
        "resetEntity",
        "NewFields",
        "EditFields",
        "initialValues",
        "put",
        "updateUser",
        "newUser",
        "Users",
        "exact",
        "UserSelect",
        "UserEdit",
        "deleteQuestion",
        "ChoicesField",
        "obj",
        "setObj",
        "ChoiceRow",
        "updateQuestion",
        "newQuestion",
        "Questions",
        "QuestionSelect",
        "QuestionEdit",
        "deleteAnswer",
        "updateAnswer",
        "newAnswer",
        "Answers",
        "AnswerSelect",
        "AnswerEdit",
        "deleteHint",
        "HintField",
        "formValueSelector",
        "ImageHint",
        "updateHint",
        "newHint",
        "Hints",
        "HintSelect",
        "HintEdit",
        "deleteUserHint",
        "updateUserHint",
        "newUserHint",
        "UserHints",
        "UserHintSelect",
        "UserHintEdit",
        "Achievement",
        "deleteAchievement",
        "updateAchievement",
        "newAchievement",
        "Achievements",
        "AchievementSelect",
        "AchievementEdit",
        "deleteUserAchievement",
        "updateUserAchievement",
        "newUserAchievement",
        "UserAchievements",
        "UserAchievementSelect",
        "UserAchievementEdit",
        "NotFound",
        "mapStateToProps",
        "AuthRoute",
        "otherProps",
        "UnAuthRoute",
        "fetchMe",
        "ReactDOM",
        "template",
        "positions",
        "TOP_CENTER",
        "transition",
        "transitions",
        "SCALE",
        "document",
        "getElementById"
    ],
    "mappings": "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",
    "file": "static/js/main.33a55e09.chunk.js",
    "sourcesContent": [
        "\r\nexport const FLOW_ACTIONS = {\r\n  TRANSITION: \"flow/TRANSITION\",\r\n  SET_SELECTED: \"flow/SET_SELECTED\",\r\n  SELECTION_RECEIVED: \"flow/SELECTION_RECEIVED\",\r\n  RESET: \"flow/RESET\",\r\n};\r\n\r\nexport const SELECTION_STATES = {\r\n  IDLE: \"IDLE\",\r\n  SELECTING: \"SELECTING\",\r\n  SELECTED: \"SELECTED\",\r\n};\r\n\r\nconst initialState = {\r\n  selectionState: SELECTION_STATES.IDLE,\r\n  selectionCode: undefined,\r\n  selectionCarry: undefined,\r\n  selectedEntity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FLOW_ACTIONS.TRANSITION:\r\n      return {\r\n        ...state,\r\n        selectionState: SELECTION_STATES.SELECTING,\r\n        selectionCode: action.payload.code,\r\n        selectionCarry: action.payload.carry,\r\n        selectedEntity: undefined,\r\n      };\r\n    case FLOW_ACTIONS.SET_SELECTED:\r\n      return {\r\n        ...state,\r\n        selectionState: SELECTION_STATES.SELECTED,\r\n        selectedEntity: action.payload.entity,\r\n      };\r\n    case FLOW_ACTIONS.SELECTION_RECEIVED:\r\n      return {\r\n        ...state,\r\n        selectionState: SELECTION_STATES.IDLE,\r\n      };\r\n    case FLOW_ACTIONS.RESET:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const transit = (code, carry) => ({\r\n  type: FLOW_ACTIONS.TRANSITION,\r\n  payload: { code, carry },\r\n});\r\n\r\nexport const setSelected = entity => ({\r\n  type: FLOW_ACTIONS.SET_SELECTED,\r\n  payload: { entity },\r\n});\r\n\r\nexport const selectionReceived = () => ({\r\n  type: FLOW_ACTIONS.SELECTION_RECEIVED,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: FLOW_ACTIONS.RESET,\r\n});\r\n",
        "export const AUTH_ACTIONS = {\n  LOGIN: 'auth/LOGIN',\n  ME: 'auth/ME',\n  RESET: 'auth/RESET',\n};\n\nconst initialState = {\n  token: {},\n  me: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    case AUTH_ACTIONS.ME:\n      return {\n        ...state,\n        me: action.payload,\n      };\n    case AUTH_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const login = (username, password) => (dispatch, _, API) => {\n  return API.post('/login', { username, password })\n    .then(resp => dispatch({\n      type: AUTH_ACTIONS.LOGIN,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: AUTH_ACTIONS.RESET,\n  });\n};\n\nexport const fetchMe = () => (dispatch, _, API) => {\n  return API.get('/v1/me')\n    .then(resp => dispatch({\n      type: AUTH_ACTIONS.ME,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n\n// --------- STATES ---------\n\nexport const getAccessToken = state => !!state.auth.token && state.auth.token.access_token;\nexport const getMe = state => state.auth.me;\nexport const isAuthenticated = state => !!state.auth.token && !!state.auth.token.access_token;\n",
        "export const REPORT_ACTIONS = {\n  SET: 'report/SET',\n  RESET: 'report/RESET',\n};\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case REPORT_ACTIONS.SET:\n      return {\n        ...initialState,\n        ...action.payload,\n      };\n    case REPORT_ACTIONS.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// --------- ACTIONS ---------\n\nexport const reset = () => ({\n  type: REPORT_ACTIONS.RESET,\n});\n\nexport const fetchReport = () => (dispatch, _, API) => {\n  console.log(\"Fetching report\");\n  return API.get(`/admin/v1/report`)\n    .then(resp => dispatch({\n      type: REPORT_ACTIONS.SET,\n      payload: !!resp ? resp.data : undefined,\n    }));\n};\n",
        "export const USERS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'users/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'users/SET_ENTITY',\r\n  RESET: 'users/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_ACTIONS.SET_ENTITY_LIST:\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case USERS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case USERS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: USERS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: USERS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: USERS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchUsers = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all users\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  if (searchParams && searchParams.sortCol)\r\n    params.sort = (searchParams.sortDir === \"asc\" ? \"\" : \"-\") + searchParams.sortCol;\r\n  return API.get('/admin/v1/users', { params })\r\n    .then(resp => dispatch({\r\n      type: USERS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchUser = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching user:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/users/${id}`)\r\n    .then(resp => dispatch({\r\n      type: USERS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newUser = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating user\");\r\n  if (!entity) return;\r\n  return API.post(`/register`, entity);\r\n};\r\n\r\nexport const updateUser = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating user:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/users/${id}`, entity)\r\n    .then(resp => dispatch(fetchUser(id)));\r\n};\r\n\r\nexport const deleteUser = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting user:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/users/${id}`)\r\n    .then(resp => dispatch(fetchUsers()));\r\n};\r\n",
        "import moment from 'moment-jalaali';\r\n\r\nconst Question = {\r\n  id: { label: \"شناسه\" },\r\n  locale: {\r\n    label: \"زبان\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"en\", text: \"انگلیسی\", value: \"en\" },\r\n      { key: \"fa\", text: \"فارسی\", value: \"fa\" },\r\n    ]\r\n  },\r\n  title: { label: \"عنوان\" },\r\n  time_type: {\r\n    label: \"نوع زمان\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"daily\", text: \"روزانه\", value: \"daily\" },\r\n      { key: \"weekly\", text: \"هفتگی\", value: \"weekly\" },\r\n    ]\r\n  },\r\n  answer_type: {\r\n    label: \"نوع پاسخ\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"text\", text: \"متنی\", value: \"text\" },\r\n      { key: \"choice\", text: \"گزینه‌ای\", value: \"choice\" },\r\n      { key: \"letter\", text: \"حروفی\", value: \"letter\" },\r\n    ]\r\n  },\r\n  start_time: { label: \"تاریخ شروع\" },\r\n  end_time: { label: \"تاریخ پایان\" },\r\n  score: { label: \"امتیاز\" },\r\n  tries: { label: \"تعداد تلاش\" },\r\n  images: { label: \"تصاویر\" },\r\n  choices: { label: \"گزینه‌ها\" },\r\n  letters: { label: \"حروف\" },\r\n  solutions: { label: \"جواب‌ها\" },\r\n};\r\n\r\nexport default Question;\r\n\r\nexport const print = q => {\r\n  q.time_type = Question.time_type.options.find(x => x.value === q.time_type);\r\n  if (!!q.time_type) q.time_type = q.time_type.text;\r\n  q.answer_type = Question.answer_type.options.find(x => x.value === q.answer_type);\r\n  if (!!q.answer_type) q.answer_type = q.answer_type.text;\r\n  if (q.start_time) q.start_time = moment(q.start_time, 'YYYY-MM-DD HH:mm:ss').format('jYYYY/jMM/jDD');\r\n  if (q.end_time) q.end_time = moment(q.end_time, 'YYYY-MM-DD HH:mm:ss').format('jYYYY/jMM/jDD');\r\n  return q;\r\n}\r\n",
        "import { print } from \"./questions.model\";\r\n\r\nexport const QUESTIONS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'questions/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'questions/SET_ENTITY',\r\n  RESET: 'questions/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case QUESTIONS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n      action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case QUESTIONS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case QUESTIONS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: QUESTIONS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: QUESTIONS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: QUESTIONS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchQuestions = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all questions\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/questions', { params })\r\n    .then(resp => dispatch({\r\n      type: QUESTIONS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchQuestion = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching question:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/questions/${id}`)\r\n    .then(resp => dispatch({\r\n      type: QUESTIONS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newQuestion = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating question\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/questions`, entity);\r\n};\r\n\r\nexport const updateQuestion = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating question:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/questions/${id}`, entity)\r\n    .then(resp => dispatch(fetchQuestion(id)));\r\n};\r\n\r\nexport const deleteQuestion = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting question:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/questions/${id}`)\r\n    .then(resp => dispatch(fetchQuestions()));\r\n};\r\n",
        "import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Answer = {\n  id: { label: \"شناسه\" },\n  question_id: { label: \"شناسه سؤال\" },\n  user_id: { label: \"شناسه کاربر\" },\n  text: { label: \"متن\" },\n  correct: { label: \"درستی\" },\n};\n\nexport default Answer;\n\nexport const print = a => {\n  a.question_id = <Link to={`/questions/${a.question_id}`}>{a.question_id}</Link>\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>\n  return a;\n}\n",
        "import { print } from \"./answers.model\";\r\n\r\nexport const ANSWERS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'answers/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'answers/SET_ENTITY',\r\n  RESET: 'answers/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ANSWERS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case ANSWERS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case ANSWERS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: ANSWERS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: ANSWERS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ANSWERS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchAnswers = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all answers\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/answers', { params })\r\n    .then(resp => dispatch({\r\n      type: ANSWERS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchAnswer = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching answer:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/answers/${id}`)\r\n    .then(resp => dispatch({\r\n      type: ANSWERS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newAnswer = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating answer\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/answers`, entity);\r\n};\r\n\r\nexport const updateAnswer = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating answer:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/answers/${id}`, entity)\r\n    .then(resp => dispatch(fetchAnswer(id)));\r\n};\r\n\r\nexport const deleteAnswer = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting answer:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/answers/${id}`)\r\n    .then(resp => dispatch(fetchAnswers()));\r\n};\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Hint = {\r\n  id: { label: \"شناسه\" },\r\n  question_id: { label: \"شناسه سؤال\" },\r\n  type: {\r\n    label: \"نوع\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"image\", text: \"تصویر\", value: \"image\" },\r\n      { key: \"choice\", text: \"گزینه\", value: \"choice\" },\r\n      { key: \"letter\", text: \"حروف\", value: \"letter\" },\r\n      { key: \"try\", text: \"تلاش\", value: \"try\" },\r\n      // { key: \"time\", text: \"زمان\", value: \"time\" },\r\n    ]\r\n  },\r\n  value: { label: \"مقدار\" },\r\n  price: { label: \"قیمت\" },\r\n};\r\n\r\nexport default Hint;\r\n\r\nexport const print = a => {\r\n  a.question_id = <Link to={`/questions/${a.question_id}`}>{a.question_id}</Link>\r\n  return a;\r\n}\r\n",
        "import { print } from \"./hints.model\";\r\n\r\nexport const HINTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'hints/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'hints/SET_ENTITY',\r\n  RESET: 'hints/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HINTS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case HINTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case HINTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: HINTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: HINTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: HINTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchHints = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all hints\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/hints', { params })\r\n    .then(resp => dispatch({\r\n      type: HINTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchHint = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching hint:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/hints/${id}`)\r\n    .then(resp => dispatch({\r\n      type: HINTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newHint = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating hint\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/hints`, entity);\r\n};\r\n\r\nexport const updateHint = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating hint:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/hints/${id}`, entity)\r\n    .then(resp => dispatch(fetchHint(id)));\r\n};\r\n\r\nexport const deleteHint = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting hint:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/hints/${id}`)\r\n    .then(resp => dispatch(fetchHints()));\r\n};\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserHint = {\r\n  id: { label: \"شناسه\" },\r\n  hint_id: { label: \"شناسه راهنمایی\" },\r\n  user_id: { label: \"شناسه کاربر\" },\r\n};\r\n\r\nexport default UserHint;\r\n\r\nexport const print = a => {\r\n  a.hint_id = <Link to={`/hints/${a.hint_id}`}>{a.hint_id}</Link>;\r\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>;\r\n  return a;\r\n}\r\n",
        "import { print } from \"./user_hints.model\";\r\n\r\nexport const USER_HINTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'user_hints/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'user_hints/SET_ENTITY',\r\n  RESET: 'user_hints/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_HINTS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case USER_HINTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case USER_HINTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: USER_HINTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: USER_HINTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: USER_HINTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchUserHints = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all user_hints\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/user_hints', { params })\r\n    .then(resp => dispatch({\r\n      type: USER_HINTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchUserHint = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching user_hint:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/user_hints/${id}`)\r\n    .then(resp => dispatch({\r\n      type: USER_HINTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newUserHint = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating user_hint\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/user_hints`, entity);\r\n};\r\n\r\nexport const updateUserHint = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating user_hint:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/user_hints/${id}`, entity)\r\n    .then(resp => dispatch(fetchUserHint(id)));\r\n};\r\n\r\nexport const deleteUserHint = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting user_hint:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/user_hints/${id}`)\r\n    .then(resp => dispatch(fetchUserHints()));\r\n};\r\n",
        "\r\nexport const ACHIEVEMENTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'achievements/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'achievements/SET_ENTITY',\r\n  RESET: 'achievements/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST:\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case ACHIEVEMENTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case ACHIEVEMENTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACHIEVEMENTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchAchievements = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all achievements\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/achievements', { params })\r\n    .then(resp => dispatch({\r\n      type: ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching achievement:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/achievements/${id}`)\r\n    .then(resp => dispatch({\r\n      type: ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newAchievement = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating achievement\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/achievements`, entity);\r\n};\r\n\r\nexport const updateAchievement = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating achievement:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/achievements/${id}`, entity)\r\n    .then(resp => dispatch(fetchAchievement(id)));\r\n};\r\n\r\nexport const deleteAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting achievement:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/achievements/${id}`)\r\n    .then(resp => dispatch(fetchAchievements()));\r\n};\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserAchievement = {\r\n  id: { label: \"شناسه\" },\r\n  achievement_id: { label: \"شناسه مدال\" },\r\n  user_id: { label: \"شناسه کاربر\" },\r\n};\r\n\r\nexport default UserAchievement;\r\n\r\nexport const print = a => {\r\n  a.achievement_id = <Link to={`/achievements/${a.achievement_id}`}>{a.achievement_id}</Link>;\r\n  a.user_id = <Link to={`/users/${a.user_id}`}>{a.user_id}</Link>;\r\n  return a;\r\n}\r\n",
        "import { print } from \"./user_achievements.model\";\r\n\r\nexport const USER_ACHIEVEMENTS_ACTIONS = {\r\n  SET_ENTITY_LIST: 'user_achievements/SET_ENTITY_LIST',\r\n  SET_ENTITY: 'user_achievements/SET_ENTITY',\r\n  RESET: 'user_achievements/RESET',\r\n};\r\n\r\nconst initialState = {\r\n  entityList: [],\r\n  entity: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST:\r\n      if (!action.payload) return state;\r\n        action.payload.data = action.payload.data.map(print);\r\n      return {\r\n        ...state,\r\n        entityList: action.payload,\r\n      };\r\n    case USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY:\r\n      return {\r\n        ...state,\r\n        entity: action.payload,\r\n      };\r\n    case USER_ACHIEVEMENTS_ACTIONS.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// --------- ACTIONS ---------\r\n\r\nexport const resetEntityList = () => ({\r\n  type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n  payload: [],\r\n});\r\n\r\nexport const resetEntity = params => ({\r\n  type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n  payload: params,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: USER_ACHIEVEMENTS_ACTIONS.RESET,\r\n});\r\n\r\nexport const fetchUserAchievements = (searchParams) => (dispatch, _, API) => {\r\n  console.log(\"Fetching all user_achievements\");\r\n  let params = {};\r\n  if (searchParams && searchParams.filter && Object.entries(searchParams.filter).length !== 0)\r\n    params.filter = Object.keys(searchParams.filter).map(k => `${k}:${searchParams.filter[k]}`).join(',');\r\n  if (searchParams && searchParams.page)\r\n    params.page = searchParams.page;\r\n  if (searchParams && searchParams.page_size)\r\n    params.page_size = searchParams.page_size;\r\n  return API.get('/admin/v1/user_achievements', { params })\r\n    .then(resp => dispatch({\r\n      type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY_LIST,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const fetchUserAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Fetching user_achievement:\", id);\r\n  if (!id) return;\r\n  return API.get(`/admin/v1/user_achievements/${id}`)\r\n    .then(resp => dispatch({\r\n      type: USER_ACHIEVEMENTS_ACTIONS.SET_ENTITY,\r\n      payload: !!resp ? resp.data : undefined,\r\n    }));\r\n};\r\n\r\nexport const newUserAchievement = entity => (dispatch, _, API) => {\r\n  console.log(\"Creating user_achievement\");\r\n  if (!entity) return;\r\n  return API.post(`/admin/v1/user_achievements`, entity);\r\n};\r\n\r\nexport const updateUserAchievement = (id, entity) => (dispatch, _, API) => {\r\n  console.log(\"Updating user_achievement:\", id);\r\n  if (!id || !entity) return;\r\n  return API.put(`/admin/v1/user_achievements/${id}`, entity)\r\n    .then(resp => dispatch(fetchUserAchievement(id)));\r\n};\r\n\r\nexport const deleteUserAchievement = id => (dispatch, _, API) => {\r\n  console.log(\"Deleting user_achievement:\", id);\r\n  if (!id) return;\r\n  return API.delete(`/admin/v1/user_achievements/${id}`)\r\n    .then(resp => dispatch(fetchUserAchievements()));\r\n};\r\n",
        "import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport flowReducer from './flow.reducer';\r\nimport auth from 'src/modules/auth/auth.reducer';\r\nimport report from 'src/modules/report/report.reducer';\r\nimport users from 'src/modules/users/users.reducer';\r\nimport questions from 'src/modules/questions/questions.reducer';\r\nimport answers from 'src/modules/answers/answers.reducer';\r\nimport hints from 'src/modules/hints/hints.reducer';\r\nimport user_hints from 'src/modules/user_hints/user_hints.reducer';\r\nimport achievements from 'src/modules/achievements/achievements.reducer';\r\nimport user_achievements from 'src/modules/user_achievements/user_achievements.reducer';\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  flow: flowReducer,\r\n  auth,\r\n  report,\r\n  users,\r\n  questions,\r\n  answers,\r\n  hints,\r\n  user_hints,\r\n  achievements,\r\n  user_achievements,\r\n});\r\n",
        "import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport Axios from 'axios';\r\n\r\nimport reducer from 'src/redux/reducer';\r\nimport { isAuthenticated, getAccessToken } from 'src/modules/auth/auth.reducer';\r\n\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nconst persistConfig = {\r\n  key: config.persist_key,\r\n  storage,\r\n  whitelist: ['auth'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const API = Axios.create({\r\n  baseURL: config.server_url + \"api\",\r\n  timeout: config.request_timeout,\r\n  headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(thunk.withExtraArgument(API)));\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\nAPI.interceptors.request.use(\r\n  config => {\r\n    if (!config.headers.Authorization) {\r\n      const state = store.getState();\r\n      if (isAuthenticated(state))\r\n        config.headers.Authorization = `Bearer ${getAccessToken(state)}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n);\r\n",
        "import React from 'react';\nimport { withAlert } from 'react-alert';\nimport { API } from 'src/redux/store_config';\nimport { Message } from 'semantic-ui-react';\n\n\nexport const AlertTemplate = ({ style, options, message, close }) => {\n  const type = { [options.type]: true };\n  return <div style={style}>\n    <Message\n      onDismiss={close}\n      content={<p style={{ paddingLeft: 16 }}>{message}</p>}\n      {...type}\n    />\n  </div>\n};\n\n\nclass ErrorHandler extends React.Component {\n  state = {\n    error: null\n  };\n\n  componentDidMount() {\n    // Set axios interceptors\n    this.requestInterceptor = API.interceptors.request.use(req => {\n      this.setState({ error: null });\n      return req;\n    });\n\n    this.responseInterceptor = API.interceptors.response.use(\n      res => res,\n      error => {\n        console.log(error);\n        if (!!error.response && !!error.response.data && !!error.response.data.message) {\n          this.props.alert.error(JSON.stringify(error.response.data.message));\n        }\n        this.setState({ error });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    // Remove handlers, so Garbage Collector will get rid of if WrappedComponent will be removed\n    API.interceptors.request.eject(this.requestInterceptor);\n    API.interceptors.response.eject(this.responseInterceptor);\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n    if (!!error && !!error.message)\n      this.props.alert.error(JSON.stringify(error.message));\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withAlert()(ErrorHandler);\n",
        "import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\n\r\nimport { selectionReceived } from 'src/redux/flow.reducer';\r\n\r\n\r\nexport function Center({ children }) {\r\n  return <div style={{ minHeight: '100vh', display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n    {children}\r\n  </div>;\r\n}\r\n\r\nexport const BackButton = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  return <div style={{ textAlign: \"left\" }}>\r\n    <Button icon labelPosition='right' onClick={() => {\r\n      dispatch(selectionReceived());\r\n      history.goBack();\r\n    }}>\r\n      بازگشت\r\n      <Icon name=\"chevron left\" />\r\n    </Button>\r\n  </div>;\r\n};\r\n",
        "import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Button, Icon, Image, Segment, Input, Modal, Label } from 'semantic-ui-react';\r\n// import { DateTimePicker as JalaliDateTimePicker } from \"react-advance-jalaali-datepicker\";\r\nimport moment from 'moment-jalaali';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { getFormValues, initialize } from 'redux-form';\r\n\r\nimport { transit, selectionReceived, SELECTION_STATES } from 'src/redux/flow.reducer';\r\nimport { API } from 'src/redux/store_config';\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nexport const CHECKS = {\r\n  REQUIRED: v => (!v || v === '') ? 'این فیلد را پر کنید' : undefined,\r\n  MAX_LEN: maxLen => v => (!!v && v.length > maxLen) ? `باید کمتر از ${maxLen} کاراکتر باشد` : undefined,\r\n  MIN_LEN: minLen => v => (!!v && v.length < minLen) ? `باید بیشتر از ${minLen} کاراکتر باشد` : undefined,\r\n  MAX_VAL: maxVal => v => (!!v && v > maxVal) ? `باید کمتر از ${maxVal} باشد` : undefined,\r\n  MIN_VAL: minVal => v => (!!v && v < minVal) ? `باید بیشتر از ${minVal} باشد` : undefined,\r\n};\r\n\r\nexport const InputField = ({ input, meta, children, ...props }) =>\r\n  <Form.Input {...props}\r\n    {...input} children={children}\r\n    onChange={(e, { value }) => input.onChange(value)}\r\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n  />;\r\n\r\nexport const MultiInputField = ({ input, meta, children, ...props }) => {\r\n  const values = JSON.parse(!!input.value ? input.value : \"[]\");\r\n  const N = !!values ? values.length : 0;\r\n  let result = [];\r\n  for (let i = 0; i < N; i++) {\r\n    result.push(<Input key={i}\r\n      name={props.name + \" \" + i}\r\n      value={values[i]}\r\n      onChange={(e, { value }) => {\r\n        values[i] = value;\r\n        input.onChange(JSON.stringify(values));\r\n      }}\r\n      action={{\r\n        icon: \"minus\", color: \"red\", onClick: (e) => {\r\n          e.preventDefault();\r\n          values.splice(i, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }\r\n      }}\r\n      fluid\r\n      style={{ marginTop: i > 0 ? 16 : 0 }}\r\n    />);\r\n  }\r\n  return <>\r\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\r\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\r\n      <Icon name=\"add\" circular inverted color=\"green\" size=\"small\"\r\n        style={{ cursor: \"pointer\", float: \"left\" }}\r\n        onClick={() => {\r\n          values.push(\"\");\r\n          input.onChange(JSON.stringify(values));\r\n        }} />\r\n    </Segment>\r\n    <Segment raised attached=\"bottom\">\r\n      {result}\r\n    </Segment>\r\n  </>;\r\n}\r\n\r\nexport const SelectField = ({ input, meta, children, ...props }) =>\r\n  <Form.Dropdown {...props} selection\r\n    {...input} children={children}\r\n    onChange={(e, { value }) => input.onChange(value)}\r\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n  />;\r\n\r\nexport const booleanOptions = [\r\n  { key: 'null', text: '', value: undefined },\r\n  { key: 'true', text: 'True', value: 1 },\r\n  { key: 'false', text: 'False', value: 0 },\r\n];\r\n\r\nexport function EntityField({ input, meta, children, entityName, formName, ...props }) {\r\n  const flow = useSelector(state => state.flow);\r\n  const dispatch = useDispatch();\r\n  const values = useSelector(state => getFormValues(formName)(state));\r\n  const code = formName + \"/\" + entityName;\r\n  const actionButton = <Button icon=\"search\"\r\n    as={Link} to={`/${entityName}`}\r\n    onClick={() => dispatch(transit(code, values))} />;\r\n  if (flow.selectionState === SELECTION_STATES.SELECTED && flow.selectionCode === code) {\r\n    dispatch(initialize(formName, flow.selectionCarry));\r\n    input.onChange(flow.selectedEntity.id);\r\n    dispatch(selectionReceived());\r\n  }\r\n  return <Form.Input {...props}\r\n    {...input} children={children}\r\n    action={actionButton}\r\n    onChange={(e, { value }) => input.onChange(value)}\r\n    error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n  />;\r\n};\r\n\r\n// export const DateTimePicker = ({ input, meta, children, ...props }) =>\r\n//   <>\r\n//     <label><b>{props.label}</b></label>\r\n//     <JalaliDateTimePicker {...props}\r\n//       {...input} children={children}\r\n//       format=\"تاریخ: jYYYY/jMM/jDD ساعت: HH:mm\"\r\n//       onChange={(unix, formatted) => input.onChange(unix)}\r\n//     />\r\n//   </>;\r\n\r\n// export function DatePicker({ input, meta, children, ...props }) {\r\n//   const miladiFormat = 'YYYY-MM-DD HH:mm:ss';\r\n//   const jalaaliFormat = 'jYYYY/jMM/jDD';\r\n//   const regex = /\\d{4}\\/\\d{2}\\/\\d{2}/g;\r\n\r\n//   const toJalaali = x => !!x ? moment(input.value).format(jalaaliFormat) : \"\";\r\n//   const toMilaadi = x => !!x ? moment(text, jalaaliFormat).format(miladiFormat) : \"\";\r\n//   const isCorrect = x => regex.test(x);\r\n\r\n//   const [text, setText] = React.useState(toJalaali(input.value));\r\n//   const [correct, setCorrect] = React.useState(false);\r\n\r\n//   React.useEffect(() => {\r\n//     // console.log(\"input.value changed:\", input.value);\r\n//     setText(toJalaali(input.value));\r\n//   }, [input.value]);\r\n//   React.useEffect(() => {\r\n//     // console.log(\"text changed:\", text);\r\n//     setCorrect(isCorrect(text));\r\n//     if (isCorrect(text))\r\n//       input.onChange(toMilaadi(text));\r\n//   }, [text]);\r\n\r\n//   const correctIcon = <Icon name={correct ? \"check\" : \"times\"}\r\n//     color={correct ? \"green\" : \"red\"} />;\r\n\r\n//   return <Form.Input {...props} value={text} children={children}\r\n//     error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n//     onChange={(e, { value }) => setText(value)}\r\n//     icon={correctIcon} />;\r\n// }\r\n\r\nexport function Timestamp({ input, meta, children, ...props }) {\r\n  const date = !!input.value ? moment(input.value, 'YYYY-MM-DD HH:mm:ss').toDate() : undefined;\r\n  return <>\r\n    <Label>{props.label}</Label>\r\n    <DatePicker\r\n      selected={date}\r\n      onChange={d => {\r\n        input.onChange(moment(d).format('YYYY-MM-DD HH:mm:ss'));\r\n      }}\r\n      showTimeSelect\r\n      dateFormat=\"yyyy MMMM d, HH:mm\"\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={60}\r\n      children={children}\r\n      {...props}\r\n    />\r\n    <div style={{ height: 8 }} />\r\n  </>\r\n}\r\n\r\nexport function FilePicker({ input, meta, children, ...props }) {\r\n  const inputEl = useRef(null);\r\n  const [text, setText] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const onClick = e => {\r\n    e.preventDefault();\r\n    if (inputEl && inputEl.current)\r\n      inputEl.current.click();\r\n  };\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      setText(files[0].name);\r\n      let reader = new FileReader();\r\n      reader.onload = ev => setImage(ev.target.result);\r\n      reader.readAsDataURL(files[0]);\r\n      input.onChange(files[0]);\r\n    } else {\r\n      setImage(null);\r\n    }\r\n  };\r\n  return <>\r\n    <Form.Input {...props} value={text} children={children}\r\n      error={(!!meta && meta.touched && meta.invalid) ? meta.error : false}\r\n      action={<Button icon=\"file\" onClick={onClick} />} />\r\n    <input ref={inputEl} type=\"file\" accept=\"image/*\" hidden onChange={onChange} />\r\n    <div style={{ height: 8 }} />\r\n    <Image hidden={!image} src={image} size=\"large\" style={{ marginBottom: 16 }} />\r\n  </>;\r\n}\r\n\r\nexport const MultiFilePicker = ({ input, meta, children, path, ...props }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const close = () => setOpen(false);\r\n  const values = JSON.parse(!!input.value ? input.value : \"[]\");\r\n  const N = !!values ? values.length : 0;\r\n  let result = [];\r\n  for (let i = 0; i < N; i++) {\r\n    result.push(<div key={i}>\r\n      <Image src={`${config.server_url}storage/${values[i]}`}\r\n        style={{ maxWidth: \"90%\", display: \"inline-block\" }} />\r\n      <Icon name=\"times\" color=\"red\" circular inverted style={{ marginRight: 8 }}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          deleteFile(values[i]);\r\n          values.splice(i, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }} />\r\n    </div>);\r\n  }\r\n  return <>\r\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\r\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\r\n      <Modal trigger={\r\n        <Icon name=\"add\" circular inverted color=\"green\" size=\"small\"\r\n          onClick={() => setOpen(true)}\r\n          style={{ cursor: \"pointer\", float: \"left\" }} />\r\n      }\r\n        open={open} onClose={close}>\r\n        <Modal.Header>انتخاب فایل</Modal.Header>\r\n        <Modal.Content>\r\n          <FilePicker input={{ onChange: setFile }} />\r\n          <Button type='submit' color='green' icon labelPosition=\"left\"\r\n            disabled={!file} loading={submitting} onClick={() => {\r\n              setSubmitting(true);\r\n              saveFile(file, path)\r\n                .then(res => {\r\n                  if (!res) return;\r\n                  values.push(res.data.relative_path);\r\n                  input.onChange(JSON.stringify(values));\r\n                  close();\r\n                })\r\n                .finally(() => {\r\n                  setSubmitting(false);\r\n                });\r\n            }}>\r\n            <Icon name='check' />\r\n            ذخیره\r\n          </Button>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Segment>\r\n    <Segment raised attached=\"bottom\">\r\n      {result}\r\n    </Segment>\r\n  </>;\r\n}\r\n\r\nfunction saveFile(file, path) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"path\", path);\r\n  return API.post(\"files\", formData);\r\n}\r\n\r\nfunction deleteFile(url) {\r\n  return API.delete(\"files\", { data: { path: url } });\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { Center } from 'src/components/Common';\r\nimport { login } from './auth.reducer';\r\nimport { InputField, CHECKS } from 'src/components/FormFields';\r\n\r\n\r\nconst checkMinLen6 = CHECKS.MIN_LEN(6);\r\n\r\nconst LoginForm = reduxForm({ form: 'login' })(\r\n  ({ handleSubmit, pristine, invalid, submitting }) =>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Field component={InputField} name=\"username\" label=\"نام کاربری\" autoFocus\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"password\" label=\"رمز عبور\" type=\"password\"\r\n        required validate={[CHECKS.REQUIRED, checkMinLen6]} />\r\n      <Button type='submit' primary\r\n        disabled={pristine || invalid} loading={submitting}>ورود</Button>\r\n    </Form>\r\n);\r\n\r\nclass Auth extends React.Component {\r\n  onSubmit = values => this.props.login(values.username, values.password);\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \"#abc\" }}>\r\n        <Center>\r\n          <Segment raised style={{ width: 400 }}>\r\n            <LoginForm onSubmit={this.onSubmit} />\r\n          </Segment>\r\n        </Center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, dispatch => ({\r\n  login: (username, password) => dispatch(login(username, password)),\r\n}))(Auth);\r\n",
        "import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Menu, Dropdown, Container } from 'semantic-ui-react';\r\n\r\nimport { logout } from 'src/modules/auth/auth.reducer';\r\n\r\n\r\nconst Navbar = connect(null, dispatch => ({\r\n  logout: () => dispatch(logout()),\r\n}))(withRouter(({ location, logout }) => {\r\n  const route = location.pathname.split('/')[1];\r\n  return (\r\n    <Menu attached inverted>\r\n      <Menu.Item\r\n        name='گزارش'\r\n        active={route === 'report'}\r\n        color=\"blue\"\r\n        icon=\"dashboard\"\r\n        link\r\n        as={Link}\r\n        to=\"/report\"\r\n      />\r\n      <Menu.Item as={Dropdown} item text='جداول'\r\n        active={['users', 'questions'].indexOf(route) >= 0} color=\"blue\">\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item text='کاربران' icon=\"users\" as={Link} to='/users' />\r\n          <Dropdown.Item text='سؤالات' icon=\"question\" as={Link} to='/questions' />\r\n          <Dropdown.Item text='تلاش‌ها' icon=\"file\" as={Link} to='/answers' />\r\n          <Dropdown.Item text='راهنمایی‌ها' icon=\"gift\" as={Link} to='/hints' />\r\n          <Dropdown.Item text='مدال‌ها' icon=\"trophy\" as={Link} to='/achievements' />\r\n        </Dropdown.Menu>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name='تنظیمات'\r\n        active={route === 'setting'}\r\n        color=\"blue\"\r\n        icon=\"setting\"\r\n      />\r\n\r\n      <Menu.Menu position='right'>\r\n        <Menu.Item\r\n          active={true}\r\n          color=\"red\"\r\n          name='خروج'\r\n          icon='sign-out'\r\n          onClick={logout}\r\n        />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}));\r\n\r\nfunction Layout({ children }) {\r\n  return <>\r\n    <Navbar />\r\n    <Container style={{ margin: '16px 0' }}>\r\n      {children}\r\n    </Container>\r\n  </>;\r\n}\r\n\r\nexport default Layout;\r\n",
        "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Segment, Grid, Statistic } from 'semantic-ui-react';\n\nimport { fetchReport } from './report.reducer';\n\nimport Layout from 'src/components/Layout';\n\n\nclass Report extends React.Component {\n  componentDidMount() {\n    this.props.fetchReport();\n  }\n  render() {\n    const { report } = this.props;\n    console.log(\"Report:\", report);\n    return <Layout>\n      <Segment attached=\"top\" raised textAlign=\"center\" color=\"blue\" inverted>\n        <h1>گزارش</h1>\n      </Segment>\n      <Segment attached=\"bottom\" textAlign=\"center\" padded>\n        {report.server &&\n          <Grid columns={3}>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>سرور</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                زمان: {(new Date(report.server.timestamp)).toUTCString()}\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>کاربران</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد کاربران</Statistic.Label>\n                  <Statistic.Value>{report.users.count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment attached=\"top\" color=\"teal\" textAlign=\"center\" inverted raised>\n                <h2>سؤالات</h2>\n              </Segment>\n              <Segment attached=\"bottom\" textAlign=\"center\" raised>\n                <Statistic>\n                  <Statistic.Label>تعداد سؤالات</Statistic.Label>\n                  <Statistic.Value>{report.questions.count}</Statistic.Value>\n                </Statistic>\n              </Segment>\n            </Grid.Column>\n          </Grid>\n        }\n      </Segment>\n    </Layout>;\n  }\n}\n\nexport default connect(\n  state => ({ report: state.report }),\n  dispatch => ({ fetchReport: () => dispatch(fetchReport()) }),\n)(Report);\n",
        "\r\nconst User = {\r\n  id: { label: \"شناسه\" },\r\n  name: { label: \"نام\" },\r\n  phone: { label: \"شماره همراه\" },\r\n  email: { label: \"ایمیل\" },\r\n  role: {\r\n    label: \"نقش\", options: [\r\n      { key: \"null\", text: \"\", value: null },\r\n      { key: \"admin\", text: \"admin\", value: \"admin\" },\r\n      { key: \"user\", text: \"user\", value: \"user\" },\r\n    ]\r\n  },\r\n  is_active: { label: \"فعال\" },\r\n  password: { label: \"رمز عبور\" },\r\n  passwordConfirm: { label: \"تکرار رمز عبور\" },\r\n};\r\n\r\nexport default User;\r\n",
        "import React from 'react';\r\nimport { Table, Icon, Menu, Statistic, Dropdown, Image } from 'semantic-ui-react';\r\n\r\n\r\nconst Column = (entity, index) => col => {\r\n  let c = { key: col.key + index };\r\n  const value = entity[col.key];\r\n  if (!!col.render) {\r\n    if (typeof col.render === 'string') {\r\n      switch (col.render) {\r\n        case 'boolean':\r\n          const trueIcon = <Icon name=\"check\" size=\"large\" color=\"green\" />;\r\n          const falseIcon = <Icon name=\"times\" size=\"large\" color=\"red\" />;\r\n          c.children = !!value ? trueIcon : falseIcon;\r\n          break;\r\n        case 'image':\r\n          c.children = <Image src={value} size=\"large\"/>;\r\n          break;\r\n        default:\r\n          c.children = null;\r\n      }\r\n    } else {\r\n      c.children = col.render(entity);\r\n    }\r\n  } else {\r\n    c.children = value;\r\n  }\r\n  return c;\r\n};\r\n\r\nconst Row = schema => (entity, index) => {\r\n  const c = Column(entity, index);\r\n  return {\r\n    key: index,\r\n    cells: schema.map(col => c(col)),\r\n  };\r\n};\r\n\r\nconst Header = (schema, sortCol, sortDir, handleSort) => {\r\n  return schema.map(col => ({\r\n    key: col.key,\r\n    sorted: sortCol === col.key ? (sortDir === 'asc' ? 'ascending' : 'descending') : null,\r\n    onClick: () => {\r\n      if (col.sortable)\r\n        handleSort(col.key, sortCol === col.key ? (sortDir === 'asc' ? 'desc' : 'asc') : 'asc');\r\n    },\r\n    children: col.header,\r\n  }));\r\n};\r\n\r\nconst Pagination = (colSpan, pagination) => {\r\n  const { current_page, last_page, per_page, setPage, setPageSize } = pagination;\r\n  let pages = [];\r\n  for (let i = current_page - 2; i < current_page + 3; i++) {\r\n    if (i >= 1 && i <= last_page)\r\n      pages.push(<Menu.Item key={`page_${i}`} as='a' active={i === current_page}\r\n        onClick={() => setPage(i)}>{i}</Menu.Item>);\r\n  }\r\n  return (\r\n    <Table.Row>\r\n      <Table.HeaderCell colSpan={colSpan}>\r\n        <Menu pagination style={{ direction: \"ltr\" }}>\r\n          <Menu.Item as='a' icon onClick={() => pagination.setPage(1)}>\r\n            <Icon name='angle double left' />\r\n          </Menu.Item>\r\n          {pages}\r\n          <Menu.Item as='a' icon onClick={() => pagination.setPage(last_page)}>\r\n            <Icon name='angle double right' />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <span style={{ marginRight: 16 }}>\r\n          <span style={{ marginLeft: 4 }}>در هر صفحه:</span>\r\n          <Dropdown selection value={per_page} style={{ minWidth: 48 }}\r\n            options={[10, 20, 50, 100].map(v => ({ key: v, text: v, value: v }))}\r\n            onChange={(e, { value }) => setPageSize(value)} />\r\n        </span>\r\n        <Statistic size='mini' floated=\"right\">\r\n          <Statistic.Label>تعداد صفحات</Statistic.Label>\r\n          <Statistic.Value>{last_page}</Statistic.Value>\r\n        </Statistic>\r\n      </Table.HeaderCell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nexport default function MyTable({ schema, data, pagination, sortCol, sortDir, onSort }) {\r\n  if (!data) data = [];\r\n  return <Table celled sortable\r\n    headerRow={Header(schema, sortCol, sortDir, onSort)}\r\n    renderBodyRow={Row(schema)}\r\n    footerRow={Pagination(schema.length, pagination)}\r\n    tableData={data} />;\r\n}\r\n",
        "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { Segment, Form, Button, Icon, Modal } from 'semantic-ui-react';\r\nimport { reduxForm, submit } from 'redux-form';\r\nimport qs from 'query-string';\r\nimport { withAlert } from 'react-alert';\r\n\r\nimport Layout from 'src/components/Layout';\r\nimport Table from 'src/components/Table';\r\nimport { BackButton } from 'src/components/Common';\r\n\r\nimport { setSelected, SELECTION_STATES } from 'src/redux/flow.reducer';\r\n\r\n\r\nconst SearchForm = (entityName, Fields) =>\r\n  reduxForm({ form: `${entityName}/search` })(\r\n    props => {\r\n      const { handleSubmit, submitting, pristine, reset } = props;\r\n      return <Form onSubmit={handleSubmit}>\r\n\r\n        {Fields(props)}\r\n\r\n        <Button type='submit' icon labelPosition=\"left\" primary\r\n          loading={submitting}>\r\n          <Icon name='search' />\r\n          جستجو\r\n        </Button>\r\n        <Button type='button' icon labelPosition=\"left\" secondary\r\n          disabled={pristine || submitting} onClick={reset}>\r\n          <Icon name='refresh' />\r\n          پاک‌سازی فرم\r\n        </Button>\r\n      </Form>;\r\n    }\r\n  );\r\n\r\nconst SearchResult = withAlert()(({\r\n  history, entityName, tableSchema, data, pagination, deleteAction, alert, sortCol, sortDir, onSort\r\n}) => {\r\n  const flow = useSelector(state => state.flow);\r\n  const dispatch = useDispatch();\r\n  const selectButton = entity =>\r\n    <Icon name=\"check\" color=\"green\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n      dispatch(setSelected(entity));\r\n      history.goBack();\r\n    }} />\r\n  const editButton = entity =>\r\n    <Link to={`/${entityName}/${!!entity ? entity.id : '?'}`}>\r\n      <Icon name=\"edit\" color=\"black\" style={{ cursor: \"pointer\" }} />\r\n    </Link>\r\n  const deleteButton = entity =>\r\n    <Modal\r\n      trigger={\r\n        <Icon name=\"times\" size=\"large\" color=\"red\" style={{ cursor: \"pointer\" }} />\r\n      }\r\n      header='هشدار!'\r\n      content={`آیا از حذف اطمینان دارید؟`}\r\n      actions={[\r\n        {\r\n          key: 'yes', content: 'بله', negative: true,\r\n          onClick: () => deleteAction(!!entity ? entity.id : undefined)\r\n            .then(() => alert.success(\"رکورد با موفقیت حذف شد\"))\r\n        },\r\n        { key: 'no', content: 'خیر' },\r\n      ]}\r\n    />;\r\n  const actionButtons = entity =>\r\n    <>\r\n      {flow.selectionState === SELECTION_STATES.SELECTING && selectButton(entity)}\r\n      {editButton(entity)}\r\n      {deleteButton(entity)}\r\n    </>;\r\n  const schema = [\r\n    { key: \"operations\", header: \"عملیات\", render: actionButtons },\r\n    ...tableSchema,\r\n  ];\r\n  return <Table schema={schema} data={data} pagination={pagination}\r\n    sortCol={sortCol} sortDir={sortDir} onSort={onSort} />;\r\n});\r\n\r\n\r\nclass SelectLayout extends React.Component {\r\n  state = {\r\n    page: 1,\r\n    page_size: 20,\r\n    sortCol: null,\r\n    sortDir: null,\r\n  };\r\n  SF = undefined;\r\n  componentDidMount() {\r\n    this.onSubmit({});\r\n  }\r\n  initForms() {\r\n    this.SF = SearchForm(this.props.entityName, this.props.SearchFields);\r\n  }\r\n  onSubmit = values => {\r\n    const params = qs.parse(this.props.location.search);\r\n    return this.props.fetchMethod({\r\n      filter: { ...params, ...values },\r\n      page: this.state.page,\r\n      page_size: this.state.page_size,\r\n      sortCol: this.state.sortCol,\r\n      sortDir: this.state.sortDir,\r\n    });\r\n  };\r\n  search = () => this.props.search(`${this.props.entityName}/search`);\r\n  setPage = page => {\r\n    this.setState({ page }, this.search);\r\n  };\r\n  setPageSize = page_size => {\r\n    this.setState({ page_size }, this.search);\r\n  };\r\n  render() {\r\n    if (this.props.entityList === undefined) return null;\r\n    if (this.props.SearchFields && !this.SF) this.initForms();\r\n    const { data, current_page, last_page } = this.props.entityList;\r\n    const { search } = this.props.location;\r\n    const { title, entityName, tableSchema, deleteAction } = this.props;\r\n    return <Layout>\r\n      <Segment raised textAlign=\"center\" color=\"blue\" inverted attached=\"top\">\r\n        <h1>{title}</h1>\r\n      </Segment>\r\n      <Segment attached>\r\n        <BackButton history={this.props.history} />\r\n        {this.props.SearchFields && <this.SF onSubmit={this.onSubmit} />}\r\n      </Segment>\r\n      <Segment attached=\"bottom\">\r\n        <Button color=\"green\" icon labelPosition=\"left\"\r\n          as={Link} to={`/${entityName}/new${search}`}>\r\n          <Icon name=\"plus\" />\r\n          جدید\r\n        </Button>\r\n        <SearchResult entityName={entityName}\r\n          tableSchema={tableSchema}\r\n          data={data}\r\n          sortCol={this.state.sortCol}\r\n          sortDir={this.state.sortDir}\r\n          onSort={(sortCol, sortDir) => this.setState({ sortCol, sortDir }, this.search)}\r\n          history={this.props.history}\r\n          pagination={{\r\n            current_page, last_page, per_page: this.state.page_size,\r\n            setPage: this.setPage, setPageSize: this.setPageSize,\r\n          }}\r\n          deleteAction={deleteAction} />\r\n      </Segment>\r\n    </Layout>;\r\n  }\r\n}\r\n\r\nexport default connect(null, dispatch => ({\r\n  search: formName => dispatch(submit(formName)),\r\n}))(SelectLayout);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchUsers, deleteUser } from './users.reducer';\r\nimport User from './users.model';\r\n\r\nimport { InputField, SelectField, booleanOptions } from 'src/components/FormFields';\r\nimport SelectLayout from 'src/components/SelectLayout';\r\n\r\n\r\nfunction UserSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"کاربران\"\r\n    entityName=\"users\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"id\" label={User.id.label} />\r\n        <Field component={InputField} name=\"name\" label={User.name.label} />\r\n        <Field component={InputField} name=\"phone\" label={User.phone.label} />\r\n        <Field component={InputField} name=\"email\" label={User.email.label} />\r\n      </Form.Group>\r\n      <Form.Group widths='equal'>\r\n        <Field component={SelectField} name=\"role\" label={User.role.label}\r\n          options={User.role.options} />\r\n        <Field component={SelectField} name=\"is_active\" label={User.is_active.label}\r\n          options={booleanOptions} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"id\", sortable: true, header: User.id.label },\r\n      { key: \"name\", sortable: true, header: User.name.label },\r\n      { key: \"phone\", sortable: true, header: User.phone.label },\r\n      { key: \"email\", sortable: true, header: User.email.label },\r\n      { key: \"role\", header: User.role.label },\r\n      { key: \"is_active\", header: User.is_active.label, render: \"boolean\" },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.users.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchUsers(searchParams)),\r\n  deleteAction: id => dispatch(deleteUser(id)),\r\n}))(UserSelect);\r\n",
        "import React from 'react';\nimport { Segment, Form, Button, Icon } from 'semantic-ui-react';\nimport { reduxForm } from 'redux-form';\nimport { withAlert } from 'react-alert';\nimport qs from 'query-string';\n\nimport Layout from 'src/components/Layout';\nimport { BackButton } from 'src/components/Common';\n\n\nconst EditForm = (entityName, Fields, isNew) =>\n  reduxForm({ form: `${entityName}/${isNew ? 'new' : 'edit'}`, enableReinitialize: true })(\n    props => {\n      const { handleSubmit, submitting, pristine, reset } = props;\n      return <Form onSubmit={handleSubmit}>\n\n        {Fields(props)}\n\n        <Button type='submit' color='green' icon labelPosition=\"left\"\n          disabled={pristine} loading={submitting}>\n          <Icon name='check' />\n          ذخیره\n        </Button>\n        <Button type='button' secondary icon labelPosition=\"left\"\n          disabled={pristine || submitting} onClick={reset}>\n          <Icon name='refresh' />\n          لغو تغییرات\n        </Button>\n      </Form>;\n    }\n  );\n\nclass EditLayout extends React.Component {\n  NF = undefined;\n  EF = undefined;\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    if (id)\n      this.fetchEntity(id);\n    else\n      this.props.resetEntity(qs.parse(this.props.location.search));\n  }\n  initForms() {\n    this.NF = EditForm(this.props.entityName, this.props.NewFields, true);\n    this.EF = EditForm(this.props.entityName, this.props.EditFields, false);\n  }\n  fetchEntity = id => {\n    return this.props.fetchEntity(id);\n  };\n  updateEntity = id => values => {\n    return this.props.updateEntity(id, values)\n      .then(() => this.props.alert.success(\"رکورد با موفقیت اصلاح شد\"));\n  };\n  newEntity = values => {\n    return this.props.newEntity(values)\n      .then(() => {\n        this.props.alert.success(\"رکورد با موفقیت ایجاد شد\");\n        this.props.history.goBack();\n      });\n  };\n  render() {\n    if (this.props.NewFields && !this.NF) this.initForms();\n    if (this.props.EditFields && !this.EF) this.initForms();\n    const { id } = this.props.match.params;\n    const { title, entity } = this.props;\n    return <Layout>\n      <div style={{ maxWidth: 600, margin: '0 auto' }}>\n        <Segment raised attached=\"top\" textAlign=\"center\" color=\"blue\" inverted>\n          <h2>{title}</h2>\n        </Segment>\n        <Segment raised padded attached=\"bottom\">\n          <BackButton history={this.props.history} />\n          {id\n            ? (this.props.EditFields && <this.EF onSubmit={this.updateEntity(id)} initialValues={entity} />)\n            : (this.props.NewFields && <this.NF onSubmit={this.newEntity} initialValues={entity} />)}\n        </Segment>\n      </div>\n    </Layout>;\n  }\n}\n\nexport default withAlert()(EditLayout);\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchUser, updateUser, newUser } from './users.reducer';\r\nimport User from './users.model';\r\n\r\nimport { CHECKS, InputField, SelectField, booleanOptions } from 'src/components/FormFields';\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction UserEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"کاربر\"\r\n    entityName=\"users\"\r\n    NewFields={formProps => <>\r\n      <Field component={InputField} name=\"name\" label={User.name.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"phone\" label={User.phone.label} />\r\n      <Field component={InputField} name=\"email\" label={User.email.label} />\r\n      <Field component={InputField} name=\"password\" label={User.password.label} type=\"password\"\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"passwordConfirm\" label={User.passwordConfirm.label} type=\"password\"\r\n        required validate={CHECKS.REQUIRED} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"name\" label={User.name.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={InputField} name=\"phone\" label={User.phone.label} />\r\n      <Field component={InputField} name=\"email\" label={User.email.label} />\r\n      <Field component={InputField} name=\"role\" label={User.email.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={SelectField} name=\"is_active\" label={User.is_active.label}\r\n        options={booleanOptions} />\r\n      <div style={{ marginBottom: 16 }}>\r\n        <Button as={Link} to={`/user_hints?user_id=${!!formProps.initialValues ? formProps.initialValues.id : 'null'}`}>راهنمایی‌ها</Button>\r\n        <Button as={Link} to={`/user_achievements?user_id=${!!formProps.initialValues ? formProps.initialValues.id : 'null'}`}>مدال‌ها</Button>\r\n      </div>\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.users.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchUser(id)),\r\n    updateEntity: (id, entity) => dispatch(updateUser(id, entity)),\r\n    newEntity: entity => dispatch(newUser(entity)),\r\n  })\r\n)(UserEdit);\r\n",
        "import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport UserSelect from './users.select';\nimport UserEdit from './users.edit';\n\n\nexport default function Users({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={UserSelect} />\n      <Route exact path={`${url}/new`} component={UserEdit} />\n      <Route exact path={`${url}/:id`} component={UserEdit} />\n    </Switch>\n  );\n}\n",
        "\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchQuestions, deleteQuestion } from './questions.reducer';\r\nimport Question from './questions.model';\r\n\r\nimport { InputField, SelectField } from 'src/components/FormFields';\r\nimport SelectLayout from 'src/components/SelectLayout';\r\n\r\n\r\nfunction QuestionSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"سؤالات\"\r\n    entityName=\"questions\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"id\" label={Question.id.label} />\r\n        <Field component={InputField} name=\"title\" label={Question.title.label} />\r\n      </Form.Group>\r\n      <Form.Group widths='equal'>\r\n        <Field component={SelectField} options={Question.locale.options}\r\n          name=\"locale\" label={Question.locale.label} />\r\n        <Field component={SelectField} options={Question.time_type.options}\r\n          name=\"time_type\" label={Question.time_type.label} />\r\n        <Field component={SelectField} options={Question.answer_type.options}\r\n          name=\"answer_type\" label={Question.answer_type.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"id\", header: Question.id.label },\r\n      { key: \"locale\", header: Question.locale.label },\r\n      { key: \"title\", header: Question.title.label },\r\n      { key: \"time_type\", header: Question.time_type.label },\r\n      { key: \"answer_type\", header: Question.answer_type.label },\r\n      { key: \"start_time\", header: Question.start_time.label },\r\n      { key: \"end_time\", header: Question.end_time.label },\r\n      { key: \"score\", header: Question.score.label },\r\n      { key: \"tries\", header: Question.tries.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.questions.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchQuestions(searchParams)),\r\n  deleteAction: id => dispatch(deleteQuestion(id)),\r\n}))(QuestionSelect);\r\n",
        "import React, { useState } from 'react';\r\nimport { Form, Input, Button, Icon, Image, Segment, Modal } from 'semantic-ui-react';\r\n\r\nimport { FilePicker } from 'src/components/FormFields';\r\n\r\nimport { API } from 'src/redux/store_config';\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nexport const ChoicesField = ({ input, meta, children, path, ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const onOpen = () => setOpen(true);\r\n  const onClose = () => setOpen(false);\r\n  const values = !!input.value ? JSON.parse(input.value) : [];\r\n  const N = !!values ? values.length : 0;\r\n\r\n  // =============  CHOICE MODAL  =============\r\n  const ChoiceModal = () => {\r\n    const [obj, setObj] = useState({ type: \"text\", value: null });\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const onSubmit = () => {\r\n      if (obj.type === \"text\") {\r\n        values.push({ type: \"text\", value: \"\" });\r\n        input.onChange(JSON.stringify(values));\r\n        onClose();\r\n      } else {\r\n        setSubmitting(true);\r\n        saveFile(obj.value, \"q_img\")\r\n          .then(res => {\r\n            if (!res) return;\r\n            values.push({ type: \"image\", value: res.data.relative_path });\r\n            input.onChange(JSON.stringify(values));\r\n            onClose();\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(false);\r\n          });\r\n      }\r\n    };\r\n    return <>\r\n      <Form.Dropdown selection options={[\r\n        { key: \"text\", text: \"متنی\", value: \"text\" },\r\n        { key: \"image\", text: \"تصویری\", value: \"image\" },\r\n      ]}\r\n        value={obj.type}\r\n        onChange={(e, { value }) => setObj({ type: value, value: null })}\r\n      />\r\n      <div style={{ height: 8 }} />\r\n      {obj.type === \"image\"\r\n        ? <FilePicker input={{ onChange: file => setObj({ type: \"image\", value: file }) }} />\r\n        : null\r\n      }\r\n      <Button type='submit' color='green' icon labelPosition=\"left\"\r\n        disabled={obj.type === \"image\" && !obj.value}\r\n        onClick={onSubmit} loading={submitting}>\r\n        <Icon name='check' />\r\n        ذخیره\r\n      </Button>\r\n    </>\r\n  };\r\n\r\n  let result = [];\r\n  for (let i = 0; i < N; i++)\r\n    result.push(<ChoiceRow key={i} entity={values[i]} index={i} values={values} input={input} />);\r\n\r\n  return <>\r\n    <Segment raised attached=\"top\" color=\"blue\" inverted>\r\n      <h4 style={{ display: \"inline\" }}>{props.label}</h4>\r\n      <Modal trigger={\r\n        <Icon name=\"add\" circular inverted color=\"green\" size=\"small\" onClick={onOpen}\r\n          style={{ cursor: \"pointer\", float: \"left\" }} />\r\n      }\r\n        open={open} onClose={onClose}>\r\n        <Modal.Content>\r\n          <ChoiceModal />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Segment>\r\n    <Segment raised attached=\"bottom\">\r\n      {result}\r\n    </Segment>\r\n  </>;\r\n};\r\n\r\nconst ChoiceRow = ({ entity, index, values, input }) => <div style={{ margin: \"4px 0\" }}>\r\n  {entity.type === 'image'\r\n    ? <>\r\n      <Image src={`${config.server_url}storage/${entity.value}`}\r\n        style={{ maxWidth: \"90%\", display: \"inline-block\" }} />\r\n      <Icon name=\"times\" color=\"red\" circular inverted style={{ marginRight: 8 }}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          deleteFile(values[index]);\r\n          values.splice(index, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }} />\r\n    </>\r\n    : <Input fluid value={entity.value}\r\n      onChange={(e, { value }) => {\r\n        values[index].value = value;\r\n        input.onChange(JSON.stringify(values));\r\n      }}\r\n      action={{\r\n        icon: \"minus\", color: \"red\", onClick: (e) => {\r\n          e.preventDefault();\r\n          values.splice(index, 1);\r\n          input.onChange(JSON.stringify(values));\r\n        }\r\n      }}\r\n      style={{ marginTop: index > 0 ? 16 : 0 }} />\r\n  }\r\n</div>;\r\n\r\n\r\nfunction saveFile(file, path) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"path\", path);\r\n  return API.post(\"files\", formData);\r\n}\r\n\r\nfunction deleteFile(url) {\r\n  return API.delete(\"files\", { data: { path: url } });\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport {\r\n  resetEntity, fetchQuestion,\r\n  updateQuestion, newQuestion\r\n} from './questions.reducer';\r\nimport Question from './questions.model';\r\nimport { ChoicesField } from './questions.choices';\r\n\r\nimport {\r\n  InputField, SelectField, Timestamp,\r\n  MultiInputField, MultiFilePicker\r\n} from 'src/components/FormFields';\r\nimport EditLayout from 'src/components/EditLayout';\r\n\r\n\r\nfunction QuestionEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"سؤال\"\r\n    entityName=\"questions\"\r\n    NewFields={formProps => <>\r\n      <Field component={SelectField} options={Question.locale.options}\r\n        name=\"locale\" label={Question.locale.label} />\r\n      <Field component={InputField} name=\"title\" label={Question.title.label} />\r\n      <Field component={SelectField} options={Question.time_type.options}\r\n        name=\"time_type\" label={Question.time_type.label} />\r\n      <Field component={SelectField} options={Question.answer_type.options}\r\n        name=\"answer_type\" label={Question.answer_type.label} />\r\n      <Field component={Timestamp} name=\"start_time\" label={Question.start_time.label} />\r\n      <Field component={Timestamp} name=\"end_time\" label={Question.end_time.label} />\r\n      <Field component={InputField} name=\"score\" label={Question.score.label} />\r\n      <Field component={InputField} name=\"tries\" label={Question.tries.label} />\r\n\r\n      <Field component={MultiFilePicker} name=\"images\" label={Question.images.label} path=\"q_img\" />\r\n      <Field component={ChoicesField} name=\"choices\" label={Question.choices.label} />\r\n      <Field component={MultiInputField} name=\"letters\" label={Question.letters.label} />\r\n      <Field component={MultiInputField} name=\"solutions\" label={Question.solutions.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Question.id.label} disabled />\r\n      <Field component={SelectField} options={Question.locale.options}\r\n        name=\"locale\" label={Question.locale.label} />\r\n      <Field component={InputField} name=\"title\" label={Question.title.label} />\r\n      <Field component={SelectField} options={Question.time_type.options}\r\n        name=\"time_type\" label={Question.time_type.label} />\r\n      <Field component={SelectField} options={Question.answer_type.options}\r\n        name=\"answer_type\" label={Question.answer_type.label} />\r\n      <Field component={Timestamp} name=\"start_time\" label={Question.start_time.label} />\r\n      <Field component={Timestamp} name=\"end_time\" label={Question.end_time.label} />\r\n      <Field component={InputField} name=\"score\" label={Question.score.label} />\r\n      <Field component={InputField} name=\"tries\" label={Question.tries.label} />\r\n\r\n      <Field component={MultiFilePicker} name=\"images\" label={Question.images.label} path=\"q_img\" />\r\n      <Field component={ChoicesField} name=\"choices\" label={Question.choices.label} />\r\n      <Field component={MultiInputField} name=\"letters\" label={Question.letters.label} />\r\n      <Field component={MultiInputField} name=\"solutions\" label={Question.solutions.label} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.questions.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchQuestion(id)),\r\n    updateEntity: (id, entity) => dispatch(updateQuestion(id, entity)),\r\n    newEntity: entity => dispatch(newQuestion(entity)),\r\n  })\r\n)(QuestionEdit);\r\n",
        "import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport QuestionSelect from './questions.select';\nimport QuestionEdit from './questions.edit';\n\n\nexport default function Questions({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={QuestionSelect} />\n      <Route exact path={`${url}/new`} component={QuestionEdit} />\n      <Route exact path={`${url}/:id`} component={QuestionEdit} />\n    </Switch>\n  );\n}\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchAnswers, deleteAnswer } from './answers.reducer';\r\nimport Answer from './answers.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { InputField, SelectField, booleanOptions, EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction AnswerSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"تلاش‌ها\"\r\n    entityName=\"answers\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"questions\" formName=\"answers/search\"\r\n          name=\"question_id\" label={Answer.question_id.label} />\r\n        <Field component={EntityField} entityName=\"users\" formName=\"answers/search\"\r\n          name=\"user_id\" label={Answer.user_id.label} />\r\n      </Form.Group>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"text\" label={Answer.text.label} />\r\n        <Field component={SelectField} name=\"correct\" label={Answer.correct.label}\r\n          options={booleanOptions} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"question_id\", header: Answer.question_id.label },\r\n      { key: \"user_id\", header: Answer.user_id.label },\r\n      { key: \"text\", header: Answer.text.label },\r\n      { key: \"correct\", header: Answer.correct.label, render: \"boolean\" },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.answers.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchAnswers(searchParams)),\r\n  deleteAction: id => dispatch(deleteAnswer(id)),\r\n}))(AnswerSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchAnswer, updateAnswer, newAnswer } from './answers.reducer';\r\nimport Answer from './answers.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField, SelectField, booleanOptions } from 'src/components/FormFields';\r\n\r\n\r\nfunction AnswerEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"تلاش\"\r\n    entityName=\"answers\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"answers/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Answer.question_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"answers/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={Answer.user_id.label} />\r\n      <Field component={InputField} name=\"text\" label={Answer.text.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Answer.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"answers/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Answer.question_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"answers/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={Answer.user_id.label} />\r\n      <Field component={InputField} name=\"text\" label={Answer.text.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n      <Field component={SelectField} name=\"correct\" label={Answer.correct.label}\r\n        options={booleanOptions} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.answers.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchAnswer(id)),\r\n    updateEntity: (id, entity) => dispatch(updateAnswer(id, entity)),\r\n    newEntity: entity => dispatch(newAnswer(entity)),\r\n  })\r\n)(AnswerEdit);\r\n",
        "import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AnswerSelect from './answers.select';\nimport AnswerEdit from './answers.edit';\n\n\nexport default function Answers({ match: { url } }) {\n  return (\n    <Switch>\n      <Route exact path={`${url}`} component={AnswerSelect} />\n      <Route exact path={`${url}/new`} component={AnswerEdit} />\n      <Route exact path={`${url}/:id`} component={AnswerEdit} />\n    </Switch>\n  );\n}\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchHints, deleteHint } from './hints.reducer';\r\nimport Hint from './hints.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction HintSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"راهنمایی‌ها\"\r\n    entityName=\"hints\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"questions\" formName=\"hints/search\"\r\n          name=\"question_id\" label={Hint.question_id.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"question_id\", header: Hint.question_id.label },\r\n      { key: \"type\", header: Hint.type.label },\r\n      { key: \"value\", header: Hint.value.label },\r\n      { key: \"price\", header: Hint.price.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.hints.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchHints(searchParams)),\r\n  deleteAction: id => dispatch(deleteHint(id)),\r\n}))(HintSelect);\r\n",
        "import React, { useState } from 'react';\r\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react';\r\nimport { useSelector } from 'react-redux';\r\nimport { formValueSelector } from 'redux-form';\r\n\r\nimport { FilePicker, MultiInputField } from 'src/components/FormFields';\r\n\r\nimport { API } from 'src/redux/store_config';\r\nimport config from 'src/app.config.json';\r\n\r\n\r\nexport const HintField = ({ input, meta, children, path, formProps, ...props }) => {\r\n  const type = useSelector(state => formValueSelector(formProps.form)(state, \"type\"));\r\n  switch (type) {\r\n    case \"image\":\r\n      return <ImageHint value={input.value} onChange={input.onChange} />;\r\n    case \"choice\":\r\n      return <MultiInputField name=\"choices\" label=\"اندیس گزینه‌های حذفی (از صفر)\" input={input} />;\r\n    case \"letter\":\r\n      return <MultiInputField name=\"letters\" label=\"اندیس حروف حذفی (از صفر)\" input={input} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction ImageHint({ value, onChange }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const onOpen = () => setOpen(true);\r\n  const onClose = () => setOpen(false);\r\n  const onSubmit = () => {\r\n    setSubmitting(true);\r\n    saveFile(file, \"q_img\")\r\n      .then(res => {\r\n        if (!res) return;\r\n        onChange(res.data.relative_path);\r\n        onClose();\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n  return <div style={{ marginBottom: 16 }}>\r\n    <Modal trigger={<Button onClick={e => { e.preventDefault(); onOpen(); }}>انتخاب تصویر</Button>}\r\n      open={open} onClose={onClose}>\r\n      <Modal.Content>\r\n        <FilePicker input={{ onChange: setFile }} />\r\n        <Button type='submit' color='green' icon labelPosition=\"left\"\r\n          disabled={!file} onClick={onSubmit} loading={submitting}>\r\n          <Icon name='check' />\r\n          ذخیره\r\n      </Button>\r\n      </Modal.Content>\r\n    </Modal>\r\n    {!!value ? <Image src={`${config.server_url}storage/${value}`} /> : null}\r\n  </div>;\r\n}\r\n\r\nfunction saveFile(file, path) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"path\", path);\r\n  return API.post(\"files\", formData);\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchHint, updateHint, newHint } from './hints.reducer';\r\nimport Hint from './hints.model';\r\nimport { HintField } from './hints.fields';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField, SelectField } from 'src/components/FormFields';\r\n\r\n\r\nfunction HintEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"راهنمایی\"\r\n    entityName=\"hints\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"hints/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Hint.question_id.label} />\r\n      <Field component={InputField} name=\"price\" label={Hint.price.label} />\r\n      <Field component={SelectField} options={Hint.type.options}\r\n        id=\"type\" name=\"type\" label={Hint.type.label} />\r\n      <Field component={HintField} name=\"value\" label={Hint.value.label} formProps={formProps} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Hint.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"questions\" formName=\"hints/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"question_id\" label={Hint.question_id.label} />\r\n      <Field component={InputField} name=\"price\" label={Hint.price.label} />\r\n      <Field component={SelectField} options={Hint.type.options}\r\n        name=\"type\" label={Hint.type.label} />\r\n      <Field component={HintField} name=\"value\" label={Hint.value.label} formProps={formProps} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.hints.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchHint(id)),\r\n    updateEntity: (id, entity) => dispatch(updateHint(id, entity)),\r\n    newEntity: entity => dispatch(newHint(entity)),\r\n  })\r\n)(HintEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport HintSelect from './hints.select';\r\nimport HintEdit from './hints.edit';\r\n\r\n\r\nexport default function Hints({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={HintSelect} />\r\n      <Route exact path={`${url}/new`} component={HintEdit} />\r\n      <Route exact path={`${url}/:id`} component={HintEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchUserHints, deleteUserHint } from './user_hints.reducer';\r\nimport UserHint from './user_hints.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserHintSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"راهنمایی‌های کاربران\"\r\n    entityName=\"user_hints\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/search\"\r\n          name=\"hint_id\" label={UserHint.hint_id.label} />\r\n        <Field component={EntityField} entityName=\"users\" formName=\"user_hints/search\"\r\n          name=\"user_id\" label={UserHint.user_id.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"hint_id\", header: UserHint.hint_id.label },\r\n      { key: \"user_id\", header: UserHint.user_id.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.user_hints.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchUserHints(searchParams)),\r\n  deleteAction: id => dispatch(deleteUserHint(id)),\r\n}))(UserHintSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchUserHint, updateUserHint, newUserHint } from './user_hints.reducer';\r\nimport UserHint from './user_hints.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserHintEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"راهنمایی کاربر\"\r\n    entityName=\"user_hints\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"hint_id\" label={UserHint.hint_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_hints/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserHint.user_id.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={UserHint.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"hints\" formName=\"user_hints/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"hint_id\" label={UserHint.hint_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_hints/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserHint.user_id.label} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.user_hints.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchUserHint(id)),\r\n    updateEntity: (id, entity) => dispatch(updateUserHint(id, entity)),\r\n    newEntity: entity => dispatch(newUserHint(entity)),\r\n  })\r\n)(UserHintEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport UserHintSelect from './user_hints.select';\r\nimport UserHintEdit from './user_hints.edit';\r\n\r\n\r\nexport default function UserHints({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={UserHintSelect} />\r\n      <Route exact path={`${url}/new`} component={UserHintEdit} />\r\n      <Route exact path={`${url}/:id`} component={UserHintEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "\r\nconst Achievement = {\r\n  id: { label: \"شناسه\" },\r\n  code: { label: \"کد\" },\r\n};\r\n\r\nexport default Achievement;\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchAchievements, deleteAchievement } from './achievements.reducer';\r\nimport Achievement from './achievements.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { InputField } from 'src/components/FormFields';\r\n\r\n\r\nfunction AchievementSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"مدال‌ها\"\r\n    entityName=\"achievements\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={InputField} name=\"code\" label={Achievement.code.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"code\", header: Achievement.code.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.achievements.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchAchievements(searchParams)),\r\n  deleteAction: id => dispatch(deleteAchievement(id)),\r\n}))(AchievementSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchAchievement, updateAchievement, newAchievement } from './achievements.reducer';\r\nimport Achievement from './achievements.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField } from 'src/components/FormFields';\r\n\r\n\r\nfunction AchievementEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"مدال\"\r\n    entityName=\"achievements\"\r\n    NewFields={formProps => <>\r\n      <Field component={InputField} name=\"code\" label={Achievement.code.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={Achievement.id.label} disabled />\r\n      <Field component={InputField} name=\"code\" label={Achievement.code.label}\r\n        required validate={CHECKS.REQUIRED} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.achievements.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchAchievement(id)),\r\n    updateEntity: (id, entity) => dispatch(updateAchievement(id, entity)),\r\n    newEntity: entity => dispatch(newAchievement(entity)),\r\n  })\r\n)(AchievementEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport AchievementSelect from './achievements.select';\r\nimport AchievementEdit from './achievements.edit';\r\n\r\n\r\nexport default function Achievements({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={AchievementSelect} />\r\n      <Route exact path={`${url}/new`} component={AchievementEdit} />\r\n      <Route exact path={`${url}/:id`} component={AchievementEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { fetchUserAchievements, deleteUserAchievement } from './user_achievements.reducer';\r\nimport UserAchievement from './user_achievements.model';\r\n\r\nimport SelectLayout from 'src/components/SelectLayout';\r\nimport { EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserAchievementSelect(props) {\r\n  return <SelectLayout {...props}\r\n    title=\"مدال‌های کاربران\"\r\n    entityName=\"user_achievements\"\r\n    SearchFields={formProps => <>\r\n      <Form.Group widths='equal'>\r\n        <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/search\"\r\n          name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\r\n        <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/search\"\r\n          name=\"user_id\" label={UserAchievement.user_id.label} />\r\n      </Form.Group>\r\n    </>}\r\n    tableSchema={[\r\n      { key: \"achievement_id\", header: UserAchievement.achievement_id.label },\r\n      { key: \"user_id\", header: UserAchievement.user_id.label },\r\n    ]}\r\n  />;\r\n}\r\n\r\nexport default connect(state => ({\r\n  entityList: state.user_achievements.entityList,\r\n}), dispatch => ({\r\n  fetchMethod: searchParams => dispatch(fetchUserAchievements(searchParams)),\r\n  deleteAction: id => dispatch(deleteUserAchievement(id)),\r\n}))(UserAchievementSelect);\r\n",
        "import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\n\r\nimport { resetEntity, fetchUserAchievement, updateUserAchievement, newUserAchievement } from './user_achievements.reducer';\r\nimport UserAchievement from './user_achievements.model';\r\n\r\nimport EditLayout from 'src/components/EditLayout';\r\nimport { CHECKS, InputField, EntityField } from 'src/components/FormFields';\r\n\r\n\r\nfunction UserAchievementEdit(props) {\r\n  return <EditLayout {...props}\r\n    title=\"مدال کاربر\"\r\n    entityName=\"user_achievements\"\r\n    NewFields={formProps => <>\r\n      <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/new\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserAchievement.user_id.label} />\r\n    </>}\r\n    EditFields={formProps => <>\r\n      <Field component={InputField} name=\"id\" label={UserAchievement.id.label} disabled />\r\n      <Field component={EntityField} entityName=\"achievements\" formName=\"user_achievements/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"achievement_id\" label={UserAchievement.achievement_id.label} />\r\n      <Field component={EntityField} entityName=\"users\" formName=\"user_achievements/edit\"\r\n        required validate={CHECKS.REQUIRED}\r\n        name=\"user_id\" label={UserAchievement.user_id.label} />\r\n    </>}\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  state => ({ entity: state.user_achievements.entity }),\r\n  dispatch => ({\r\n    resetEntity: params => dispatch(resetEntity(params)),\r\n    fetchEntity: id => dispatch(fetchUserAchievement(id)),\r\n    updateEntity: (id, entity) => dispatch(updateUserAchievement(id, entity)),\r\n    newEntity: entity => dispatch(newUserAchievement(entity)),\r\n  })\r\n)(UserAchievementEdit);\r\n",
        "import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport UserAchievementSelect from './user_achievements.select';\r\nimport UserAchievementEdit from './user_achievements.edit';\r\n\r\n\r\nexport default function UserAchievements({ match: { url } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${url}`} component={UserAchievementSelect} />\r\n      <Route exact path={`${url}/new`} component={UserAchievementEdit} />\r\n      <Route exact path={`${url}/:id`} component={UserAchievementEdit} />\r\n    </Switch>\r\n  );\r\n}\r\n",
        "import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nimport Layout from 'src/components/Layout';\r\n\r\n\r\nfunction NotFound() {\r\n  return <Layout>\r\n    <Segment raised textAlign=\"center\" color=\"blue\" inverted>\r\n      <h1>صفحه‌ی مورد نظر یافت نشد</h1>\r\n    </Segment>\r\n  </Layout>;\r\n}\r\n\r\nexport default NotFound;\r\n",
        "import React from 'react';\r\nimport {\r\n  BrowserRouter, Switch,\r\n  Route, Redirect\r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchMe, logout, isAuthenticated, getMe } from 'src/modules/auth/auth.reducer';\r\n\r\nimport Auth from 'src/modules/auth';\r\nimport Report from 'src/modules/report';\r\nimport Users from 'src/modules/users';\r\nimport Questions from 'src/modules/questions';\r\nimport Answers from 'src/modules/answers';\r\nimport Hints from 'src/modules/hints';\r\nimport UserHints from 'src/modules/user_hints';\r\nimport Achievements from 'src/modules/achievements';\r\nimport UserAchievements from 'src/modules/user_achievements';\r\nimport NotFound from 'src/modules/NotFound';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n});\r\n\r\nconst AuthRoute = connect(mapStateToProps)(\r\n  ({ isAuthenticated, ...otherProps }) =>\r\n    isAuthenticated\r\n      ? <Route {...otherProps} />\r\n      : <Redirect to=\"/\" />\r\n);\r\n\r\nconst UnAuthRoute = connect(mapStateToProps)(\r\n  ({ isAuthenticated, ...otherProps }) => {\r\n    return isAuthenticated\r\n      ? <Redirect to=\"/report\" />\r\n      : <Route {...otherProps} />\r\n  }\r\n);\r\n\r\nfunction Routes({ fetchMe, logout, isAuthenticated, me }) {\r\n  if (isAuthenticated) {\r\n    if (!me || Object.keys(me).length === 0) {\r\n      fetchMe();\r\n      return <div />;\r\n    } else if (me.role !== 'admin') {\r\n      logout();\r\n      alert(\"فقط مدیر سامانه اجازه دسترسی دارد\");\r\n    }\r\n  }\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <UnAuthRoute exact path=\"/\" component={Auth} />\r\n        <AuthRoute exact path=\"/report\" component={Report} />\r\n        <AuthRoute path=\"/users\" component={Users} />\r\n        <AuthRoute path=\"/questions\" component={Questions} />\r\n        <AuthRoute path=\"/answers\" component={Answers} />\r\n        <AuthRoute path=\"/hints\" component={Hints} />\r\n        <AuthRoute path=\"/user_hints\" component={UserHints} />\r\n        <AuthRoute path=\"/achievements\" component={Achievements} />\r\n        <AuthRoute path=\"/user_achievements\" component={UserAchievements} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default connect(state => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n  me: getMe(state),\r\n}), dispatch => ({\r\n  fetchMe: () => dispatch(fetchMe()),\r\n  logout: () => dispatch(logout()),\r\n}))(Routes);\r\n",
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n",
        "import React from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\r\n\r\nimport { store, persistor } from 'src/redux/store_config';\r\nimport ErrorHandler, { AlertTemplate } from 'src/components/ErrorHandler';\r\nimport Routes from 'src/Routes';\r\n\r\nimport 'src/font/fonts.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './App.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <AlertProvider template={AlertTemplate}\r\n          timeout={5000} position={positions.TOP_CENTER} transition={transitions.SCALE}>\r\n          <ErrorHandler>\r\n            <Routes />\r\n          </ErrorHandler>\r\n        </AlertProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n"
    ],
    "sourceRoot": ""
}
